<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://sorbet.org/blog</id>
    <title>Sorbet Blog</title>
    <updated>2019-05-16T06:00:00Z</updated>
    <generator>Feed for Node.js</generator>
    <link rel="alternate" href="https://sorbet.org/blog"/>
    <subtitle>The best place to stay up-to-date with the latest Sorbet news and events.</subtitle>
    <logo>https://sorbet.org/img/sorbet-logo-white-sparkles.svg</logo>
    <rights>© 2019 Stripe</rights>
    <entry>
        <title type="html"><![CDATA[State of Sorbet May 2019]]></title>
        <id>https://sorbet.org/blog/2019/05/16/state-of-sorbet-may-2019.html</id>
        <link href="https://sorbet.org/blog/2019/05/16/state-of-sorbet-may-2019.html">
        </link>
        <updated>2019-05-16T06:00:00Z</updated>
        <summary type="html"><![CDATA[<p>Stripe uses Ruby extensively<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>. It’s the main language we use to build
the business logic behind our APIs, and our Ruby codebase is on the order of
millions of lines of code. At that scale and with our expected rapid growth rate
two things are true: 1) we need all the tooling help we can get to understand
and modify that much code, and 2) a total rewrite in a statically typed language
would be a massive undertaking.</p>
<p>With that in mind, in October 2017 a small team of engineers conceived of
building Sorbet, a gradual static type system for Ruby. Static type systems look
for certain classes of potential errors without running your code. A gradual
static type system allows you to gradually add static typing, leaving some parts
of your code purely dynamically typed. Other examples of gradual static type
systems that have been added onto existing dynamically typed languages are
<a href="https://flow.org/">Flow</a> and <a href="https://www.typescriptlang.org/">TypeScript</a> for Javascript, and <a href="https://hacklang.org/">Hack</a> for PHP. In this post, we'd
like to give a brief update about what we've been working on, and where we're
going next.</p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1"  class="footnote-item"><p>We also use plenty of of other languages including Go for
infrastructure tasks, Scala for data wrangling, and JavaScript for client-side
work. <a href="#fnref1" class="footnote-backref">↩</a></p>
</li>
</ol>
</section>
]]></summary>
        <author>
            <name>James Iry</name>
            <uri>https://twitter.com/jamesiry</uri>
        </author>
    </entry>
</feed>