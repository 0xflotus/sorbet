test/cli/suggest-sig/suggest-sig.rb:5: This function does not have a `sig` http://go/e/7017
     5 |def hazTwoArgs(a, b); 1; end;
        ^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:5: Insert `sig {params(a: T.untyped, b: T.untyped).returns(Integer)}
`
     5 |def hazTwoArgs(a, b); 1; end;
        ^

test/cli/suggest-sig/suggest-sig.rb:8: Method `someCondition` does not exist on `Object` http://go/e/7003
     8 |  if someCondition
             ^^^^^^^^^^^^^

test/cli/suggest-sig/suggest-sig.rb:7: This function does not have a `sig` http://go/e/7017
     7 |def baz
        ^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:7: Insert `sig {returns(T.any(T::Array[T.untyped], String))}
`
     7 |def baz
        ^

test/cli/suggest-sig/suggest-sig.rb:18: This function does not have a `sig` http://go/e/7017
    18 |def bla; give_me_void; end
        ^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:18: Insert `sig {void}
`
    18 |def bla; give_me_void; end
        ^

test/cli/suggest-sig/suggest-sig.rb:21: Method `someCondition` does not exist on `Object` http://go/e/7003
    21 |  if someCondition
             ^^^^^^^^^^^^^

test/cli/suggest-sig/suggest-sig.rb:20: This function does not have a `sig` http://go/e/7017
    20 |def bbq
        ^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:20: Insert `sig {void}
`
    20 |def bbq
        ^

test/cli/suggest-sig/suggest-sig.rb:28: This function does not have a `sig` http://go/e/7017
    28 |def idk(a); a / a + a * a; end
        ^^^^^^^^^^

test/cli/suggest-sig/suggest-sig.rb:30: This function does not have a `sig` http://go/e/7017
    30 |def give_me_literal; 1; end;
        ^^^^^^^^^^^^^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:30: Insert `sig {returns(Integer)}
`
    30 |def give_me_literal; 1; end;
        ^

test/cli/suggest-sig/suggest-sig.rb:32: This function does not have a `sig` http://go/e/7017
    32 |def give_me_literal_nested; [[1]]; end;
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:32: Insert `sig {returns(T::Array[T::Array[Integer]])}
`
    32 |def give_me_literal_nested; [[1]]; end;
        ^

test/cli/suggest-sig/suggest-sig.rb:34: This function does not have a `sig` http://go/e/7017
    34 |private def root_private; end
                ^^^^^^^^^^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:34: Insert `sig {returns(NilClass)}
`
    34 |private def root_private; end
        ^

test/cli/suggest-sig/suggest-sig.rb:36: This function does not have a `sig` http://go/e/7017
    36 |protected def root_protected; end
                  ^^^^^^^^^^^^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:36: Insert `sig {returns(NilClass)}
`
    36 |protected def root_protected; end
        ^

test/cli/suggest-sig/suggest-sig.rb:44: This function does not have a `sig` http://go/e/7017
    44 |def foo(a)
        ^^^^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:44: Insert `sig {params(a: Integer).returns(Integer)}
`
    44 |def foo(a)
        ^

test/cli/suggest-sig/suggest-sig.rb:54: This function does not have a `sig` http://go/e/7017
    54 |def fooCond(a, cond)
        ^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:54: Insert `sig {params(a: T.any(Integer, String), cond: T.untyped).void}
`
    54 |def fooCond(a, cond)
        ^

test/cli/suggest-sig/suggest-sig.rb:62: This function does not have a `sig` http://go/e/7017
    62 |def fooWhile(a, cond1, cond2)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:62: Insert `sig {params(a: T.any(Integer, String), cond1: T.untyped, cond2: T.untyped).returns(NilClass)}
`
    62 |def fooWhile(a, cond1, cond2)
        ^

test/cli/suggest-sig/suggest-sig.rb:72: This function does not have a `sig` http://go/e/7017
    72 |def takesBlock
        ^^^^^^^^^^^^^^

test/cli/suggest-sig/suggest-sig.rb:77: This function does not have a `sig` http://go/e/7017
    77 |def list_ints_or_empty_list
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:77: Insert `sig {returns(T::Array[T.untyped])}
`
    77 |def list_ints_or_empty_list
        ^

test/cli/suggest-sig/suggest-sig.rb:83: This code is unreachable http://go/e/7006
    83 |  if true || qux || blah
                     ^^^

test/cli/suggest-sig/suggest-sig.rb:83: This code is unreachable http://go/e/7006
    83 |  if true || qux || blah
                            ^^^^

test/cli/suggest-sig/suggest-sig.rb:86: This code is unreachable http://go/e/7006
    86 |    takesString(x)
            ^^^^^^^^^^^^^^

test/cli/suggest-sig/suggest-sig.rb:82: This function does not have a `sig` http://go/e/7017
    82 |def dead(x)
        ^^^^^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:82: Insert `sig {params(x: Integer).void}
`
    82 |def dead(x)
        ^

test/cli/suggest-sig/suggest-sig.rb:90: This function does not have a `sig` http://go/e/7017
    90 |def with_block
        ^^^^^^^^^^^^^^

test/cli/suggest-sig/suggest-sig.rb:39: This function does not have a `sig` http://go/e/7017
    39 |  private def a_private; end
                  ^^^^^^^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:39: Insert `sig {returns(NilClass)}
  `
    39 |  private def a_private; end
          ^

test/cli/suggest-sig/suggest-sig.rb:41: This function does not have a `sig` http://go/e/7017
    41 |  protected def a_protected; end
                    ^^^^^^^^^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:41: Insert `sig {returns(NilClass)}
  `
    41 |  protected def a_protected; end
          ^
Errors: 23
