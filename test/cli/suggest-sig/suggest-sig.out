test/cli/suggest-sig/suggest-sig.rb:5: This function does not have a `sig` http://go/e/7017
     5 |def hazTwoArgs(a, b); 1; end;
        ^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:5: Insert `sig {params(a: T.untyped, b: T.untyped).returns(Integer)}
`
     5 |def hazTwoArgs(a, b); 1; end;
        ^

test/cli/suggest-sig/suggest-sig.rb:8: Method `someCondition` does not exist on `Object` http://go/e/7003
     8 |  if someCondition
             ^^^^^^^^^^^^^

test/cli/suggest-sig/suggest-sig.rb:7: This function does not have a `sig` http://go/e/7017
     7 |def baz
        ^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:7: Insert `sig {returns(T.any(T::Array[T.untyped], String))}
`
     7 |def baz
        ^

test/cli/suggest-sig/suggest-sig.rb:18: This function does not have a `sig` http://go/e/7017
    18 |def bla; give_me_void; end
        ^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:18: Insert `sig {void}
`
    18 |def bla; give_me_void; end
        ^

test/cli/suggest-sig/suggest-sig.rb:21: Method `someCondition` does not exist on `Object` http://go/e/7003
    21 |  if someCondition
             ^^^^^^^^^^^^^

test/cli/suggest-sig/suggest-sig.rb:20: This function does not have a `sig` http://go/e/7017
    20 |def bbq
        ^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:20: Insert `sig {void}
`
    20 |def bbq
        ^

test/cli/suggest-sig/suggest-sig.rb:28: This function does not have a `sig` http://go/e/7017
    28 |def idk(a); a / a + a * a; end
        ^^^^^^^^^^

test/cli/suggest-sig/suggest-sig.rb:30: This function does not have a `sig` http://go/e/7017
    30 |def give_me_literal; 1; end;
        ^^^^^^^^^^^^^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:30: Insert `sig {returns(Integer)}
`
    30 |def give_me_literal; 1; end;
        ^

test/cli/suggest-sig/suggest-sig.rb:32: This function does not have a `sig` http://go/e/7017
    32 |def give_me_literal_nested; [[1]]; end;
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:32: Insert `sig {returns(T::Array[T::Array[Integer]])}
`
    32 |def give_me_literal_nested; [[1]]; end;
        ^

test/cli/suggest-sig/suggest-sig.rb:34: This function does not have a `sig` http://go/e/7017
    34 |private def root_private; end
                ^^^^^^^^^^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:34: Insert `sig {returns(NilClass)}
`
    34 |private def root_private; end
        ^

test/cli/suggest-sig/suggest-sig.rb:36: This function does not have a `sig` http://go/e/7017
    36 |protected def root_protected; end
                  ^^^^^^^^^^^^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:36: Insert `sig {returns(NilClass)}
`
    36 |protected def root_protected; end
        ^

test/cli/suggest-sig/suggest-sig.rb:46: This function does not have a `sig` http://go/e/7017
    46 |def foo(a)
        ^^^^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:46: Insert `sig {params(a: Integer).returns(Integer)}
`
    46 |def foo(a)
        ^

test/cli/suggest-sig/suggest-sig.rb:56: This function does not have a `sig` http://go/e/7017
    56 |def fooCond(a, cond)
        ^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:56: Insert `sig {params(a: T.any(Integer, String), cond: T.untyped).void}
`
    56 |def fooCond(a, cond)
        ^

test/cli/suggest-sig/suggest-sig.rb:64: This function does not have a `sig` http://go/e/7017
    64 |def fooWhile(a, cond1, cond2)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:64: Insert `sig {params(a: T.any(Integer, String), cond1: T.untyped, cond2: T.untyped).returns(NilClass)}
`
    64 |def fooWhile(a, cond1, cond2)
        ^

test/cli/suggest-sig/suggest-sig.rb:74: This function does not have a `sig` http://go/e/7017
    74 |def takesBlock
        ^^^^^^^^^^^^^^

test/cli/suggest-sig/suggest-sig.rb:79: This function does not have a `sig` http://go/e/7017
    79 |def list_ints_or_empty_list
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:79: Insert `sig {returns(T::Array[T.untyped])}
`
    79 |def list_ints_or_empty_list
        ^

test/cli/suggest-sig/suggest-sig.rb:85: This code is unreachable http://go/e/7006
    85 |  if true || qux || blah
                     ^^^

test/cli/suggest-sig/suggest-sig.rb:85: This code is unreachable http://go/e/7006
    85 |  if true || qux || blah
                            ^^^^

test/cli/suggest-sig/suggest-sig.rb:88: This code is unreachable http://go/e/7006
    88 |    takesString(x)
            ^^^^^^^^^^^^^^

test/cli/suggest-sig/suggest-sig.rb:84: This function does not have a `sig` http://go/e/7017
    84 |def dead(x)
        ^^^^^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:84: Insert `sig {params(x: Integer).void}
`
    84 |def dead(x)
        ^

test/cli/suggest-sig/suggest-sig.rb:92: This function does not have a `sig` http://go/e/7017
    92 |def with_block
        ^^^^^^^^^^^^^^

test/cli/suggest-sig/suggest-sig.rb:98: This function does not have a `sig` http://go/e/7017
    98 |def takesRepated(*a); end;
        ^^^^^^^^^^^^^^^^^^^^

test/cli/suggest-sig/suggest-sig.rb:99: This function does not have a `sig` http://go/e/7017
    99 |def hasNoName(*); end;
        ^^^^^^^^^^^^^^^^

test/cli/suggest-sig/suggest-sig.rb:118: This function does not have a `sig` http://go/e/7017
     118 |def cantRun(a)
          ^^^^^^^^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:118: Insert `sig {params(a: T.untyped).returns(Integer)}
`
     118 |def cantRun(a)
          ^

test/cli/suggest-sig/suggest-sig.rb:41: This function does not have a `sig` http://go/e/7017
    41 |  private def a_private; end
                  ^^^^^^^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:41: Insert `sig {returns(NilClass)}
  `
    41 |  private def a_private; end
          ^

test/cli/suggest-sig/suggest-sig.rb:43: This function does not have a `sig` http://go/e/7017
    43 |  protected def a_protected; end
                    ^^^^^^^^^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:43: Insert `sig {returns(NilClass)}
  `
    43 |  protected def a_protected; end
          ^

test/cli/suggest-sig/suggest-sig.rb:102: This function does not have a `sig` http://go/e/7017
     102 |Foo = Struct.new(:a, :b)
          ^^^^^^^^^^^^^^^^^^^^^^^^

test/cli/suggest-sig/suggest-sig.rb:102: This function does not have a `sig` http://go/e/7017
     102 |Foo = Struct.new(:a, :b)
          ^^^^^^^^^^^^^^^^^^^^^^^^

test/cli/suggest-sig/suggest-sig.rb:102: This function does not have a `sig` http://go/e/7017
     102 |Foo = Struct.new(:a, :b)
          ^^^^^^^^^^^^^^^^^^^^^^^^

test/cli/suggest-sig/suggest-sig.rb:102: This function does not have a `sig` http://go/e/7017
     102 |Foo = Struct.new(:a, :b)
          ^^^^^^^^^^^^^^^^^^^^^^^^

test/cli/suggest-sig/suggest-sig.rb:112: This function does not have a `sig` http://go/e/7017
     112 |  def self.load_account_business_profile(merchant)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:112: Insert `sig {params(merchant: T.untyped).returns(Integer)}
  `
     112 |  def self.load_account_business_profile(merchant)
            ^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:105: Insert `  extend T::Helpers
`
     105 |  class Merchant
          ^

test/cli/suggest-sig/suggest-sig.rb:108: Method `sig` does not exist on `T.class_of(TestCarash)` http://go/e/7003
     108 |  sig {params(merchant: Merchant).void}
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

test/cli/suggest-sig/suggest-sig.rb:134: This function does not have a `sig` http://go/e/7017
     134 |  def foo; end
            ^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:134: Insert `sig {implementation.void}
  `
     134 |  def foo; end
            ^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:132: Insert `  extend T::Helpers
`
     132 |  include Abstract
          ^

test/cli/suggest-sig/suggest-sig.rb:146: This function does not have a `sig` http://go/e/7017
     146 |  def qux; end
            ^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:146: Insert `sig {returns(NilClass)}
  `
     146 |  def qux; end
            ^

test/cli/suggest-sig/suggest-sig.rb:149: This function does not have a `sig` http://go/e/7017
     149 |  def foo; end
            ^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:149: Insert `sig {override.void}
  `
     149 |  def foo; end
            ^

test/cli/suggest-sig/suggest-sig.rb:151: This function does not have a `sig` http://go/e/7017
     151 |  def bar; end
            ^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:151: Insert `sig {override.void}
  `
     151 |  def bar; end
            ^

test/cli/suggest-sig/suggest-sig.rb:153: This function does not have a `sig` http://go/e/7017
     153 |  def qux; end
            ^^^^^^^
  Autocorrect: Use `-a` to autocorrect
    test/cli/suggest-sig/suggest-sig.rb:153: Insert `sig {override.returns(NilClass)}
  `
     153 |  def qux; end
            ^
Errors: 37
