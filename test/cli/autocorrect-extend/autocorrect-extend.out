# typed: strict

# Don't extend T::Helpers for this one, because the class wasn't defined here.
sig {generated.returns(NilClass)}
def top_level; end

# Should only add one extend
class SuggestSigAndExtend
  extend T::Helpers
  sig {generated.returns(NilClass)}
  def foo; end

  sig {generated.returns(NilClass)}
  def bar; end
end

# This doesn't work right now, for both the injected 'sig' and 'extend'.
sig {generated.returns(NilClass)}
class SigAndExtendOneLine; def foo; end; end
  extend T::Helpers

class DontSuggestExtend
  extend T::Helpers
  sig {generated.returns(NilClass)}
  def foo; end
end

class Parent; end
class Child < Parent
  extend T::Helpers
  sig {generated.returns(NilClass)}
  def foo; end
end

def project(x); x; end

class MethodBetweenExtendAndSig
  extend T::Helpers
  project :sorbet
  sig {generated.returns(NilClass)}
  def foo; end
end

class MethodOnSelf
  extend T::Helpers
  sig {generated.returns(NilClass)}
  def self.foo; end
end

# Should properly indent it when the first line has an empty line
class ProperIndentation
  extend T::Helpers

  sig {generated.returns(NilClass)}
  def foo; end

  class Nested
    extend T::Helpers

    sig {generated.returns(NilClass)}
    def bar; end
  end
end
