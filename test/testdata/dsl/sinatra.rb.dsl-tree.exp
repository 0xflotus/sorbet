module <emptyTree>::<C <U MyRoutes>><<C <U <todo sym>>>> < ()
  self(<C <U <todo sym>>>).<U include>(<emptyTree>::<C <U Sinatra>>::<C <U Base>>)

  self(<C <U <todo sym>>>).<U include>(<emptyTree>::<C <U Helpers>>)

  def <U <instance_registered>><<C <U <todo sym>>>>(<U app>, &<U <blk>>)
    <U app>.<U get>("/route/") do ||
      begin
        self(<C <U <todo sym>>>).<U my_helper>()
        self(<C <U <todo sym>>>).<U params>()
        self(<C <U <todo sym>>>).<U my_helper>()
      end
    end
  end

  module <emptyTree>::<C <U Helpers>><<C <U <todo sym>>>> < ()
    def <U my_helper><<C <U <todo sym>>>>(&<U <blk>>)
      <emptyTree>
    end
  end
end
