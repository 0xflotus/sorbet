class <constant:<root>> < ::<constant:Object> () -> <Class:<root>> @ test/testdata/dsl/prop.rb:2
  class <constant:AdvancedODM> < ::<constant:Object> () -> <Class:AdvancedODM> @ test/testdata/dsl/prop.rb:24
    method array () -> AppliedType {
      klass = ::<constant:Array>
      targs = [
        <constant:Elem> = untyped
      ]
    } @ test/testdata/dsl/prop.rb:31
    method array= (arg0) -> AppliedType {
      klass = ::<constant:Array>
      targs = [
        <constant:Elem> = untyped
      ]
    } @ test/testdata/dsl/prop.rb:31
      argument arg0<> -> AppliedType {
        klass = ::<constant:Array>
        targs = [
          <constant:Elem> = untyped
        ]
      } @ test/testdata/dsl/prop.rb:31
    method array_of () -> AppliedType {
      klass = ::<constant:Array>
      targs = [
        <constant:Elem> = String
      ]
    } @ test/testdata/dsl/prop.rb:32
    method array_of= (arg0) -> AppliedType {
      klass = ::<constant:Array>
      targs = [
        <constant:Elem> = String
      ]
    } @ test/testdata/dsl/prop.rb:32
      argument arg0<> -> AppliedType {
        klass = ::<constant:Array>
        targs = [
          <constant:Elem> = String
        ]
      } @ test/testdata/dsl/prop.rb:32
    method array_of_explicit () -> AppliedType {
      klass = ::<constant:Array>
      targs = [
        <constant:Elem> = untyped
      ]
    } @ test/testdata/dsl/prop.rb:33
    method array_of_explicit= (arg0) -> AppliedType {
      klass = ::<constant:Array>
      targs = [
        <constant:Elem> = untyped
      ]
    } @ test/testdata/dsl/prop.rb:33
      argument arg0<> -> AppliedType {
        klass = ::<constant:Array>
        targs = [
          <constant:Elem> = untyped
        ]
      } @ test/testdata/dsl/prop.rb:33
    method const () -> String @ test/testdata/dsl/prop.rb:43
    method const_explicit () -> String @ test/testdata/dsl/prop.rb:42
    method default () -> String @ test/testdata/dsl/prop.rb:25
    method default= (arg0) -> String @ test/testdata/dsl/prop.rb:25
      argument arg0<> -> String @ test/testdata/dsl/prop.rb:25
    method enum_prop () -> <bottom> @ test/testdata/dsl/prop.rb:47
    method enum_prop= (arg0) -> <bottom> @ test/testdata/dsl/prop.rb:47
      argument arg0<> -> <bottom> @ test/testdata/dsl/prop.rb:47
    method factory () -> String @ test/testdata/dsl/prop.rb:27
    method factory= (arg0) -> String @ test/testdata/dsl/prop.rb:27
      argument arg0<> -> String @ test/testdata/dsl/prop.rb:27
    method hash_of () -> AppliedType {
      klass = ::<constant:Hash>
      targs = [
        <constant:K> = Symbol
        <constant:V> = String
        <constant:Elem> = untyped
      ]
    } @ test/testdata/dsl/prop.rb:35
    method hash_of= (arg0) -> AppliedType {
      klass = ::<constant:Hash>
      targs = [
        <constant:K> = Symbol
        <constant:V> = String
        <constant:Elem> = untyped
      ]
    } @ test/testdata/dsl/prop.rb:35
      argument arg0<> -> AppliedType {
        klass = ::<constant:Hash>
        targs = [
          <constant:K> = Symbol
          <constant:V> = String
          <constant:Elem> = untyped
        ]
      } @ test/testdata/dsl/prop.rb:35
    method no_class_arg () -> AppliedType {
      klass = ::<constant:Array>
      targs = [
        <constant:Elem> = untyped
      ]
    } @ test/testdata/dsl/prop.rb:45
    method nodefault () -> String | NilClass @ test/testdata/dsl/prop.rb:26
    method nodefault= (arg0) -> String @ test/testdata/dsl/prop.rb:26
      argument arg0<> -> String @ test/testdata/dsl/prop.rb:26
    method object () -> Object @ test/testdata/dsl/prop.rb:30
    method object= (arg0) -> Object @ test/testdata/dsl/prop.rb:30
      argument arg0<> -> Object @ test/testdata/dsl/prop.rb:30
    method optional () -> String @ test/testdata/dsl/prop.rb:40
    method optional= (arg0) -> String | NilClass @ test/testdata/dsl/prop.rb:40
      argument arg0<> -> String | NilClass @ test/testdata/dsl/prop.rb:40
    method optional_existing () -> String @ test/testdata/dsl/prop.rb:38
    method optional_existing= (arg0) -> String @ test/testdata/dsl/prop.rb:38
      argument arg0<> -> String @ test/testdata/dsl/prop.rb:38
    method optional_explicit () -> String @ test/testdata/dsl/prop.rb:37
    method optional_explicit= (arg0) -> String | NilClass @ test/testdata/dsl/prop.rb:37
      argument arg0<> -> String | NilClass @ test/testdata/dsl/prop.rb:37
    method optional_false () -> String @ test/testdata/dsl/prop.rb:39
    method optional_false= (arg0) -> String @ test/testdata/dsl/prop.rb:39
      argument arg0<> -> String @ test/testdata/dsl/prop.rb:39
    method t_array () -> AppliedType {
      klass = ::<constant:Array>
      targs = [
        <constant:Elem> = String
      ]
    } @ test/testdata/dsl/prop.rb:34
    method t_array= (arg0) -> AppliedType {
      klass = ::<constant:Array>
      targs = [
        <constant:Elem> = String
      ]
    } @ test/testdata/dsl/prop.rb:34
      argument arg0<> -> AppliedType {
        klass = ::<constant:Array>
        targs = [
          <constant:Elem> = String
        ]
      } @ test/testdata/dsl/prop.rb:34
    method type () -> String @ test/testdata/dsl/prop.rb:29
    method type= (arg0) -> String @ test/testdata/dsl/prop.rb:29
      argument arg0<> -> String @ test/testdata/dsl/prop.rb:29
  class <constant:NotAODM> < ::<constant:Object> () -> <Class:NotAODM> @ test/testdata/dsl/prop.rb:2
    class <constant:Default> < ::<constant:RubyTyper>::<constant:StubClass> () -> untyped @ test/testdata/dsl/prop.rb:11
    class <constant:IntegerParam> < ::<constant:RubyTyper>::<constant:StubClass> () -> untyped @ test/testdata/dsl/prop.rb:10
    method <static-init> () @ test/testdata/dsl/prop.rb:2
  class <constant:Object> < ::<constant:BasicObject> (<constant:Kernel>) -> <Class:Object> @ https://git.corp.stripe.com/stripe-internal/ruby-typer/tree/master/rbi/stdlib.rbi#L8300
    method main () @ test/testdata/dsl/prop.rb:60
  class <constant:Opus> () -> <Class:Opus> @ ???
    class <constant:Param> () -> untyped @ test/testdata/dsl/prop.rb:11
      class <constant:CaseParam> () -> untyped @ test/testdata/dsl/prop.rb:11
      class <constant:ParamSpecsParam> () -> untyped @ test/testdata/dsl/prop.rb:11
  class <constant:PropHelpers2> < ::<constant:Object> () -> <Class:PropHelpers2> @ test/testdata/dsl/prop.rb:55
    method created () -> Float @ test/testdata/dsl/prop.rb:57
    method token () -> String @ test/testdata/dsl/prop.rb:56
    method token= (arg0) -> String @ test/testdata/dsl/prop.rb:56
      argument arg0<> -> String @ test/testdata/dsl/prop.rb:56
  class <constant:PropHelpers> < ::<constant:Object> () -> <Class:PropHelpers> @ test/testdata/dsl/prop.rb:50
    method created () -> Float @ test/testdata/dsl/prop.rb:52
    method created= (arg0) -> Float @ test/testdata/dsl/prop.rb:52
      argument arg0<> -> Float @ test/testdata/dsl/prop.rb:52
    method token () -> String @ test/testdata/dsl/prop.rb:51
    method token= (arg0) -> String @ test/testdata/dsl/prop.rb:51
      argument arg0<> -> String @ test/testdata/dsl/prop.rb:51
  class <constant:SomeODM> < ::<constant:Object> () -> <Class:SomeODM> @ test/testdata/dsl/prop.rb:15
    method foo () -> String | NilClass @ test/testdata/dsl/prop.rb:16
    method foo2 () -> String | NilClass @ test/testdata/dsl/prop.rb:19
    method foo2= (arg0) -> String @ test/testdata/dsl/prop.rb:21
      argument arg0<> -> String @ test/testdata/dsl/prop.rb:20
    method foo= (arg0) -> String @ test/testdata/dsl/prop.rb:16
      argument arg0<> -> String @ test/testdata/dsl/prop.rb:16
  class <singleton class:<constant:AdvancedODM>> < ::<singleton class:<constant:Object>> () @ test/testdata/dsl/prop.rb:24
  class <singleton class:<constant:NotAODM>> < ::<singleton class:<constant:Object>> () @ test/testdata/dsl/prop.rb:2
    method prop (args) @ test/testdata/dsl/prop.rb:3
      argument args<repeated> @ test/testdata/dsl/prop.rb:3
  class <singleton class:<constant:PropHelpers2>> < ::<singleton class:<constant:Object>> () @ test/testdata/dsl/prop.rb:55
  class <singleton class:<constant:PropHelpers>> < ::<singleton class:<constant:Object>> () @ test/testdata/dsl/prop.rb:50
  class <singleton class:<constant:SomeODM>> < ::<singleton class:<constant:Object>> () @ test/testdata/dsl/prop.rb:15
  method <static-init>$8 () @ test/testdata/dsl/prop.rb:2

