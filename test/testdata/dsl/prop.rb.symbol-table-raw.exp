class <C <U <root>>> < <C <U Object>> () @ (Loc {file=test/testdata/dsl/prop.rb start=2:1 end=144:4}, Loc {file=https://git.corp.stripe.com/stripe-internal/sorbet/tree/master/bazel-out/host/genfiles/rbi/procs.rbi start=1:1 end=252:4}, Loc {file=https://git.corp.stripe.com/stripe-internal/sorbet/tree/master/rbi/light.rbi start=7:1 end=3324:4})
  class <S <C <U <root>>> $1> < <S <C <U Object>> $1> ()
    method <S <C <U <root>>> $1><N <U <static-init>> $3> (<blk>) @ Loc {file=test/testdata/dsl/prop.rb start=2:1 end=144:4}
      argument <S <C <U <root>>> $1><N <U <static-init>> $3><blk><block> @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
  class <C <U AdvancedODM>> < <C <U Object>> () @ Loc {file=test/testdata/dsl/prop.rb start=35:1 end=35:18}
    class <C <U AdvancedODM>><C <U Mutator>> < <C <U Object>> () @ Loc {file=test/testdata/dsl/prop.rb start=50:5 end=50:68}
      method <C <U AdvancedODM>><C <U Mutator>><U array> (<blk>) -> AppliedType {
        klass = <C <U Chalk>><C <U ODM>><C <U Mutator>><C <U Private>><C <U ArrayMutator>>
        targs = [
          <C <U Elem>> = T.untyped
        ]
      } @ Loc {file=test/testdata/dsl/prop.rb start=41:5 end=41:23}
        argument <C <U AdvancedODM>><C <U Mutator>><U array><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
      method <C <U AdvancedODM>><C <U Mutator>><U array=> (array, <blk>) -> AppliedType {
        klass = <C <U Array>>
        targs = [
          <C <U Elem>> = T.untyped
        ]
      } @ Loc {file=test/testdata/dsl/prop.rb start=41:5 end=41:23}
        argument <C <U AdvancedODM>><C <U Mutator>><U array=>array<> -> AppliedType {
          klass = <C <U Array>>
          targs = [
            <C <U Elem>> = T.untyped
          ]
        } @ Loc {file=test/testdata/dsl/prop.rb start=41:11 end=41:16}
        argument <C <U AdvancedODM>><C <U Mutator>><U array=><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
      method <C <U AdvancedODM>><C <U Mutator>><U array_of_explicit> (<blk>) -> AppliedType {
        klass = <C <U Chalk>><C <U ODM>><C <U Mutator>><C <U Private>><C <U ArrayMutator>>
        targs = [
          <C <U Elem>> = T.untyped
        ]
      } @ Loc {file=test/testdata/dsl/prop.rb start=43:5 end=43:50}
        argument <C <U AdvancedODM>><C <U Mutator>><U array_of_explicit><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
      method <C <U AdvancedODM>><C <U Mutator>><U array_of_explicit=> (array_of_explicit, <blk>) -> AppliedType {
        klass = <C <U Array>>
        targs = [
          <C <U Elem>> = T.untyped
        ]
      } @ Loc {file=test/testdata/dsl/prop.rb start=43:5 end=43:50}
        argument <C <U AdvancedODM>><C <U Mutator>><U array_of_explicit=>array_of_explicit<> -> AppliedType {
          klass = <C <U Array>>
          targs = [
            <C <U Elem>> = T.untyped
          ]
        } @ Loc {file=test/testdata/dsl/prop.rb start=43:11 end=43:28}
        argument <C <U AdvancedODM>><C <U Mutator>><U array_of_explicit=><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
      method <C <U AdvancedODM>><C <U Mutator>><U hash_of> (<blk>) -> AppliedType {
        klass = <C <U Chalk>><C <U ODM>><C <U Mutator>><C <U Private>><C <U HashMutator>>
        targs = [
          <C <U K>> = Symbol
          <C <U V>> = String
        ]
      } @ Loc {file=test/testdata/dsl/prop.rb start=45:5 end=45:43}
        argument <C <U AdvancedODM>><C <U Mutator>><U hash_of><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
      method <C <U AdvancedODM>><C <U Mutator>><U hash_of=> (hash_of, <blk>) -> AppliedType {
        klass = <C <U Hash>>
        targs = [
          <C <U K>> = Symbol
          <C <U V>> = String
          <C <U Elem>> = TupleType {
              0 = Symbol
              1 = String
            }
        ]
      } @ Loc {file=test/testdata/dsl/prop.rb start=45:5 end=45:43}
        argument <C <U AdvancedODM>><C <U Mutator>><U hash_of=>hash_of<> -> AppliedType {
          klass = <C <U Hash>>
          targs = [
            <C <U K>> = Symbol
            <C <U V>> = String
            <C <U Elem>> = TupleType {
                0 = Symbol
                1 = String
              }
          ]
        } @ Loc {file=test/testdata/dsl/prop.rb start=45:11 end=45:18}
        argument <C <U AdvancedODM>><C <U Mutator>><U hash_of=><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
      method <C <U AdvancedODM>><C <U Mutator>><U no_class_arg> (<blk>) -> AppliedType {
        klass = <C <U Chalk>><C <U ODM>><C <U Mutator>><C <U Private>><C <U ArrayMutator>>
        targs = [
          <C <U Elem>> = T.untyped
        ]
      } @ Loc {file=test/testdata/dsl/prop.rb start=50:5 end=50:68}
        argument <C <U AdvancedODM>><C <U Mutator>><U no_class_arg><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
      method <C <U AdvancedODM>><C <U Mutator>><U no_class_arg=> (no_class_arg, <blk>) -> AppliedType {
        klass = <C <U Array>>
        targs = [
          <C <U Elem>> = T.untyped
        ]
      } @ Loc {file=test/testdata/dsl/prop.rb start=50:5 end=50:68}
        argument <C <U AdvancedODM>><C <U Mutator>><U no_class_arg=>no_class_arg<> -> AppliedType {
          klass = <C <U Array>>
          targs = [
            <C <U Elem>> = T.untyped
          ]
        } @ Loc {file=test/testdata/dsl/prop.rb start=50:11 end=50:23}
        argument <C <U AdvancedODM>><C <U Mutator>><U no_class_arg=><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
      method <C <U AdvancedODM>><C <U Mutator>><U t_array> (<blk>) -> AppliedType {
        klass = <C <U Chalk>><C <U ODM>><C <U Mutator>><C <U Private>><C <U ArrayMutator>>
        targs = [
          <C <U Elem>> = String
        ]
      } @ Loc {file=test/testdata/dsl/prop.rb start=44:5 end=44:36}
        argument <C <U AdvancedODM>><C <U Mutator>><U t_array><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
      method <C <U AdvancedODM>><C <U Mutator>><U t_array=> (t_array, <blk>) -> AppliedType {
        klass = <C <U Array>>
        targs = [
          <C <U Elem>> = String
        ]
      } @ Loc {file=test/testdata/dsl/prop.rb start=44:5 end=44:36}
        argument <C <U AdvancedODM>><C <U Mutator>><U t_array=>t_array<> -> AppliedType {
          klass = <C <U Array>>
          targs = [
            <C <U Elem>> = String
          ]
        } @ Loc {file=test/testdata/dsl/prop.rb start=44:11 end=44:18}
        argument <C <U AdvancedODM>><C <U Mutator>><U t_array=><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    class <C <U AdvancedODM>><S <C <U Mutator>> $1> < <S <C <U Object>> $1> () @ Loc {file=test/testdata/dsl/prop.rb start=41:5 end=41:23}
      method <C <U AdvancedODM>><S <C <U Mutator>> $1><U <static-init>> (<blk>) @ Loc {file=test/testdata/dsl/prop.rb start=41:5 end=41:23}
        argument <C <U AdvancedODM>><S <C <U Mutator>> $1><U <static-init>><blk><block> @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U array> (<blk>) -> AppliedType {
      klass = <C <U Array>>
      targs = [
        <C <U Elem>> = T.untyped
      ]
    } @ Loc {file=test/testdata/dsl/prop.rb start=41:5 end=41:23}
      argument <C <U AdvancedODM>><U array><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U array=> (array, <blk>) -> AppliedType {
      klass = <C <U Array>>
      targs = [
        <C <U Elem>> = T.untyped
      ]
    } @ Loc {file=test/testdata/dsl/prop.rb start=41:5 end=41:23}
      argument <C <U AdvancedODM>><U array=>array<> -> AppliedType {
        klass = <C <U Array>>
        targs = [
          <C <U Elem>> = T.untyped
        ]
      } @ Loc {file=test/testdata/dsl/prop.rb start=41:11 end=41:16}
      argument <C <U AdvancedODM>><U array=><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U array_of> (<blk>) -> AppliedType {
      klass = <C <U Array>>
      targs = [
        <C <U Elem>> = String
      ]
    } @ Loc {file=test/testdata/dsl/prop.rb start=42:5 end=42:34}
      argument <C <U AdvancedODM>><U array_of><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U array_of=> (array_of, <blk>) -> AppliedType {
      klass = <C <U Array>>
      targs = [
        <C <U Elem>> = String
      ]
    } @ Loc {file=test/testdata/dsl/prop.rb start=42:5 end=42:34}
      argument <C <U AdvancedODM>><U array_of=>array_of<> -> AppliedType {
        klass = <C <U Array>>
        targs = [
          <C <U Elem>> = String
        ]
      } @ Loc {file=test/testdata/dsl/prop.rb start=42:11 end=42:19}
      argument <C <U AdvancedODM>><U array_of=><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U array_of_explicit> (<blk>) -> AppliedType {
      klass = <C <U Array>>
      targs = [
        <C <U Elem>> = T.untyped
      ]
    } @ Loc {file=test/testdata/dsl/prop.rb start=43:5 end=43:50}
      argument <C <U AdvancedODM>><U array_of_explicit><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U array_of_explicit=> (array_of_explicit, <blk>) -> AppliedType {
      klass = <C <U Array>>
      targs = [
        <C <U Elem>> = T.untyped
      ]
    } @ Loc {file=test/testdata/dsl/prop.rb start=43:5 end=43:50}
      argument <C <U AdvancedODM>><U array_of_explicit=>array_of_explicit<> -> AppliedType {
        klass = <C <U Array>>
        targs = [
          <C <U Elem>> = T.untyped
        ]
      } @ Loc {file=test/testdata/dsl/prop.rb start=43:11 end=43:28}
      argument <C <U AdvancedODM>><U array_of_explicit=><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U const> (<blk>) -> String @ Loc {file=test/testdata/dsl/prop.rb start=48:5 end=48:25}
      argument <C <U AdvancedODM>><U const><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U const_explicit> (<blk>) -> String @ Loc {file=test/testdata/dsl/prop.rb start=47:5 end=47:50}
      argument <C <U AdvancedODM>><U const_explicit><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U default> (<blk>) -> String @ Loc {file=test/testdata/dsl/prop.rb start=36:5 end=36:39}
      argument <C <U AdvancedODM>><U default><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U default=> (default, <blk>) -> String @ Loc {file=test/testdata/dsl/prop.rb start=36:5 end=36:39}
      argument <C <U AdvancedODM>><U default=>default<> -> String @ Loc {file=test/testdata/dsl/prop.rb start=36:11 end=36:18}
      argument <C <U AdvancedODM>><U default=><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U enum_prop> (<blk>) -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=52:5 end=52:48}
      argument <C <U AdvancedODM>><U enum_prop><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U foreign> (<blk>) -> String @ Loc {file=test/testdata/dsl/prop.rb start=54:5 end=54:49}
      argument <C <U AdvancedODM>><U foreign><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U foreign=> (foreign, <blk>) -> String @ Loc {file=test/testdata/dsl/prop.rb start=54:5 end=54:49}
      argument <C <U AdvancedODM>><U foreign=>foreign<> -> String @ Loc {file=test/testdata/dsl/prop.rb start=54:11 end=54:18}
      argument <C <U AdvancedODM>><U foreign=><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U foreign_> (opts, <blk>) -> ForeignClass | NilClass @ Loc {file=test/testdata/dsl/prop.rb start=54:5 end=54:49}
      argument <C <U AdvancedODM>><U foreign_>opts<keyword, repeated> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=54:11 end=54:18}
      argument <C <U AdvancedODM>><U foreign_><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U foreign_invalid> (<blk>) -> String @ Loc {file=test/testdata/dsl/prop.rb start=57:5 end=57:65}
      argument <C <U AdvancedODM>><U foreign_invalid><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U foreign_invalid=> (foreign_invalid, <blk>) -> String @ Loc {file=test/testdata/dsl/prop.rb start=57:5 end=57:65}
      argument <C <U AdvancedODM>><U foreign_invalid=>foreign_invalid<> -> String @ Loc {file=test/testdata/dsl/prop.rb start=57:11 end=57:26}
      argument <C <U AdvancedODM>><U foreign_invalid=><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U foreign_invalid_> (opts, <blk>) -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=57:5 end=57:65}
      argument <C <U AdvancedODM>><U foreign_invalid_>opts<keyword, repeated> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=57:11 end=57:26}
      argument <C <U AdvancedODM>><U foreign_invalid_><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U foreign_lazy> (<blk>) -> String @ Loc {file=test/testdata/dsl/prop.rb start=55:5 end=55:59}
      argument <C <U AdvancedODM>><U foreign_lazy><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U foreign_lazy=> (foreign_lazy, <blk>) -> String @ Loc {file=test/testdata/dsl/prop.rb start=55:5 end=55:59}
      argument <C <U AdvancedODM>><U foreign_lazy=>foreign_lazy<> -> String @ Loc {file=test/testdata/dsl/prop.rb start=55:11 end=55:23}
      argument <C <U AdvancedODM>><U foreign_lazy=><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U foreign_lazy_> (opts, <blk>) -> ForeignClass | NilClass @ Loc {file=test/testdata/dsl/prop.rb start=55:5 end=55:59}
      argument <C <U AdvancedODM>><U foreign_lazy_>opts<keyword, repeated> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=55:11 end=55:23}
      argument <C <U AdvancedODM>><U foreign_lazy_><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U foreign_proc> (<blk>) -> String @ Loc {file=test/testdata/dsl/prop.rb start=56:5 end=56:61}
      argument <C <U AdvancedODM>><U foreign_proc><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U foreign_proc=> (foreign_proc, <blk>) -> String @ Loc {file=test/testdata/dsl/prop.rb start=56:5 end=56:61}
      argument <C <U AdvancedODM>><U foreign_proc=>foreign_proc<> -> String @ Loc {file=test/testdata/dsl/prop.rb start=56:11 end=56:23}
      argument <C <U AdvancedODM>><U foreign_proc=><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U foreign_proc_> (opts, <blk>) -> ForeignClass | NilClass @ Loc {file=test/testdata/dsl/prop.rb start=56:5 end=56:61}
      argument <C <U AdvancedODM>><U foreign_proc_>opts<keyword, repeated> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=56:11 end=56:23}
      argument <C <U AdvancedODM>><U foreign_proc_><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U hash_of> (<blk>) -> AppliedType {
      klass = <C <U Hash>>
      targs = [
        <C <U K>> = Symbol
        <C <U V>> = String
        <C <U Elem>> = TupleType {
            0 = Symbol
            1 = String
          }
      ]
    } @ Loc {file=test/testdata/dsl/prop.rb start=45:5 end=45:43}
      argument <C <U AdvancedODM>><U hash_of><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U hash_of=> (hash_of, <blk>) -> AppliedType {
      klass = <C <U Hash>>
      targs = [
        <C <U K>> = Symbol
        <C <U V>> = String
        <C <U Elem>> = TupleType {
            0 = Symbol
            1 = String
          }
      ]
    } @ Loc {file=test/testdata/dsl/prop.rb start=45:5 end=45:43}
      argument <C <U AdvancedODM>><U hash_of=>hash_of<> -> AppliedType {
        klass = <C <U Hash>>
        targs = [
          <C <U K>> = Symbol
          <C <U V>> = String
          <C <U Elem>> = TupleType {
              0 = Symbol
              1 = String
            }
        ]
      } @ Loc {file=test/testdata/dsl/prop.rb start=45:11 end=45:18}
      argument <C <U AdvancedODM>><U hash_of=><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U ifunset> (<blk>) -> String @ Loc {file=test/testdata/dsl/prop.rb start=59:5 end=59:39}
      argument <C <U AdvancedODM>><U ifunset><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U ifunset=> (ifunset, <blk>) -> String @ Loc {file=test/testdata/dsl/prop.rb start=59:5 end=59:39}
      argument <C <U AdvancedODM>><U ifunset=>ifunset<> -> String @ Loc {file=test/testdata/dsl/prop.rb start=59:11 end=59:18}
      argument <C <U AdvancedODM>><U ifunset=><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U ifunset_nilable> (<blk>) -> String | NilClass @ Loc {file=test/testdata/dsl/prop.rb start=60:5 end=60:58}
      argument <C <U AdvancedODM>><U ifunset_nilable><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U ifunset_nilable=> (ifunset_nilable, <blk>) -> String | NilClass @ Loc {file=test/testdata/dsl/prop.rb start=60:5 end=60:58}
      argument <C <U AdvancedODM>><U ifunset_nilable=>ifunset_nilable<> -> String | NilClass @ Loc {file=test/testdata/dsl/prop.rb start=60:11 end=60:26}
      argument <C <U AdvancedODM>><U ifunset_nilable=><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U no_class_arg> (<blk>) -> AppliedType {
      klass = <C <U Array>>
      targs = [
        <C <U Elem>> = T.untyped
      ]
    } @ Loc {file=test/testdata/dsl/prop.rb start=50:5 end=50:68}
      argument <C <U AdvancedODM>><U no_class_arg><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U object> (<blk>) -> Object @ Loc {file=test/testdata/dsl/prop.rb start=40:5 end=40:17}
      argument <C <U AdvancedODM>><U object><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U object=> (object, <blk>) -> Object @ Loc {file=test/testdata/dsl/prop.rb start=40:5 end=40:17}
      argument <C <U AdvancedODM>><U object=>object<> -> Object @ Loc {file=test/testdata/dsl/prop.rb start=40:11 end=40:17}
      argument <C <U AdvancedODM>><U object=><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U t_array> (<blk>) -> AppliedType {
      klass = <C <U Array>>
      targs = [
        <C <U Elem>> = String
      ]
    } @ Loc {file=test/testdata/dsl/prop.rb start=44:5 end=44:36}
      argument <C <U AdvancedODM>><U t_array><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U t_array=> (t_array, <blk>) -> AppliedType {
      klass = <C <U Array>>
      targs = [
        <C <U Elem>> = String
      ]
    } @ Loc {file=test/testdata/dsl/prop.rb start=44:5 end=44:36}
      argument <C <U AdvancedODM>><U t_array=>t_array<> -> AppliedType {
        klass = <C <U Array>>
        targs = [
          <C <U Elem>> = String
        ]
      } @ Loc {file=test/testdata/dsl/prop.rb start=44:11 end=44:18}
      argument <C <U AdvancedODM>><U t_array=><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U t_nilable> (<blk>) -> String | NilClass @ Loc {file=test/testdata/dsl/prop.rb start=37:5 end=37:39}
      argument <C <U AdvancedODM>><U t_nilable><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U t_nilable=> (t_nilable, <blk>) -> String | NilClass @ Loc {file=test/testdata/dsl/prop.rb start=37:5 end=37:39}
      argument <C <U AdvancedODM>><U t_nilable=>t_nilable<> -> String | NilClass @ Loc {file=test/testdata/dsl/prop.rb start=37:11 end=37:20}
      argument <C <U AdvancedODM>><U t_nilable=><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U type> (<blk>) -> String @ Loc {file=test/testdata/dsl/prop.rb start=39:5 end=39:29}
      argument <C <U AdvancedODM>><U type><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U AdvancedODM>><U type=> (type, <blk>) -> String @ Loc {file=test/testdata/dsl/prop.rb start=39:5 end=39:29}
      argument <C <U AdvancedODM>><U type=>type<> -> String @ Loc {file=test/testdata/dsl/prop.rb start=39:11 end=39:15}
      argument <C <U AdvancedODM>><U type=><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
  class <S <C <U AdvancedODM>> $1> < <S <C <U Object>> $1> () @ Loc {file=test/testdata/dsl/prop.rb start=35:7 end=35:18}
    method <S <C <U AdvancedODM>> $1><U <static-init>> (<blk>) @ Loc {file=test/testdata/dsl/prop.rb start=36:5 end=36:39}
      argument <S <C <U AdvancedODM>> $1><U <static-init>><blk><block> @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
  class <C <U EncryptedProp>> < <C <U Object>> () @ Loc {file=test/testdata/dsl/prop.rb start=77:1 end=77:20}
    method <C <U EncryptedProp>><U bar> (<blk>) -> String | NilClass @ Loc {file=test/testdata/dsl/prop.rb start=79:3 end=79:56}
      argument <C <U EncryptedProp>><U bar><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U EncryptedProp>><U encrypted_bar> (<blk>) -> Opus::DB::Model::Mixins::Encryptable::EncryptedValue | NilClass @ Loc {file=test/testdata/dsl/prop.rb start=79:3 end=79:56}
      argument <C <U EncryptedProp>><U encrypted_bar><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U EncryptedProp>><U encrypted_foo> (<blk>) -> Opus::DB::Model::Mixins::Encryptable::EncryptedValue | NilClass @ Loc {file=test/testdata/dsl/prop.rb start=78:3 end=78:22}
      argument <C <U EncryptedProp>><U encrypted_foo><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U EncryptedProp>><U encrypted_foo=> (foo, <blk>) -> Opus::DB::Model::Mixins::Encryptable::EncryptedValue | NilClass @ Loc {file=test/testdata/dsl/prop.rb start=78:3 end=78:22}
      argument <C <U EncryptedProp>><U encrypted_foo=>foo<> -> Opus::DB::Model::Mixins::Encryptable::EncryptedValue | NilClass @ Loc {file=test/testdata/dsl/prop.rb start=78:19 end=78:22}
      argument <C <U EncryptedProp>><U encrypted_foo=><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U EncryptedProp>><U foo> (<blk>) -> String | NilClass @ Loc {file=test/testdata/dsl/prop.rb start=78:3 end=78:22}
      argument <C <U EncryptedProp>><U foo><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U EncryptedProp>><U foo=> (foo, <blk>) -> String | NilClass @ Loc {file=test/testdata/dsl/prop.rb start=78:3 end=78:22}
      argument <C <U EncryptedProp>><U foo=>foo<> -> String | NilClass @ Loc {file=test/testdata/dsl/prop.rb start=78:19 end=78:22}
      argument <C <U EncryptedProp>><U foo=><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
  class <S <C <U EncryptedProp>> $1> < <S <C <U Object>> $1> () @ Loc {file=test/testdata/dsl/prop.rb start=77:7 end=77:20}
    method <S <C <U EncryptedProp>> $1><U <static-init>> (<blk>) @ Loc {file=test/testdata/dsl/prop.rb start=78:3 end=78:22}
      argument <S <C <U EncryptedProp>> $1><U <static-init>><blk><block> @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
  class <C <U ForeignClass>> < <C <U Object>> () @ Loc {file=test/testdata/dsl/prop.rb start=32:1 end=32:19}
  class <S <C <U ForeignClass>> $1> < <S <C <U Object>> $1> () @ Loc {file=test/testdata/dsl/prop.rb start=32:7 end=32:19}
  class <C <U NotAODM>> < <C <U Object>> () @ Loc {file=test/testdata/dsl/prop.rb start=2:1 end=2:14}
    class <C <U NotAODM>><C <U Default>> < <C <U RubyTyper>><C <U StubClass>> () @ Loc {file=test/testdata/dsl/prop.rb start=14:106 end=14:113}
    class <C <U NotAODM>><S <C <U Default>> $1> < <C <U RubyTyper>><S <C <U StubClass>> $1> () @ Loc {file=test/testdata/dsl/prop.rb start=14:106 end=14:113}
    class <C <U NotAODM>><C <U IntegerParam>> < <C <U RubyTyper>><C <U StubClass>> () @ Loc {file=test/testdata/dsl/prop.rb start=10:20 end=10:32}
    class <C <U NotAODM>><S <C <U IntegerParam>> $1> < <C <U RubyTyper>><S <C <U StubClass>> $1> () @ Loc {file=test/testdata/dsl/prop.rb start=10:20 end=10:32}
    class <C <U NotAODM>><C <U StringParam>> < <C <U RubyTyper>><C <U StubClass>> () @ Loc {file=test/testdata/dsl/prop.rb start=12:21 end=12:32}
    class <C <U NotAODM>><S <C <U StringParam>> $1> < <C <U RubyTyper>><S <C <U StubClass>> $1> () @ Loc {file=test/testdata/dsl/prop.rb start=12:21 end=12:32}
  class <S <C <U NotAODM>> $1> < <S <C <U Object>> $1> () @ Loc {file=test/testdata/dsl/prop.rb start=2:7 end=2:14}
    method <S <C <U NotAODM>> $1><U <static-init>> (<blk>) @ Loc {file=test/testdata/dsl/prop.rb start=2:1 end=2:14}
      argument <S <C <U NotAODM>> $1><U <static-init>><blk><block> @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <S <C <U NotAODM>> $1><U prop> (args, <blk>) @ Loc {file=test/testdata/dsl/prop.rb start=3:5 end=3:25}
      argument <S <C <U NotAODM>> $1><U prop>args<repeated> @ Loc {file=test/testdata/dsl/prop.rb start=3:20 end=3:24}
      argument <S <C <U NotAODM>> $1><U prop><blk><block> @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
  class <C <U Object>> < <C <U BasicObject>> (<C <U Kernel>>) @ Loc {file=https://git.corp.stripe.com/stripe-internal/sorbet/tree/master/rbi/light.rbi start=730:1 end=730:27}
    method <C <U Object>><U main> (<blk>) @ Loc {file=test/testdata/dsl/prop.rb start=82:1 end=82:9}
      argument <C <U Object>><U main><blk><block> @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
  class <C <U Opus>> < <C <U RubyTyper>><C <U ImplicitModuleSuperclass>> ()
    class <C <U Opus>><C <U Param>> < <C <U RubyTyper>><C <U StubClass>> () @ Loc {file=test/testdata/dsl/prop.rb start=14:25 end=14:36}
      class <C <U Opus>><C <U Param>><C <U CaseParam>> < <C <U RubyTyper>><C <U StubClass>> () @ Loc {file=test/testdata/dsl/prop.rb start=14:25 end=14:47}
      class <C <U Opus>><C <U Param>><S <C <U CaseParam>> $1> < <C <U RubyTyper>><S <C <U StubClass>> $1> () @ Loc {file=test/testdata/dsl/prop.rb start=14:25 end=14:47}
      class <C <U Opus>><C <U Param>><C <U ParamSpecsParam>> < <C <U RubyTyper>><C <U StubClass>> () @ Loc {file=test/testdata/dsl/prop.rb start=14:73 end=14:101}
      class <C <U Opus>><C <U Param>><S <C <U ParamSpecsParam>> $1> < <C <U RubyTyper>><S <C <U StubClass>> $1> () @ Loc {file=test/testdata/dsl/prop.rb start=14:73 end=14:101}
    class <C <U Opus>><S <C <U Param>> $1> < <C <U RubyTyper>><S <C <U StubClass>> $1> () @ Loc {file=test/testdata/dsl/prop.rb start=14:25 end=14:36}
  class <C <U PropHelpers>> < <C <U Object>> () @ Loc {file=test/testdata/dsl/prop.rb start=63:1 end=63:18}
    method <C <U PropHelpers>><U created> (<blk>) -> Float @ Loc {file=test/testdata/dsl/prop.rb start=65:3 end=65:15}
      argument <C <U PropHelpers>><U created><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U PropHelpers>><U created=> (created, <blk>) -> Float @ Loc {file=test/testdata/dsl/prop.rb start=65:3 end=65:15}
      argument <C <U PropHelpers>><U created=>created<> -> Float @ Loc {file=test/testdata/dsl/prop.rb start=65:3 end=65:10}
      argument <C <U PropHelpers>><U created=><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U PropHelpers>><U token> (<blk>) -> String @ Loc {file=test/testdata/dsl/prop.rb start=64:3 end=64:13}
      argument <C <U PropHelpers>><U token><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U PropHelpers>><U token=> (token, <blk>) -> String @ Loc {file=test/testdata/dsl/prop.rb start=64:3 end=64:13}
      argument <C <U PropHelpers>><U token=>token<> -> String @ Loc {file=test/testdata/dsl/prop.rb start=64:3 end=64:8}
      argument <C <U PropHelpers>><U token=><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
  class <S <C <U PropHelpers>> $1> < <S <C <U Object>> $1> () @ Loc {file=test/testdata/dsl/prop.rb start=63:7 end=63:18}
    method <S <C <U PropHelpers>> $1><U <static-init>> (<blk>) @ Loc {file=test/testdata/dsl/prop.rb start=64:3 end=64:13}
      argument <S <C <U PropHelpers>> $1><U <static-init>><blk><block> @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
  class <C <U PropHelpers2>> < <C <U Object>> () @ Loc {file=test/testdata/dsl/prop.rb start=68:1 end=68:19}
    method <C <U PropHelpers2>><U created> (<blk>) -> Float @ Loc {file=test/testdata/dsl/prop.rb start=70:3 end=70:32}
      argument <C <U PropHelpers2>><U created><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U PropHelpers2>><U token> (<blk>) -> String @ Loc {file=test/testdata/dsl/prop.rb start=69:3 end=69:25}
      argument <C <U PropHelpers2>><U token><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U PropHelpers2>><U token=> (token, <blk>) -> String @ Loc {file=test/testdata/dsl/prop.rb start=69:3 end=69:25}
      argument <C <U PropHelpers2>><U token=>token<> -> String @ Loc {file=test/testdata/dsl/prop.rb start=69:15 end=69:20}
      argument <C <U PropHelpers2>><U token=><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
  class <S <C <U PropHelpers2>> $1> < <S <C <U Object>> $1> () @ Loc {file=test/testdata/dsl/prop.rb start=68:7 end=68:19}
    method <S <C <U PropHelpers2>> $1><U <static-init>> (<blk>) @ Loc {file=test/testdata/dsl/prop.rb start=69:3 end=69:25}
      argument <S <C <U PropHelpers2>> $1><U <static-init>><blk><block> @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
  class <C <U ShardingProp>> < <C <U Object>> () @ Loc {file=test/testdata/dsl/prop.rb start=73:1 end=73:19}
    method <C <U ShardingProp>><U merchant> (<blk>) -> String @ Loc {file=test/testdata/dsl/prop.rb start=74:3 end=74:16}
      argument <C <U ShardingProp>><U merchant><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
  class <S <C <U ShardingProp>> $1> < <S <C <U Object>> $1> () @ Loc {file=test/testdata/dsl/prop.rb start=73:7 end=73:19}
    method <S <C <U ShardingProp>> $1><U <static-init>> (<blk>) @ Loc {file=test/testdata/dsl/prop.rb start=74:3 end=74:16}
      argument <S <C <U ShardingProp>> $1><U <static-init>><blk><block> @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
  class <C <U SomeODM>> < <C <U Object>> () @ Loc {file=test/testdata/dsl/prop.rb start=21:1 end=21:14}
    method <C <U SomeODM>><U foo> (<blk>) -> String @ Loc {file=test/testdata/dsl/prop.rb start=24:5 end=24:22}
      argument <C <U SomeODM>><U foo><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U SomeODM>><U foo2> (<blk>) -> String | NilClass @ Loc {file=test/testdata/dsl/prop.rb start=27:5 end=27:13}
      argument <C <U SomeODM>><U foo2><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U SomeODM>><U foo2=> (arg0, <blk>) -> String @ Loc {file=test/testdata/dsl/prop.rb start=29:5 end=29:20}
      argument <C <U SomeODM>><U foo2=>arg0<> -> String @ Loc {file=test/testdata/dsl/prop.rb start=28:17 end=28:21}
      argument <C <U SomeODM>><U foo2=><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
    method <C <U SomeODM>><U foo=> (foo, <blk>) -> String @ Loc {file=test/testdata/dsl/prop.rb start=24:5 end=24:22}
      argument <C <U SomeODM>><U foo=>foo<> -> String @ Loc {file=test/testdata/dsl/prop.rb start=24:11 end=24:14}
      argument <C <U SomeODM>><U foo=><blk><block> -> T.untyped @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}
  class <S <C <U SomeODM>> $1> < <S <C <U Object>> $1> (<C <U Sig>>) @ Loc {file=test/testdata/dsl/prop.rb start=21:7 end=21:14}
    method <S <C <U SomeODM>> $1><U <static-init>> (<blk>) @ Loc {file=test/testdata/dsl/prop.rb start=24:5 end=24:22}
      argument <S <C <U SomeODM>> $1><U <static-init>><blk><block> @ Loc {file=test/testdata/dsl/prop.rb start=??? end=???}

