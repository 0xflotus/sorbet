class <emptyTree><<constant:<root>>> < ()
  begin
    begin
      assignTemp$2 = self(<constant:<todo sym>>).some_array()
      <emptyTree>::<constant:A> = assignTemp$2.[](0)
      <emptyTree>::<constant:B> = assignTemp$2.[](1)
      <emptyTree>::<constant:C> = assignTemp$2.[](2)
      assignTemp$2
    end
    class <emptyTree>::<constant:Test><<constant:<todo sym>>> < (::<constant:<todo sym>>)
      def some_method<<constant:<todo sym>>>(array)
        begin
          begin
            assignTemp$2 = array
            a = assignTemp$2.[](0)
            b = assignTemp$2.[](1)
            begin
              assignTemp$3 = assignTemp$2.[](2)
              c = assignTemp$3.[](0)
              d = assignTemp$3.[](1)
              assignTemp$3
            end
            assignTemp$2
          end
          begin
            assignTemp$4 = array
            a.[]=(b, assignTemp$4.[](0))
            c = assignTemp$4.[](1)
            assignTemp$4
          end
          begin
            assignTemp$5 = array
            a = assignTemp$5.[](0)
            b = assignTemp$5.slice(::<constant:Range>.new(1, -1, false))
            assignTemp$5
          end
          begin
            assignTemp$6 = array
            a = assignTemp$6.slice(::<constant:Range>.new(0, -1, true))
            b = assignTemp$6.[](-1)
            assignTemp$6
          end
          begin
            assignTemp$7 = array
            a = assignTemp$7.[](0)
            b = assignTemp$7.[](1)
            c = assignTemp$7.slice(::<constant:Range>.new(2, -2, true))
            d = assignTemp$7.[](-2)
            e = assignTemp$7.[](-1)
            assignTemp$7
          end
          begin
            assignTemp$8 = array
            a = assignTemp$8.[](0)
            assignTemp$8
          end
        end
      end
    end
  end
end
