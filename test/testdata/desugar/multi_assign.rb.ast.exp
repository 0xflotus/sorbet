class <emptyTree><<C <U <root>>>> < ()
  begin
    <D <U <assignTemp>> $2> = ::<Magic>.<U <expand-splat>>(self(<C <U <todo sym>>>).<U some_array>(), 3, 0)
    <emptyTree>::<C <U A>> = <D <U <assignTemp>> $2>.<U []>(0)
    <emptyTree>::<C <U B>> = <D <U <assignTemp>> $2>.<U []>(1)
    <emptyTree>::<C <U C>> = <D <U <assignTemp>> $2>.<U []>(2)
    <D <U <assignTemp>> $2>
  end

  class <emptyTree>::<C <U Test>><<C <U <todo sym>>>> < (::<todo sym>)
    def <U some_method><<C <U <todo sym>>>>(<U array>, &<U <blk>>)
      begin
        begin
          <D <U <assignTemp>> $2> = ::<Magic>.<U <expand-splat>>(<U array>, 3, 0)
          <U a> = <D <U <assignTemp>> $2>.<U []>(0)
          <U b> = <D <U <assignTemp>> $2>.<U []>(1)
          begin
            <D <U <assignTemp>> $3> = ::<Magic>.<U <expand-splat>>(<D <U <assignTemp>> $2>.<U []>(2), 2, 0)
            <U c> = <D <U <assignTemp>> $3>.<U []>(0)
            <U d> = <D <U <assignTemp>> $3>.<U []>(1)
            <D <U <assignTemp>> $3>
          end
          <D <U <assignTemp>> $2>
        end
        begin
          <D <U <assignTemp>> $4> = ::<Magic>.<U <expand-splat>>(<U array>, 2, 0)
          <U a>.<U []=>(<U b>, <D <U <assignTemp>> $4>.<U []>(0))
          <U c> = <D <U <assignTemp>> $4>.<U []>(1)
          <D <U <assignTemp>> $4>
        end
        begin
          <D <U <assignTemp>> $5> = ::<Magic>.<U <expand-splat>>(<U array>, 1, 0)
          <U a> = <D <U <assignTemp>> $5>.<U []>(0)
          <U b> = <D <U <assignTemp>> $5>.<U slice>(::Range.<U new>(1, -1, false))
          <D <U <assignTemp>> $5>
        end
        begin
          <D <U <assignTemp>> $6> = ::<Magic>.<U <expand-splat>>(<U array>, 0, 1)
          <U a> = <D <U <assignTemp>> $6>.<U slice>(::Range.<U new>(0, -1, true))
          <U b> = <D <U <assignTemp>> $6>.<U []>(-1)
          <D <U <assignTemp>> $6>
        end
        begin
          <D <U <assignTemp>> $7> = ::<Magic>.<U <expand-splat>>(<U array>, 2, 2)
          <U a> = <D <U <assignTemp>> $7>.<U []>(0)
          <U b> = <D <U <assignTemp>> $7>.<U []>(1)
          <U c> = <D <U <assignTemp>> $7>.<U slice>(::Range.<U new>(2, -2, true))
          <U d> = <D <U <assignTemp>> $7>.<U []>(-2)
          <U e> = <D <U <assignTemp>> $7>.<U []>(-1)
          <D <U <assignTemp>> $7>
        end
        begin
          <D <U <assignTemp>> $8> = ::<Magic>.<U <expand-splat>>(<U array>, 1, 0)
          <U a> = <D <U <assignTemp>> $8>.<U []>(0)
          <D <U <assignTemp>> $8>
        end
      end
    end
  end
end
