digraph "for.rb"{
subgraph "cluster_#<static-init>$6" {
    label = "#<static-init>$6";
    color = blue;
    "bb#<static-init>$6_0" [shape = invhouse];
    "bb#<static-init>$6_1" [shape = parallelogram];

    "bb#<static-init>$6_0" [label = "block[id=0]()
<constant:Main>$8 = alias <constant:Main> : <class:Main>
returnMethodTemp$2 = <constant:Main>$8.main() : untyped
finalReturn = return returnMethodTemp$2 : <bottom>
<unconditional>"];

    "bb#<static-init>$6_0" -> "bb#<static-init>$6_1" [style="bold"];
    "bb#<static-init>$6_1" [label = "block[id=1]()
<unconditional>"];

    "bb#<static-init>$6_1" -> "bb#<static-init>$6_1" [style="bold"];
}

subgraph "cluster_::<singleton class:<constant:A>>#each" {
    label = "::<singleton class:<constant:A>>#each";
    color = blue;
    "bb::<singleton class:<constant:A>>#each_0" [shape = invhouse];
    "bb::<singleton class:<constant:A>>#each_1" [shape = parallelogram];

    "bb::<singleton class:<constant:A>>#each_0" [label = "block[id=0]()
<constant:<Magic>>$12 = alias <constant:<Magic>> : <Magic>
selfMethodTemp$3 = self : <class:A>
<blk> = load_arg(selfMethodTemp$3#each, 0) : untyped
arrayTemp$7 = 1 : Integer(1)
arrayTemp$8 = 2 : Integer(2)
arrayTemp$9 = 3 : Integer(3)
arrayTemp$10 = 4 : Integer(4)
arrayTemp$11 = 5 : Integer(5)
statTemp$6 = <constant:<Magic>>$12.<build-array>(arrayTemp$7, arrayTemp$8, arrayTemp$9, arrayTemp$10, arrayTemp$11) : TupleType {
  0 = Integer(1)
  1 = Integer(2)
  2 = Integer(3)
  3 = Integer(4)
  4 = Integer(5)
}
statTemp$4 = <blk>.call(statTemp$6) : untyped
arrayTemp$15 = 6 : Integer(6)
arrayTemp$16 = 7 : Integer(7)
arrayTemp$17 = 8 : Integer(8)
arrayTemp$18 = 9 : Integer(9)
arrayTemp$19 = 0 : Integer(0)
statTemp$14 = <constant:<Magic>>$12.<build-array>(arrayTemp$15, arrayTemp$16, arrayTemp$17, arrayTemp$18, arrayTemp$19) : TupleType {
  0 = Integer(6)
  1 = Integer(7)
  2 = Integer(8)
  3 = Integer(9)
  4 = Integer(0)
}
returnMethodTemp$2 = <blk>.call(statTemp$14) : untyped
finalReturn = return returnMethodTemp$2 : <bottom>
<unconditional>"];

    "bb::<singleton class:<constant:A>>#each_0" -> "bb::<singleton class:<constant:A>>#each_1" [style="bold"];
    "bb::<singleton class:<constant:A>>#each_1" [label = "block[id=1]()
<unconditional>"];

    "bb::<singleton class:<constant:A>>#each_1" -> "bb::<singleton class:<constant:A>>#each_1" [style="bold"];
}

subgraph "cluster_::<singleton class:<constant:E>>#e=" {
    label = "::<singleton class:<constant:E>>#e=";
    color = blue;
    "bb::<singleton class:<constant:E>>#e=_0" [shape = invhouse];
    "bb::<singleton class:<constant:E>>#e=_1" [shape = parallelogram];

    "bb::<singleton class:<constant:E>>#e=_0" [label = "block[id=0]()
@e$4 = alias @e : untyped
selfMethodTemp$3 = self : <class:E>
e = load_arg(selfMethodTemp$3#e=, 0) : untyped
@e$4 = e : untyped
finalReturn = return @e$4 : <bottom>
<unconditional>"];

    "bb::<singleton class:<constant:E>>#e=_0" -> "bb::<singleton class:<constant:E>>#e=_1" [style="bold"];
    "bb::<singleton class:<constant:E>>#e=_1" [label = "block[id=1]()
<unconditional>"];

    "bb::<singleton class:<constant:E>>#e=_1" -> "bb::<singleton class:<constant:E>>#e=_1" [style="bold"];
}

subgraph "cluster_::<singleton class:<constant:E>>#e" {
    label = "::<singleton class:<constant:E>>#e";
    color = blue;
    "bb::<singleton class:<constant:E>>#e_0" [shape = invhouse];
    "bb::<singleton class:<constant:E>>#e_1" [shape = parallelogram];

    "bb::<singleton class:<constant:E>>#e_0" [label = "block[id=0]()
@e$4 = alias @e : untyped
finalReturn = return @e$4 : <bottom>
<unconditional>"];

    "bb::<singleton class:<constant:E>>#e_0" -> "bb::<singleton class:<constant:E>>#e_1" [style="bold"];
    "bb::<singleton class:<constant:E>>#e_1" [label = "block[id=1]()
<unconditional>"];

    "bb::<singleton class:<constant:E>>#e_1" -> "bb::<singleton class:<constant:E>>#e_1" [style="bold"];
}

subgraph "cluster_::<singleton class:<constant:Main>>#main" {
    label = "::<singleton class:<constant:Main>>#main";
    color = blue;
    "bb::<singleton class:<constant:Main>>#main_0" [shape = invhouse];
    "bb::<singleton class:<constant:Main>>#main_1" [shape = parallelogram];

    "bb::<singleton class:<constant:Main>>#main_0" [label = "block[id=0](<constant:A>$12, <constant:E>$100, @a$84, @@b$88, $c$92)
<constant:A>$12 = alias <constant:A> : <class:A>
<constant:E>$100 = alias <constant:E> : <class:E>
@a$84 = alias @a : untyped
@@b$88 = alias @@b : untyped
$c$92 = alias $c : untyped
statTemp$10 = <constant:A>$12.each() : untyped
<unconditional>"];

    "bb::<singleton class:<constant:Main>>#main_0" -> "bb::<singleton class:<constant:Main>>#main_2" [style="bold"];
    "bb::<singleton class:<constant:Main>>#main_1" [label = "block[id=1]()
<unconditional>"];

    "bb::<singleton class:<constant:Main>>#main_1" -> "bb::<singleton class:<constant:Main>>#main_1" [style="bold"];
    "bb::<singleton class:<constant:Main>>#main_2" [label = "block[id=2](<constant:A>$12, <constant:E>$100, @a$84, @@b$88, $c$92)
outerLoops: 1
<block-call>"];

    "bb::<singleton class:<constant:Main>>#main_2" -> "bb::<singleton class:<constant:Main>>#main_4" [style="bold"];
    "bb::<singleton class:<constant:Main>>#main_2" -> "bb::<singleton class:<constant:Main>>#main_3" [style="tapered"];

    "bb::<singleton class:<constant:Main>>#main_3" [label = "block[id=3](<constant:A>$12, <constant:E>$100, @a$84, @@b$88, $c$92)
statTemp$23 = <constant:A>$12.each() : untyped
<unconditional>"];

    "bb::<singleton class:<constant:Main>>#main_3" -> "bb::<singleton class:<constant:Main>>#main_5" [style="bold"];
    "bb::<singleton class:<constant:Main>>#main_4" [label = "block[id=4](<constant:A>$12, <constant:E>$100, @a$84, @@b$88, $c$92)
outerLoops: 1
forTemp$2$6106 = load_yield_param(::<singleton class:<constant:Main>>#main#<block>$2, 0) : untyped
statTemp$18 = 0 : Integer(0)
a$6106 = forTemp$2$6106.[](statTemp$18) : untyped
statTemp$19 = self : <class:Main>
statTemp$20 = a$6106.inspect() : untyped
blockReturnTemp$13 = statTemp$19.puts(statTemp$20) : NilClass
blockReturnTemp$22 = blockreturn<::<singleton class:<constant:Main>>#main#<block>$2> blockReturnTemp$13 : <bottom>
<unconditional>"];

    "bb::<singleton class:<constant:Main>>#main_4" -> "bb::<singleton class:<constant:Main>>#main_2" [style="bold"];
    "bb::<singleton class:<constant:Main>>#main_5" [label = "block[id=5](<constant:A>$12, <constant:E>$100, @a$84, @@b$88, $c$92)
outerLoops: 1
<block-call>"];

    "bb::<singleton class:<constant:Main>>#main_5" -> "bb::<singleton class:<constant:Main>>#main_7" [style="bold"];
    "bb::<singleton class:<constant:Main>>#main_5" -> "bb::<singleton class:<constant:Main>>#main_6" [style="tapered"];

    "bb::<singleton class:<constant:Main>>#main_6" [label = "block[id=6](<constant:A>$12, <constant:E>$100, @a$84, @@b$88, $c$92)
statTemp$36 = <constant:A>$12.each() : untyped
<unconditional>"];

    "bb::<singleton class:<constant:Main>>#main_6" -> "bb::<singleton class:<constant:Main>>#main_8" [style="bold"];
    "bb::<singleton class:<constant:Main>>#main_7" [label = "block[id=7](<constant:A>$12, <constant:E>$100, @a$84, @@b$88, $c$92)
outerLoops: 1
forTemp$6108 = load_yield_param(::<singleton class:<constant:Main>>#main#<block>$3, 0) : untyped
assignTemp$4$6108 = forTemp$6108.to_a() : untyped
statTemp$31 = 0 : Integer(0)
a$6108 = assignTemp$4$6108.[](statTemp$31) : untyped
statTemp$32 = self : <class:Main>
statTemp$33 = a$6108.inspect() : untyped
blockReturnTemp$25 = statTemp$32.puts(statTemp$33) : NilClass
blockReturnTemp$35 = blockreturn<::<singleton class:<constant:Main>>#main#<block>$3> blockReturnTemp$25 : <bottom>
<unconditional>"];

    "bb::<singleton class:<constant:Main>>#main_7" -> "bb::<singleton class:<constant:Main>>#main_5" [style="bold"];
    "bb::<singleton class:<constant:Main>>#main_8" [label = "block[id=8](<constant:A>$12, <constant:E>$100, @a$84, @@b$88, $c$92)
outerLoops: 1
<block-call>"];

    "bb::<singleton class:<constant:Main>>#main_8" -> "bb::<singleton class:<constant:Main>>#main_10" [style="bold"];
    "bb::<singleton class:<constant:Main>>#main_8" -> "bb::<singleton class:<constant:Main>>#main_9" [style="tapered"];

    "bb::<singleton class:<constant:Main>>#main_9" [label = "block[id=9](<constant:A>$12, <constant:E>$100, @a$84, @@b$88, $c$92)
statTemp$55 = <constant:A>$12.each() : untyped
<unconditional>"];

    "bb::<singleton class:<constant:Main>>#main_9" -> "bb::<singleton class:<constant:Main>>#main_11" [style="bold"];
    "bb::<singleton class:<constant:Main>>#main_10" [label = "block[id=10](<constant:A>$12, <constant:E>$100, @a$84, @@b$88, $c$92)
outerLoops: 1
forTemp$5$6110 = load_yield_param(::<singleton class:<constant:Main>>#main#<block>$4, 0) : untyped
statTemp$43 = 0 : Integer(0)
a$6110 = forTemp$5$6110.[](statTemp$43) : untyped
statTemp$46 = 1 : Integer(1)
b$6110 = forTemp$5$6110.[](statTemp$46) : untyped
statTemp$48 = self : <class:Main>
statTemp$49 = a$6110.inspect() : untyped
statTemp$47 = statTemp$48.puts(statTemp$49) : NilClass
statTemp$51 = self : <class:Main>
statTemp$52 = b$6110.inspect() : untyped
blockReturnTemp$38 = statTemp$51.puts(statTemp$52) : NilClass
blockReturnTemp$54 = blockreturn<::<singleton class:<constant:Main>>#main#<block>$4> blockReturnTemp$38 : <bottom>
<unconditional>"];

    "bb::<singleton class:<constant:Main>>#main_10" -> "bb::<singleton class:<constant:Main>>#main_8" [style="bold"];
    "bb::<singleton class:<constant:Main>>#main_11" [label = "block[id=11](<constant:A>$12, <constant:E>$100, @a$84, @@b$88, $c$92)
outerLoops: 1
<block-call>"];

    "bb::<singleton class:<constant:Main>>#main_11" -> "bb::<singleton class:<constant:Main>>#main_13" [style="bold"];
    "bb::<singleton class:<constant:Main>>#main_11" -> "bb::<singleton class:<constant:Main>>#main_12" [style="tapered"];

    "bb::<singleton class:<constant:Main>>#main_12" [label = "block[id=12](<constant:A>$12, <constant:E>$100, @a$84, @@b$88, $c$92)
statTemp$76 = self : <class:Main>
statTemp$77 = main : String(\"main\")
statTemp$75 = statTemp$76.puts(statTemp$77) : NilClass
statTemp$78 = <constant:A>$12.each() : untyped
<unconditional>"];

    "bb::<singleton class:<constant:Main>>#main_12" -> "bb::<singleton class:<constant:Main>>#main_14" [style="bold"];
    "bb::<singleton class:<constant:Main>>#main_13" [label = "block[id=13](<constant:A>$12, <constant:E>$100, @a$84, @@b$88, $c$92)
outerLoops: 1
forTemp$6112 = load_yield_param(::<singleton class:<constant:Main>>#main#<block>$5, 0) : untyped
assignTemp$7$6112 = forTemp$6112.to_a() : untyped
statTemp$63 = 0 : Integer(0)
a$6112 = assignTemp$7$6112.[](statTemp$63) : untyped
statTemp$66 = 1 : Integer(1)
b$6112 = assignTemp$7$6112.[](statTemp$66) : untyped
statTemp$68 = self : <class:Main>
statTemp$69 = a$6112.inspect() : untyped
statTemp$67 = statTemp$68.puts(statTemp$69) : NilClass
statTemp$71 = self : <class:Main>
statTemp$72 = b$6112.inspect() : untyped
blockReturnTemp$57 = statTemp$71.puts(statTemp$72) : NilClass
blockReturnTemp$74 = blockreturn<::<singleton class:<constant:Main>>#main#<block>$5> blockReturnTemp$57 : <bottom>
<unconditional>"];

    "bb::<singleton class:<constant:Main>>#main_13" -> "bb::<singleton class:<constant:Main>>#main_11" [style="bold"];
    "bb::<singleton class:<constant:Main>>#main_14" [label = "block[id=14](<constant:A>$12, <constant:E>$100, @a$84, @@b$88, $c$92)
outerLoops: 1
<block-call>"];

    "bb::<singleton class:<constant:Main>>#main_14" -> "bb::<singleton class:<constant:Main>>#main_16" [style="bold"];
    "bb::<singleton class:<constant:Main>>#main_14" -> "bb::<singleton class:<constant:Main>>#main_15" [style="tapered"];

    "bb::<singleton class:<constant:Main>>#main_15" [label = "block[id=15](<constant:A>$12, <constant:E>$100, @a$84, @@b$88, $c$92)
returnMethodTemp$8 = <constant:A>$12.each() : untyped
<unconditional>"];

    "bb::<singleton class:<constant:Main>>#main_15" -> "bb::<singleton class:<constant:Main>>#main_17" [style="bold"];
    "bb::<singleton class:<constant:Main>>#main_16" [label = "block[id=16](<constant:A>$12, <constant:E>$100, @a$84, @@b$88, $c$92)
outerLoops: 1
forTemp$8$6114 = load_yield_param(::<singleton class:<constant:Main>>#main#<block>$6, 0) : untyped
statTemp$86 = 0 : Integer(0)
@a$84 = forTemp$8$6114.[](statTemp$86) : untyped
statTemp$90 = 1 : Integer(1)
@@b$88 = forTemp$8$6114.[](statTemp$90) : untyped
statTemp$94 = 2 : Integer(2)
$c$92 = forTemp$8$6114.[](statTemp$94) : untyped
statTemp$97 = 3 : Integer(3)
d$6114 = forTemp$8$6114.[](statTemp$97) : untyped
statTemp$103 = 4 : Integer(4)
statTemp$101 = forTemp$8$6114.[](statTemp$103) : untyped
statTemp$98 = <constant:E>$100.e=(statTemp$101) : untyped
statTemp$105 = self : <class:Main>
statTemp$106 = @a$84.inspect() : untyped
statTemp$104 = statTemp$105.puts(statTemp$106) : NilClass
statTemp$109 = self : <class:Main>
statTemp$110 = @@b$88.inspect() : untyped
statTemp$108 = statTemp$109.puts(statTemp$110) : NilClass
statTemp$113 = self : <class:Main>
statTemp$114 = $c$92.inspect() : untyped
statTemp$112 = statTemp$113.puts(statTemp$114) : NilClass
statTemp$117 = self : <class:Main>
statTemp$118 = d$6114.inspect() : untyped
statTemp$116 = statTemp$117.puts(statTemp$118) : NilClass
statTemp$120 = self : <class:Main>
statTemp$122 = <constant:E>$100.e() : untyped
statTemp$121 = statTemp$122.inspect() : untyped
blockReturnTemp$80 = statTemp$120.puts(statTemp$121) : NilClass
blockReturnTemp$124 = blockreturn<::<singleton class:<constant:Main>>#main#<block>$6> blockReturnTemp$80 : <bottom>
<unconditional>"];

    "bb::<singleton class:<constant:Main>>#main_16" -> "bb::<singleton class:<constant:Main>>#main_14" [style="bold"];
    "bb::<singleton class:<constant:Main>>#main_17" [label = "block[id=17](returnMethodTemp$8, <constant:E>$100, @a$84, @@b$88, $c$92)
outerLoops: 1
<block-call>"];

    "bb::<singleton class:<constant:Main>>#main_17" -> "bb::<singleton class:<constant:Main>>#main_19" [style="bold"];
    "bb::<singleton class:<constant:Main>>#main_17" -> "bb::<singleton class:<constant:Main>>#main_18" [style="tapered"];

    "bb::<singleton class:<constant:Main>>#main_18" [label = "block[id=18](returnMethodTemp$8)
finalReturn = return returnMethodTemp$8 : <bottom>
<unconditional>"];

    "bb::<singleton class:<constant:Main>>#main_18" -> "bb::<singleton class:<constant:Main>>#main_1" [style="bold"];
    "bb::<singleton class:<constant:Main>>#main_19" [label = "block[id=19](returnMethodTemp$8, <constant:E>$100, @a$84, @@b$88, $c$92)
outerLoops: 1
forTemp$6117 = load_yield_param(::<singleton class:<constant:Main>>#main#<block>$7, 0) : untyped
assignTemp$10$6117 = forTemp$6117.to_a() : untyped
statTemp$132 = 0 : Integer(0)
@a$84 = assignTemp$10$6117.[](statTemp$132) : untyped
statTemp$135 = 1 : Integer(1)
@@b$88 = assignTemp$10$6117.[](statTemp$135) : untyped
statTemp$138 = 2 : Integer(2)
$c$92 = assignTemp$10$6117.[](statTemp$138) : untyped
statTemp$141 = 3 : Integer(3)
d$6117 = assignTemp$10$6117.[](statTemp$141) : untyped
statTemp$146 = 4 : Integer(4)
statTemp$144 = assignTemp$10$6117.[](statTemp$146) : untyped
statTemp$142 = <constant:E>$100.e=(statTemp$144) : untyped
statTemp$148 = self : <class:Main>
statTemp$149 = @a$84.inspect() : untyped
statTemp$147 = statTemp$148.puts(statTemp$149) : NilClass
statTemp$152 = self : <class:Main>
statTemp$153 = @@b$88.inspect() : untyped
statTemp$151 = statTemp$152.puts(statTemp$153) : NilClass
statTemp$156 = self : <class:Main>
statTemp$157 = $c$92.inspect() : untyped
statTemp$155 = statTemp$156.puts(statTemp$157) : NilClass
statTemp$160 = self : <class:Main>
statTemp$161 = d$6117.inspect() : untyped
statTemp$159 = statTemp$160.puts(statTemp$161) : NilClass
statTemp$163 = self : <class:Main>
statTemp$165 = <constant:E>$100.e() : untyped
statTemp$164 = statTemp$165.inspect() : untyped
blockReturnTemp$126 = statTemp$163.puts(statTemp$164) : NilClass
blockReturnTemp$167 = blockreturn<::<singleton class:<constant:Main>>#main#<block>$7> blockReturnTemp$126 : <bottom>
<unconditional>"];

    "bb::<singleton class:<constant:Main>>#main_19" -> "bb::<singleton class:<constant:Main>>#main_17" [style="bold"];
}

}

