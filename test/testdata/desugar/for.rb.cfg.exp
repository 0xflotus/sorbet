digraph "for.rb" {
subgraph "cluster_#<static-init>" {
    label = "#<static-init>";
    color = blue;
    "bb#<static-init>_0" [shape = invhouse];
    "bb#<static-init>_1" [shape = parallelogram];

    "bb#<static-init>_0" [
        label = "block[id=0]()\l<U <statTemp>>$5: T.class_of(RubyTyper) = alias <C <U RubyTyper>>\l<U <statTemp>>$6: T.class_of(A) = alias <C <U A>>\l<U <statTemp>>$4: RubyTyper::Void = <U <statTemp>>$5: T.class_of(RubyTyper).<U keep_for_ide>(<U <statTemp>>$6: T.class_of(A))\l<U <statTemp>>$9: T.class_of(RubyTyper) = alias <C <U RubyTyper>>\l<U <statTemp>>$10: T.class_of(E) = alias <C <U E>>\l<U <statTemp>>$8: RubyTyper::Void = <U <statTemp>>$9: T.class_of(RubyTyper).<U keep_for_ide>(<U <statTemp>>$10: T.class_of(E))\l<U <statTemp>>$13: T.class_of(RubyTyper) = alias <C <U RubyTyper>>\l<U <statTemp>>$14: T.class_of(Main) = alias <C <U Main>>\l<U <statTemp>>$12: RubyTyper::Void = <U <statTemp>>$13: T.class_of(RubyTyper).<U keep_for_ide>(<U <statTemp>>$14: T.class_of(Main))\l<U <statTemp>>$16: T.class_of(Main) = alias <C <U Main>>\l<U <statTemp>>$15: T.untyped = <U <statTemp>>$16: T.class_of(Main).<U main>()\l<U <finalReturn>>: T.noreturn = return <U <returnMethodTemp>>$2: NilClass\l<unconditional>\l"
    ];

    "bb#<static-init>_0" -> "bb#<static-init>_1" [style="bold"];
    "bb#<static-init>_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb#<static-init>_1" -> "bb#<static-init>_1" [style="bold"];
}

subgraph "cluster_::<Class:A>#each" {
    label = "::<Class:A>#each";
    color = blue;
    "bb::<Class:A>#each_0" [shape = invhouse];
    "bb::<Class:A>#each_1" [shape = parallelogram];

    "bb::<Class:A>#each_0" [
        label = "block[id=0]()\l<U <blk>>: T.untyped = load_arg(A.each#<blk>)\l<U <statTemp>>$5: Integer(1) = 1\l<U <statTemp>>$6: Integer(2) = 2\l<U <statTemp>>$7: Integer(3) = 3\l<U <statTemp>>$8: Integer(4) = 4\l<U <statTemp>>$9: Integer(5) = 5\l<U <statTemp>>$3: T.untyped = <U <blk>>: T.untyped.<U call>(<U <statTemp>>$5: Integer(1), <U <statTemp>>$6: Integer(2), <U <statTemp>>$7: Integer(3), <U <statTemp>>$8: Integer(4), <U <statTemp>>$9: Integer(5))\l<U <statTemp>>$11: Integer(6) = 6\l<U <statTemp>>$12: Integer(7) = 7\l<U <statTemp>>$13: Integer(8) = 8\l<U <statTemp>>$14: Integer(9) = 9\l<U <statTemp>>$15: Integer(0) = 0\l<U <returnMethodTemp>>$2: T.untyped = <U <blk>>: T.untyped.<U call>(<U <statTemp>>$11: Integer(6), <U <statTemp>>$12: Integer(7), <U <statTemp>>$13: Integer(8), <U <statTemp>>$14: Integer(9), <U <statTemp>>$15: Integer(0))\l<U <finalReturn>>: T.noreturn = return <U <returnMethodTemp>>$2: T.untyped\l<unconditional>\l"
    ];

    "bb::<Class:A>#each_0" -> "bb::<Class:A>#each_1" [style="bold"];
    "bb::<Class:A>#each_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::<Class:A>#each_1" -> "bb::<Class:A>#each_1" [style="bold"];
}

subgraph "cluster_::<Class:E>#e=" {
    label = "::<Class:E>#e=";
    color = blue;
    "bb::<Class:E>#e=_0" [shape = invhouse];
    "bb::<Class:E>#e=_1" [shape = parallelogram];

    "bb::<Class:E>#e=_0" [
        label = "block[id=0]()\l<U @e>$3: T.untyped = alias <C <U <undeclared-field-stub>>>\l<U e>: T.untyped = load_arg(E.e=#e)\l<U @e>$3: T.untyped = <U e>\l<U <returnMethodTemp>>$2: T.untyped = <U @e>$3\l<U <finalReturn>>: T.noreturn = return <U <returnMethodTemp>>$2: T.untyped\l<unconditional>\l"
    ];

    "bb::<Class:E>#e=_0" -> "bb::<Class:E>#e=_1" [style="bold"];
    "bb::<Class:E>#e=_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::<Class:E>#e=_1" -> "bb::<Class:E>#e=_1" [style="bold"];
}

subgraph "cluster_::<Class:E>#e" {
    label = "::<Class:E>#e";
    color = blue;
    "bb::<Class:E>#e_0" [shape = invhouse];
    "bb::<Class:E>#e_1" [shape = parallelogram];

    "bb::<Class:E>#e_0" [
        label = "block[id=0]()\l<U @e>$3: T.untyped = alias <C <U <undeclared-field-stub>>>\l<U <returnMethodTemp>>$2: T.untyped = <U @e>$3\l<U <finalReturn>>: T.noreturn = return <U <returnMethodTemp>>$2: T.untyped\l<unconditional>\l"
    ];

    "bb::<Class:E>#e_0" -> "bb::<Class:E>#e_1" [style="bold"];
    "bb::<Class:E>#e_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::<Class:E>#e_1" -> "bb::<Class:E>#e_1" [style="bold"];
}

subgraph "cluster_::<Class:Main>#main" {
    label = "::<Class:Main>#main";
    color = blue;
    "bb::<Class:Main>#main_0" [shape = invhouse];
    "bb::<Class:Main>#main_1" [shape = parallelogram];

    "bb::<Class:Main>#main_0" [
        label = "block[id=0]()\l<U @a>$111: T.untyped = alias <C <U <undeclared-field-stub>>>\l<U @@b>$115: T.untyped = alias <C <U <undeclared-field-stub>>>\l<U $c>$119: T.untyped = alias <U $c>\l<U <statTemp>>$4: T.class_of(A) = alias <C <U A>>\l<U <block-pre-call-temp>>$5: T.untyped = <U <statTemp>>$4: T.class_of(A).<U each>()\l<unconditional>\l"
    ];

    "bb::<Class:Main>#main_0" -> "bb::<Class:Main>#main_2" [style="bold"];
    "bb::<Class:Main>#main_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::<Class:Main>#main_1" -> "bb::<Class:Main>#main_1" [style="bold"];
    "bb::<Class:Main>#main_2" [
        label = "block[id=2](<U @a>$111: T.untyped, <U @@b>$115: T.untyped, <U $c>$119: T.untyped)\louterLoops: 1\l<U <block-call>>: NilClass\l"
    ];

    "bb::<Class:Main>#main_2" -> "bb::<Class:Main>#main_5" [style="bold"];
    "bb::<Class:Main>#main_2" -> "bb::<Class:Main>#main_3" [style="tapered"];

    "bb::<Class:Main>#main_3" [
        label = "block[id=3](<U @a>$111: T.untyped, <U @@b>$115: T.untyped, <U $c>$119: T.untyped)\l<U <statTemp>>$3: T.untyped = Solve<::<Class:Main>#main#<block>>\l<U <statTemp>>$23: T.class_of(A) = alias <C <U A>>\l<U <block-pre-call-temp>>$24: T.untyped = <U <statTemp>>$23: T.class_of(A).<U each>()\l<unconditional>\l"
    ];

    "bb::<Class:Main>#main_3" -> "bb::<Class:Main>#main_6" [style="bold"];
    "bb::<Class:Main>#main_5" [
        label = "block[id=5](<U @a>$111: T.untyped, <U @@b>$115: T.untyped, <U $c>$119: T.untyped)\louterLoops: 1\l<U <blk>>$6: T.untyped = load_yield_params(::<Class:Main>#main#<block>, Main.main#<block>)\l<U <statTemp>>$11: T.class_of(<Magic>) = alias <C <U <Magic>>>\l<U <statTemp>>$13: Integer(1) = 1\l<U <statTemp>>$14: Integer(0) = 0\l<D <U <assignTemp>> $3>$1: T.untyped = <U <statTemp>>$11: T.class_of(<Magic>).<U <expand-splat>>(<U <blk>>$6: T.untyped, <U <statTemp>>$13: Integer(1), <U <statTemp>>$14: Integer(0))\l<U <statTemp>>$17: Integer(0) = 0\l<U a>$1: T.untyped = <D <U <assignTemp>> $3>$1: T.untyped.<U []>(<U <statTemp>>$17: Integer(0))\l<U <statTemp>>$18: T.class_of(Main) = self\l<U <statTemp>>$19: T.untyped = <U a>$1: T.untyped.<U inspect>()\l<U <blockReturnTemp>>$8: NilClass = <U <statTemp>>$18: T.class_of(Main).<U puts>(<U <statTemp>>$19: T.untyped)\l<U <blockReturnTemp>>$21: T.noreturn = blockreturn<::<Class:Main>#main#<block>> <U <blockReturnTemp>>$8: NilClass\l<unconditional>\l"
    ];

    "bb::<Class:Main>#main_5" -> "bb::<Class:Main>#main_2" [style="bold"];
    "bb::<Class:Main>#main_6" [
        label = "block[id=6](<U @a>$111: T.untyped, <U @@b>$115: T.untyped, <U $c>$119: T.untyped)\louterLoops: 1\l<U <block-call>>: NilClass\l"
    ];

    "bb::<Class:Main>#main_6" -> "bb::<Class:Main>#main_9" [style="bold"];
    "bb::<Class:Main>#main_6" -> "bb::<Class:Main>#main_7" [style="tapered"];

    "bb::<Class:Main>#main_7" [
        label = "block[id=7](<U @a>$111: T.untyped, <U @@b>$115: T.untyped, <U $c>$119: T.untyped)\l<U <statTemp>>$22: T.untyped = Solve<::<Class:Main>#main#<block>>\l<U <statTemp>>$43: T.class_of(A) = alias <C <U A>>\l<U <block-pre-call-temp>>$44: T.untyped = <U <statTemp>>$43: T.class_of(A).<U each>()\l<unconditional>\l"
    ];

    "bb::<Class:Main>#main_7" -> "bb::<Class:Main>#main_10" [style="bold"];
    "bb::<Class:Main>#main_9" [
        label = "block[id=9](<U @a>$111: T.untyped, <U @@b>$115: T.untyped, <U $c>$119: T.untyped)\louterLoops: 1\l<U <blk>>$25: T.untyped = load_yield_params(::<Class:Main>#main#<block>, Main.main#<block>)\l<U forTemp>$2: T.untyped = <U <blk>>$25\l<U <statTemp>>$30: T.class_of(<Magic>) = alias <C <U <Magic>>>\l<U <statTemp>>$31: T.untyped = <U forTemp>$2: T.untyped.<U to_a>()\l<U <statTemp>>$33: Integer(1) = 1\l<U <statTemp>>$34: Integer(0) = 0\l<D <U <assignTemp>> $4>$2: T.untyped = <U <statTemp>>$30: T.class_of(<Magic>).<U <expand-splat>>(<U <statTemp>>$31: T.untyped, <U <statTemp>>$33: Integer(1), <U <statTemp>>$34: Integer(0))\l<U <statTemp>>$37: Integer(0) = 0\l<U a>$2: T.untyped = <D <U <assignTemp>> $4>$2: T.untyped.<U []>(<U <statTemp>>$37: Integer(0))\l<U <statTemp>>$38: T.class_of(Main) = self\l<U <statTemp>>$39: T.untyped = <U a>$2: T.untyped.<U inspect>()\l<U <blockReturnTemp>>$27: NilClass = <U <statTemp>>$38: T.class_of(Main).<U puts>(<U <statTemp>>$39: T.untyped)\l<U <blockReturnTemp>>$41: T.noreturn = blockreturn<::<Class:Main>#main#<block>> <U <blockReturnTemp>>$27: NilClass\l<unconditional>\l"
    ];

    "bb::<Class:Main>#main_9" -> "bb::<Class:Main>#main_6" [style="bold"];
    "bb::<Class:Main>#main_10" [
        label = "block[id=10](<U @a>$111: T.untyped, <U @@b>$115: T.untyped, <U $c>$119: T.untyped)\louterLoops: 1\l<U <block-call>>: NilClass\l"
    ];

    "bb::<Class:Main>#main_10" -> "bb::<Class:Main>#main_13" [style="bold"];
    "bb::<Class:Main>#main_10" -> "bb::<Class:Main>#main_11" [style="tapered"];

    "bb::<Class:Main>#main_11" [
        label = "block[id=11](<U @a>$111: T.untyped, <U @@b>$115: T.untyped, <U $c>$119: T.untyped)\l<U <statTemp>>$42: T.untyped = Solve<::<Class:Main>#main#<block>>\l<U <statTemp>>$69: T.class_of(A) = alias <C <U A>>\l<U <block-pre-call-temp>>$70: T.untyped = <U <statTemp>>$69: T.class_of(A).<U each>()\l<unconditional>\l"
    ];

    "bb::<Class:Main>#main_11" -> "bb::<Class:Main>#main_14" [style="bold"];
    "bb::<Class:Main>#main_13" [
        label = "block[id=13](<U @a>$111: T.untyped, <U @@b>$115: T.untyped, <U $c>$119: T.untyped)\louterLoops: 1\l<U <blk>>$45: T.untyped = load_yield_params(::<Class:Main>#main#<block>, Main.main#<block>)\l<U <statTemp>>$50: T.class_of(<Magic>) = alias <C <U <Magic>>>\l<U <statTemp>>$52: Integer(2) = 2\l<U <statTemp>>$53: Integer(0) = 0\l<D <U <assignTemp>> $6>$3: T.untyped = <U <statTemp>>$50: T.class_of(<Magic>).<U <expand-splat>>(<U <blk>>$45: T.untyped, <U <statTemp>>$52: Integer(2), <U <statTemp>>$53: Integer(0))\l<U <statTemp>>$56: Integer(0) = 0\l<U a>$3: T.untyped = <D <U <assignTemp>> $6>$3: T.untyped.<U []>(<U <statTemp>>$56: Integer(0))\l<U <statTemp>>$59: Integer(1) = 1\l<U b>$3: T.untyped = <D <U <assignTemp>> $6>$3: T.untyped.<U []>(<U <statTemp>>$59: Integer(1))\l<U <statTemp>>$61: T.class_of(Main) = self\l<U <statTemp>>$62: T.untyped = <U a>$3: T.untyped.<U inspect>()\l<U <statTemp>>$60: NilClass = <U <statTemp>>$61: T.class_of(Main).<U puts>(<U <statTemp>>$62: T.untyped)\l<U <statTemp>>$64: T.class_of(Main) = self\l<U <statTemp>>$65: T.untyped = <U b>$3: T.untyped.<U inspect>()\l<U <blockReturnTemp>>$47: NilClass = <U <statTemp>>$64: T.class_of(Main).<U puts>(<U <statTemp>>$65: T.untyped)\l<U <blockReturnTemp>>$67: T.noreturn = blockreturn<::<Class:Main>#main#<block>> <U <blockReturnTemp>>$47: NilClass\l<unconditional>\l"
    ];

    "bb::<Class:Main>#main_13" -> "bb::<Class:Main>#main_10" [style="bold"];
    "bb::<Class:Main>#main_14" [
        label = "block[id=14](<U @a>$111: T.untyped, <U @@b>$115: T.untyped, <U $c>$119: T.untyped)\louterLoops: 1\l<U <block-call>>: NilClass\l"
    ];

    "bb::<Class:Main>#main_14" -> "bb::<Class:Main>#main_17" [style="bold"];
    "bb::<Class:Main>#main_14" -> "bb::<Class:Main>#main_15" [style="tapered"];

    "bb::<Class:Main>#main_15" [
        label = "block[id=15](<U @a>$111: T.untyped, <U @@b>$115: T.untyped, <U $c>$119: T.untyped)\l<U <statTemp>>$68: T.untyped = Solve<::<Class:Main>#main#<block>>\l<U <statTemp>>$96: T.class_of(Main) = self\l<U <statTemp>>$97: String(\"main\") = \"main\"\l<U <statTemp>>$95: NilClass = <U <statTemp>>$96: T.class_of(Main).<U puts>(<U <statTemp>>$97: String(\"main\"))\l<U <statTemp>>$99: T.class_of(A) = alias <C <U A>>\l<U <block-pre-call-temp>>$100: T.untyped = <U <statTemp>>$99: T.class_of(A).<U each>()\l<unconditional>\l"
    ];

    "bb::<Class:Main>#main_15" -> "bb::<Class:Main>#main_18" [style="bold"];
    "bb::<Class:Main>#main_17" [
        label = "block[id=17](<U @a>$111: T.untyped, <U @@b>$115: T.untyped, <U $c>$119: T.untyped)\louterLoops: 1\l<U <blk>>$71: T.untyped = load_yield_params(::<Class:Main>#main#<block>, Main.main#<block>)\l<U forTemp>$4: T.untyped = <U <blk>>$71\l<U <statTemp>>$76: T.class_of(<Magic>) = alias <C <U <Magic>>>\l<U <statTemp>>$77: T.untyped = <U forTemp>$4: T.untyped.<U to_a>()\l<U <statTemp>>$79: Integer(2) = 2\l<U <statTemp>>$80: Integer(0) = 0\l<D <U <assignTemp>> $7>$4: T.untyped = <U <statTemp>>$76: T.class_of(<Magic>).<U <expand-splat>>(<U <statTemp>>$77: T.untyped, <U <statTemp>>$79: Integer(2), <U <statTemp>>$80: Integer(0))\l<U <statTemp>>$83: Integer(0) = 0\l<U a>$4: T.untyped = <D <U <assignTemp>> $7>$4: T.untyped.<U []>(<U <statTemp>>$83: Integer(0))\l<U <statTemp>>$86: Integer(1) = 1\l<U b>$4: T.untyped = <D <U <assignTemp>> $7>$4: T.untyped.<U []>(<U <statTemp>>$86: Integer(1))\l<U <statTemp>>$88: T.class_of(Main) = self\l<U <statTemp>>$89: T.untyped = <U a>$4: T.untyped.<U inspect>()\l<U <statTemp>>$87: NilClass = <U <statTemp>>$88: T.class_of(Main).<U puts>(<U <statTemp>>$89: T.untyped)\l<U <statTemp>>$91: T.class_of(Main) = self\l<U <statTemp>>$92: T.untyped = <U b>$4: T.untyped.<U inspect>()\l<U <blockReturnTemp>>$73: NilClass = <U <statTemp>>$91: T.class_of(Main).<U puts>(<U <statTemp>>$92: T.untyped)\l<U <blockReturnTemp>>$94: T.noreturn = blockreturn<::<Class:Main>#main#<block>> <U <blockReturnTemp>>$73: NilClass\l<unconditional>\l"
    ];

    "bb::<Class:Main>#main_17" -> "bb::<Class:Main>#main_14" [style="bold"];
    "bb::<Class:Main>#main_18" [
        label = "block[id=18](<U @a>$111: T.untyped, <U @@b>$115: T.untyped, <U $c>$119: T.untyped)\louterLoops: 1\l<U <block-call>>: NilClass\l"
    ];

    "bb::<Class:Main>#main_18" -> "bb::<Class:Main>#main_21" [style="bold"];
    "bb::<Class:Main>#main_18" -> "bb::<Class:Main>#main_19" [style="tapered"];

    "bb::<Class:Main>#main_19" [
        label = "block[id=19](<U @a>$111: T.untyped, <U @@b>$115: T.untyped, <U $c>$119: T.untyped)\l<U <statTemp>>$98: T.untyped = Solve<::<Class:Main>#main#<block>>\l<U <statTemp>>$151: T.class_of(A) = alias <C <U A>>\l<U <block-pre-call-temp>>$152: T.untyped = <U <statTemp>>$151: T.class_of(A).<U each>()\l<unconditional>\l"
    ];

    "bb::<Class:Main>#main_19" -> "bb::<Class:Main>#main_22" [style="bold"];
    "bb::<Class:Main>#main_21" [
        label = "block[id=21](<U @a>$111: T.untyped, <U @@b>$115: T.untyped, <U $c>$119: T.untyped)\louterLoops: 1\l<U <blk>>$101: T.untyped = load_yield_params(::<Class:Main>#main#<block>, Main.main#<block>)\l<U <statTemp>>$106: T.class_of(<Magic>) = alias <C <U <Magic>>>\l<U <statTemp>>$108: Integer(5) = 5\l<U <statTemp>>$109: Integer(0) = 0\l<D <U <assignTemp>> $9>$5: T.untyped = <U <statTemp>>$106: T.class_of(<Magic>).<U <expand-splat>>(<U <blk>>$101: T.untyped, <U <statTemp>>$108: Integer(5), <U <statTemp>>$109: Integer(0))\l<U <statTemp>>$113: Integer(0) = 0\l<U @a>$111: T.untyped = <D <U <assignTemp>> $9>$5: T.untyped.<U []>(<U <statTemp>>$113: Integer(0))\l<U <statTemp>>$117: Integer(1) = 1\l<U @@b>$115: T.untyped = <D <U <assignTemp>> $9>$5: T.untyped.<U []>(<U <statTemp>>$117: Integer(1))\l<U <statTemp>>$121: Integer(2) = 2\l<U $c>$119: T.untyped = <D <U <assignTemp>> $9>$5: T.untyped.<U []>(<U <statTemp>>$121: Integer(2))\l<U <statTemp>>$124: Integer(3) = 3\l<U d>$5: T.untyped = <D <U <assignTemp>> $9>$5: T.untyped.<U []>(<U <statTemp>>$124: Integer(3))\l<U <statTemp>>$126: T.class_of(E) = alias <C <U E>>\l<U <statTemp>>$129: Integer(4) = 4\l<U <statTemp>>$127: T.untyped = <D <U <assignTemp>> $9>$5: T.untyped.<U []>(<U <statTemp>>$129: Integer(4))\l<U <statTemp>>$125: T.untyped = <U <statTemp>>$126: T.class_of(E).<U e=>(<U <statTemp>>$127: T.untyped)\l<U <statTemp>>$131: T.class_of(Main) = self\l<U <statTemp>>$132: T.untyped = <U @a>$111: T.untyped.<U inspect>()\l<U <statTemp>>$130: NilClass = <U <statTemp>>$131: T.class_of(Main).<U puts>(<U <statTemp>>$132: T.untyped)\l<U <statTemp>>$135: T.class_of(Main) = self\l<U <statTemp>>$136: T.untyped = <U @@b>$115: T.untyped.<U inspect>()\l<U <statTemp>>$134: NilClass = <U <statTemp>>$135: T.class_of(Main).<U puts>(<U <statTemp>>$136: T.untyped)\l<U <statTemp>>$139: T.class_of(Main) = self\l<U <statTemp>>$140: T.untyped = <U $c>$119: T.untyped.<U inspect>()\l<U <statTemp>>$138: NilClass = <U <statTemp>>$139: T.class_of(Main).<U puts>(<U <statTemp>>$140: T.untyped)\l<U <statTemp>>$143: T.class_of(Main) = self\l<U <statTemp>>$144: T.untyped = <U d>$5: T.untyped.<U inspect>()\l<U <statTemp>>$142: NilClass = <U <statTemp>>$143: T.class_of(Main).<U puts>(<U <statTemp>>$144: T.untyped)\l<U <statTemp>>$146: T.class_of(Main) = self\l<U <statTemp>>$149: T.class_of(E) = alias <C <U E>>\l<U <statTemp>>$148: T.untyped = <U <statTemp>>$149: T.class_of(E).<U e>()\l<U <statTemp>>$147: T.untyped = <U <statTemp>>$148: T.untyped.<U inspect>()\l<U <blockReturnTemp>>$103: NilClass = <U <statTemp>>$146: T.class_of(Main).<U puts>(<U <statTemp>>$147: T.untyped)\l<U <blockReturnTemp>>$150: T.noreturn = blockreturn<::<Class:Main>#main#<block>> <U <blockReturnTemp>>$103: NilClass\l<unconditional>\l"
    ];

    "bb::<Class:Main>#main_21" -> "bb::<Class:Main>#main_18" [style="bold"];
    "bb::<Class:Main>#main_22" [
        label = "block[id=22](<U @a>$111: T.untyped, <U @@b>$115: T.untyped, <U $c>$119: T.untyped)\louterLoops: 1\l<U <block-call>>: NilClass\l"
    ];

    "bb::<Class:Main>#main_22" -> "bb::<Class:Main>#main_25" [style="bold"];
    "bb::<Class:Main>#main_22" -> "bb::<Class:Main>#main_23" [style="tapered"];

    "bb::<Class:Main>#main_23" [
        label = "block[id=23]()\l<U <returnMethodTemp>>$2: T.untyped = Solve<::<Class:Main>#main#<block>>\l<U <finalReturn>>: T.noreturn = return <U <returnMethodTemp>>$2: T.untyped\l<unconditional>\l"
    ];

    "bb::<Class:Main>#main_23" -> "bb::<Class:Main>#main_1" [style="bold"];
    "bb::<Class:Main>#main_25" [
        label = "block[id=25](<U @a>$111: T.untyped, <U @@b>$115: T.untyped, <U $c>$119: T.untyped)\louterLoops: 1\l<U <blk>>$153: T.untyped = load_yield_params(::<Class:Main>#main#<block>, Main.main#<block>)\l<U forTemp>$6: T.untyped = <U <blk>>$153\l<U <statTemp>>$158: T.class_of(<Magic>) = alias <C <U <Magic>>>\l<U <statTemp>>$159: T.untyped = <U forTemp>$6: T.untyped.<U to_a>()\l<U <statTemp>>$161: Integer(5) = 5\l<U <statTemp>>$162: Integer(0) = 0\l<D <U <assignTemp>> $10>$6: T.untyped = <U <statTemp>>$158: T.class_of(<Magic>).<U <expand-splat>>(<U <statTemp>>$159: T.untyped, <U <statTemp>>$161: Integer(5), <U <statTemp>>$162: Integer(0))\l<U <statTemp>>$165: Integer(0) = 0\l<U @a>$111: T.untyped = <D <U <assignTemp>> $10>$6: T.untyped.<U []>(<U <statTemp>>$165: Integer(0))\l<U <statTemp>>$168: Integer(1) = 1\l<U @@b>$115: T.untyped = <D <U <assignTemp>> $10>$6: T.untyped.<U []>(<U <statTemp>>$168: Integer(1))\l<U <statTemp>>$171: Integer(2) = 2\l<U $c>$119: T.untyped = <D <U <assignTemp>> $10>$6: T.untyped.<U []>(<U <statTemp>>$171: Integer(2))\l<U <statTemp>>$174: Integer(3) = 3\l<U d>$6: T.untyped = <D <U <assignTemp>> $10>$6: T.untyped.<U []>(<U <statTemp>>$174: Integer(3))\l<U <statTemp>>$176: T.class_of(E) = alias <C <U E>>\l<U <statTemp>>$179: Integer(4) = 4\l<U <statTemp>>$177: T.untyped = <D <U <assignTemp>> $10>$6: T.untyped.<U []>(<U <statTemp>>$179: Integer(4))\l<U <statTemp>>$175: T.untyped = <U <statTemp>>$176: T.class_of(E).<U e=>(<U <statTemp>>$177: T.untyped)\l<U <statTemp>>$181: T.class_of(Main) = self\l<U <statTemp>>$182: T.untyped = <U @a>$111: T.untyped.<U inspect>()\l<U <statTemp>>$180: NilClass = <U <statTemp>>$181: T.class_of(Main).<U puts>(<U <statTemp>>$182: T.untyped)\l<U <statTemp>>$185: T.class_of(Main) = self\l<U <statTemp>>$186: T.untyped = <U @@b>$115: T.untyped.<U inspect>()\l<U <statTemp>>$184: NilClass = <U <statTemp>>$185: T.class_of(Main).<U puts>(<U <statTemp>>$186: T.untyped)\l<U <statTemp>>$189: T.class_of(Main) = self\l<U <statTemp>>$190: T.untyped = <U $c>$119: T.untyped.<U inspect>()\l<U <statTemp>>$188: NilClass = <U <statTemp>>$189: T.class_of(Main).<U puts>(<U <statTemp>>$190: T.untyped)\l<U <statTemp>>$193: T.class_of(Main) = self\l<U <statTemp>>$194: T.untyped = <U d>$6: T.untyped.<U inspect>()\l<U <statTemp>>$192: NilClass = <U <statTemp>>$193: T.class_of(Main).<U puts>(<U <statTemp>>$194: T.untyped)\l<U <statTemp>>$196: T.class_of(Main) = self\l<U <statTemp>>$199: T.class_of(E) = alias <C <U E>>\l<U <statTemp>>$198: T.untyped = <U <statTemp>>$199: T.class_of(E).<U e>()\l<U <statTemp>>$197: T.untyped = <U <statTemp>>$198: T.untyped.<U inspect>()\l<U <blockReturnTemp>>$155: NilClass = <U <statTemp>>$196: T.class_of(Main).<U puts>(<U <statTemp>>$197: T.untyped)\l<U <blockReturnTemp>>$200: T.noreturn = blockreturn<::<Class:Main>#main#<block>> <U <blockReturnTemp>>$155: NilClass\l<unconditional>\l"
    ];

    "bb::<Class:Main>#main_25" -> "bb::<Class:Main>#main_22" [style="bold"];
}

}

