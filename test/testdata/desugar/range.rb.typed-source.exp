# typed: true
def foo
    a = 1..2
    b = Range.new(1, 2)
    c = 1...2
    d = Range.new(1, 2, true)
    e = (1..42).first
    f = ('a'..'z').last
    # dead=1
    # <U <statTemp>>$4: T.class_of(Range)
    #
    # <U <statTemp>>$5: Integer(1)
    #
    # <U <statTemp>>$6: Integer(2)
    #
    # <U <statTemp>>$8: T.class_of(Range)
    #
    # <U <statTemp>>$9: Integer(1)
    #
    # <U <statTemp>>$10: Integer(2)
    #
    # <U <statTemp>>$12: T.class_of(Range)
    #
    # <U <statTemp>>$13: Integer(1)
    #
    # <U <statTemp>>$14: Integer(2)
    #
    # <U <statTemp>>$15: TrueClass
    #
    # <U <statTemp>>$17: T.class_of(Range)
    #
    # <U <statTemp>>$18: Integer(1)
    #
    # <U <statTemp>>$19: Integer(2)
    #
    # <U <statTemp>>$20: TrueClass
    #
    # <U <statTemp>>$22: AppliedType {
    #   klass = <C <U Range>>
    #   targs = [
    #     <C <U Elem>> = Integer
    #   ]
    # }
    #
    # <U <statTemp>>$23: T.class_of(Range)
    #
    # <U <statTemp>>$24: Integer(1)
    #
    # <U <statTemp>>$25: Integer(42)
    #
    # <U <statTemp>>$26: AppliedType {
    #   klass = <C <U Range>>
    #   targs = [
    #     <C <U Elem>> = String
    #   ]
    # }
    #
    # <U <statTemp>>$27: T.class_of(Range)
    #
    # <U <statTemp>>$28: String("a")
    #
    # <U <statTemp>>$29: String("z")
    #
    # <U <returnMethodTemp>>$2: String
    #
    # <U <finalReturn>>: T.noreturn
    #
    # <U a>: AppliedType {
    #   klass = <C <U Range>>
    #   targs = [
    #     <C <U Elem>> = Integer
    #   ]
    # }
    #
    # <U b>: AppliedType {
    #   klass = <C <U Range>>
    #   targs = [
    #     <C <U Elem>> = Integer
    #   ]
    # }
    #
    # <U c>: AppliedType {
    #   klass = <C <U Range>>
    #   targs = [
    #     <C <U Elem>> = Integer
    #   ]
    # }
    #
    # <U d>: AppliedType {
    #   klass = <C <U Range>>
    #   targs = [
    #     <C <U Elem>> = Integer
    #   ]
    # }
    #
    # <U e>: Integer
    #
    # <U f>: String
end
