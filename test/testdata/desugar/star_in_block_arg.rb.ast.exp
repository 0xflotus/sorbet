class <emptyTree><<C <U <root>>>> < ()
  <U <self>>.<U extend>(<emptyTree>::<C <U T>>::<C <U Sig>>)

  <U <self>>.<U sig>() do ||
    <U <self>>.<U params>({:"blk" => <emptyTree>::<C <U T>>.<U proc>().<U params>({:"args" => <emptyTree>::<C <U Integer>>}).<U void>()}).<U void>()
  end

  def <U foo><<C <U <todo sym>>>>(&<U blk>)
    <emptyTree>
  end

  <U <self>>.<U foo>() do |<D <U <destructure>> $2>|
    begin
      begin
        <D <U <assignTemp>> $3> = ::<Magic>.<U <expand-splat>>(<D <U <destructure>> $2>, 1, 0)
        <U args> = <D <U <assignTemp>> $3>.<U []>(0)
        <D <U <assignTemp>> $3>
      end
      <emptyTree>::<C <U T>>.<U reveal_type>(<U args>)
    end
  end
end
