class <emptyTree><<C <U <root>>>> < ()
  def <U bar><<C <U <todo sym>>>>(<U a>, &<U <blk>>)
    <U a>
  end

  class <emptyTree>::<C <U Splatable>><<C <U <todo sym>>>> < (::<todo sym>)
    def <U to_a><<C <U <todo sym>>>>(&<U <blk>>)
      [1]
    end
  end

  class <emptyTree>::<C <U Rescueable>><<C <U <todo sym>>>> < (::<todo sym>)
    def <U to_a><<C <U <todo sym>>>>(&<U <blk>>)
      [<emptyTree>::<C <U String>>, <emptyTree>::<C <U RuntimeError>>]
    end
  end

  class <emptyTree>::<C <U Parent>><<C <U <todo sym>>>> < (::<todo sym>)
    def <U foo><<C <U <todo sym>>>>(<U a>, <U b>, &<U <blk>>)
      [<U b>, <U a>]
    end
  end

  class <emptyTree>::<C <U Child>><<C <U <todo sym>>>> < (<emptyTree>::<C <U Parent>>)
    def <U foo><<C <U <todo sym>>>>(&<U <blk>>)
      begin
        <U a> = [1, 2]
        ::<Magic>.<U <call-with-splat>>(<U <self>>, :"super", <U a>.<U to_a>())
      end
    end
  end

  def <U foo><<C <U <todo sym>>>>(&<U <blk>>)
    begin
      <U a> = [1]
      <U a>.<U to_a>().<U concat>([2])
      [1].<U concat>(<U a>.<U to_a>())
      [1].<U concat>(<U a>.<U to_a>()).<U concat>([2])
      ::<Magic>.<U <call-with-splat>>(<U <self>>, :"bar", <U a>.<U to_a>())
      ::<Magic>.<U <call-with-splat>>(<U <self>>, :"bar", <emptyTree>::<C <U Splatable>>.<U new>().<U to_a>())
      <emptyTree>::<C <U Child>>.<U new>().<U foo>()
      <U b> = <emptyTree>::<C <U Splatable>>.<U new>().<U to_a>()
      begin
        <D <U <assignTemp>> $2> = 1
        if ::<Magic>.<U <splat>>(<emptyTree>::<C <U Integer>>.<U to_a>()).<U ===>(<D <U <assignTemp>> $2>)
          <emptyTree>
        else
          <emptyTree>
        end
      end
      <U <self>>.<U raise>("a")
    rescue <emptyTree>::<C <U Rescueable>>.<U new>().<U to_a>() => <D <U <rescueTemp>> $3>
      <emptyTree>
      <U <self>>.<U raise>("a")
    rescue [<emptyTree>::<C <U Array>>].<U concat>(<emptyTree>::<C <U Rescueable>>.<U new>().<U to_a>()).<U concat>([<emptyTree>::<C <U Float>>]) => <D <U <rescueTemp>> $4>
      <emptyTree>
    end
  end

  <U <self>>.<U foo>()
end
