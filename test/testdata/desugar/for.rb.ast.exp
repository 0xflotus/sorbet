class <emptyTree><<C <U <root>>>> < ()
  class <emptyTree>::<C <U A>><<C <U <todo sym>>>> < (::<todo sym>)
    def self.<U each><<C <U <todo sym>>>>(&<U <blk>>)
      begin
        <U <blk>>.<U call>(1, 2, 3, 4, 5)
        <U <blk>>.<U call>(6, 7, 8, 9, 0)
      end
    end
  end

  class <emptyTree>::<C <U E>><<C <U <todo sym>>>> < (::<todo sym>)
    def self.<U e=><<C <U <todo sym>>>>(<U e>, &<U <blk>>)
      <U @e> = <U e>
    end

    def self.<U e><<C <U <todo sym>>>>(&<U <blk>>)
      <U @e>
    end
  end

  class <emptyTree>::<C <U Main>><<C <U <todo sym>>>> < (::<todo sym>)
    def self.<U main><<C <U <todo sym>>>>(&<U <blk>>)
      begin
        <emptyTree>::<C <U A>>.<U each>() do |*<D <U forTemp> $2>|
          begin
            begin
              <D <U <assignTemp>> $3> = ::<Magic>.<U <expand-splat>>(<D <U forTemp> $2>, 1, 0)
              <U a> = <D <U <assignTemp>> $3>.<U []>(0)
              <D <U <assignTemp>> $3>
            end
            <U <self>>.<U puts>(<U a>.<U inspect>())
          end
        end
        <emptyTree>::<C <U A>>.<U each>() do |*<U forTemp>|
          begin
            begin
              <D <U <assignTemp>> $4> = ::<Magic>.<U <expand-splat>>(<U forTemp>.<U to_a>(), 1, 0)
              <U a> = <D <U <assignTemp>> $4>.<U []>(0)
              <D <U <assignTemp>> $4>
            end
            <U <self>>.<U puts>(<U a>.<U inspect>())
          end
        end
        <emptyTree>::<C <U A>>.<U each>() do |*<D <U forTemp> $5>|
          begin
            begin
              <D <U <assignTemp>> $6> = ::<Magic>.<U <expand-splat>>(<D <U forTemp> $5>, 2, 0)
              <U a> = <D <U <assignTemp>> $6>.<U []>(0)
              <U b> = <D <U <assignTemp>> $6>.<U []>(1)
              <D <U <assignTemp>> $6>
            end
            begin
              <U <self>>.<U puts>(<U a>.<U inspect>())
              <U <self>>.<U puts>(<U b>.<U inspect>())
            end
          end
        end
        <emptyTree>::<C <U A>>.<U each>() do |*<U forTemp>|
          begin
            begin
              <D <U <assignTemp>> $7> = ::<Magic>.<U <expand-splat>>(<U forTemp>.<U to_a>(), 2, 0)
              <U a> = <D <U <assignTemp>> $7>.<U []>(0)
              <U b> = <D <U <assignTemp>> $7>.<U []>(1)
              <D <U <assignTemp>> $7>
            end
            <U <self>>.<U puts>(<U a>.<U inspect>())
            <U <self>>.<U puts>(<U b>.<U inspect>())
          end
        end
        <U <self>>.<U puts>("main")
        <emptyTree>::<C <U A>>.<U each>() do |*<D <U forTemp> $8>|
          begin
            begin
              <D <U <assignTemp>> $9> = ::<Magic>.<U <expand-splat>>(<D <U forTemp> $8>, 5, 0)
              <U @a> = <D <U <assignTemp>> $9>.<U []>(0)
              <U @@b> = <D <U <assignTemp>> $9>.<U []>(1)
              <U $c> = <D <U <assignTemp>> $9>.<U []>(2)
              <U d> = <D <U <assignTemp>> $9>.<U []>(3)
              <emptyTree>::<C <U E>>.<U e=>(<D <U <assignTemp>> $9>.<U []>(4))
              <D <U <assignTemp>> $9>
            end
            begin
              <U <self>>.<U puts>(<U @a>.<U inspect>())
              <U <self>>.<U puts>(<U @@b>.<U inspect>())
              <U <self>>.<U puts>(<U $c>.<U inspect>())
              <U <self>>.<U puts>(<U d>.<U inspect>())
              <U <self>>.<U puts>(<emptyTree>::<C <U E>>.<U e>().<U inspect>())
            end
          end
        end
        <emptyTree>::<C <U A>>.<U each>() do |*<U forTemp>|
          begin
            begin
              <D <U <assignTemp>> $10> = ::<Magic>.<U <expand-splat>>(<U forTemp>.<U to_a>(), 5, 0)
              <U @a> = <D <U <assignTemp>> $10>.<U []>(0)
              <U @@b> = <D <U <assignTemp>> $10>.<U []>(1)
              <U $c> = <D <U <assignTemp>> $10>.<U []>(2)
              <U d> = <D <U <assignTemp>> $10>.<U []>(3)
              <emptyTree>::<C <U E>>.<U e=>(<D <U <assignTemp>> $10>.<U []>(4))
              <D <U <assignTemp>> $10>
            end
            <U <self>>.<U puts>(<U @a>.<U inspect>())
            <U <self>>.<U puts>(<U @@b>.<U inspect>())
            <U <self>>.<U puts>(<U $c>.<U inspect>())
            <U <self>>.<U puts>(<U d>.<U inspect>())
            <U <self>>.<U puts>(<emptyTree>::<C <U E>>.<U e>().<U inspect>())
          end
        end
      end
    end
  end

  <emptyTree>::<C <U Main>>.<U main>()
end
