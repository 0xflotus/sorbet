class <emptyTree><<constant:<root>>> < ()
  class <emptyTree>::<constant:A><<constant:<todo sym>>> < (::<todo sym>)
    def self.each<<constant:<todo sym>>>()
      begin
        yield([1, 2, 3, 4, 5])
        yield([6, 7, 8, 9, 0])
      end
    end
  end

  class <emptyTree>::<constant:E><<constant:<todo sym>>> < (::<todo sym>)
    def self.e=<<constant:<todo sym>>>(e)
      @e = e
    end

    def self.e<<constant:<todo sym>>>()
      @e
    end
  end

  class <emptyTree>::<constant:Main><<constant:<todo sym>>> < (::<todo sym>)
    def self.main<<constant:<todo sym>>>()
      begin
        <emptyTree>::<constant:A>.each() do |*forTemp$2|
          begin
            begin
              <assignTemp>$3 = ::<Magic>.<expand-splat>(forTemp$2, 1, 0)
              a = <assignTemp>$3.[](0)
              <assignTemp>$3
            end
            self(<constant:<todo sym>>).puts(a.inspect())
          end
        end
        <emptyTree>::<constant:A>.each() do |*forTemp|
          begin
            begin
              <assignTemp>$4 = ::<Magic>.<expand-splat>(forTemp.to_a(), 1, 0)
              a = <assignTemp>$4.[](0)
              <assignTemp>$4
            end
            self(<constant:<todo sym>>).puts(a.inspect())
          end
        end
        <emptyTree>::<constant:A>.each() do |*forTemp$5|
          begin
            begin
              <assignTemp>$6 = ::<Magic>.<expand-splat>(forTemp$5, 2, 0)
              a = <assignTemp>$6.[](0)
              b = <assignTemp>$6.[](1)
              <assignTemp>$6
            end
            begin
              self(<constant:<todo sym>>).puts(a.inspect())
              self(<constant:<todo sym>>).puts(b.inspect())
            end
          end
        end
        <emptyTree>::<constant:A>.each() do |*forTemp|
          begin
            begin
              <assignTemp>$7 = ::<Magic>.<expand-splat>(forTemp.to_a(), 2, 0)
              a = <assignTemp>$7.[](0)
              b = <assignTemp>$7.[](1)
              <assignTemp>$7
            end
            self(<constant:<todo sym>>).puts(a.inspect())
            self(<constant:<todo sym>>).puts(b.inspect())
          end
        end
        self(<constant:<todo sym>>).puts("main")
        <emptyTree>::<constant:A>.each() do |*forTemp$8|
          begin
            begin
              <assignTemp>$9 = ::<Magic>.<expand-splat>(forTemp$8, 5, 0)
              @a = <assignTemp>$9.[](0)
              @@b = <assignTemp>$9.[](1)
              $c = <assignTemp>$9.[](2)
              d = <assignTemp>$9.[](3)
              <emptyTree>::<constant:E>.e=(<assignTemp>$9.[](4))
              <assignTemp>$9
            end
            begin
              self(<constant:<todo sym>>).puts(@a.inspect())
              self(<constant:<todo sym>>).puts(@@b.inspect())
              self(<constant:<todo sym>>).puts($c.inspect())
              self(<constant:<todo sym>>).puts(d.inspect())
              self(<constant:<todo sym>>).puts(<emptyTree>::<constant:E>.e().inspect())
            end
          end
        end
        <emptyTree>::<constant:A>.each() do |*forTemp|
          begin
            begin
              <assignTemp>$10 = ::<Magic>.<expand-splat>(forTemp.to_a(), 5, 0)
              @a = <assignTemp>$10.[](0)
              @@b = <assignTemp>$10.[](1)
              $c = <assignTemp>$10.[](2)
              d = <assignTemp>$10.[](3)
              <emptyTree>::<constant:E>.e=(<assignTemp>$10.[](4))
              <assignTemp>$10
            end
            self(<constant:<todo sym>>).puts(@a.inspect())
            self(<constant:<todo sym>>).puts(@@b.inspect())
            self(<constant:<todo sym>>).puts($c.inspect())
            self(<constant:<todo sym>>).puts(d.inspect())
            self(<constant:<todo sym>>).puts(<emptyTree>::<constant:E>.e().inspect())
          end
        end
      end
    end
  end

  <emptyTree>::<constant:Main>.main()
end
