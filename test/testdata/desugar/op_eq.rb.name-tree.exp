class <emptyTree>::<constant:OpEq><<constant:OpEq>> < (::<constant:<todo sym>>)
  def b<b>()
    <emptyTree>

  def b=<b=>(_)
    <emptyTree>

  def y<y>()
    <emptyTree>

  def z<z>()
    <emptyTree>

  def example<example>(a)
    begin
      if a
        a = :a
      else
        a
      end
      begin
        b$0 = self(<constant:OpEq>)
        b$1 = b$0.b()
        if b$1
          b$0.b=(:b)
        else
          b$1
        end
      end
      begin
        []$2 = a
        []$3 = self(<constant:OpEq>).y()
        []$4 = self(<constant:OpEq>).z()
        []$5 = []$2.[]([]$3, []$4)
        if []$5
          []$2.[]=([]$3, []$4, 1)
        else
          []$5
        end
      end
      if a
        a
      else
        a = :a
      end
      begin
        b$6 = self(<constant:OpEq>)
        b$7 = b$6.b()
        if b$7
          b$7
        else
          b$6.b=(:b)
        end
      end
      begin
        []$8 = a
        []$9 = self(<constant:OpEq>).y()
        []$10 = self(<constant:OpEq>).z()
        []$11 = []$8.[]([]$9, []$10)
        if []$11
          []$11
        else
          []$8.[]=([]$9, []$10, 1)
        end
      end
    end

end
