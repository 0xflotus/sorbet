class <emptyTree>::<constant:OpEq><<constant:OpEq>> < (::<constant:<todo sym>>)
  def b<b>()
    <emptyTree>
  end

  def b=<b=>(_)
    <emptyTree>
  end

  def y<y>()
    <emptyTree>
  end

  def z<z>()
    <emptyTree>
  end

  def example<example>(a)
    begin
      if a
        a = :a
      else
        a
      end
      begin
        b$10000 = self(<constant:OpEq>)
        b$10001 = b$10000.b()
        if b$10001
          b$10000.b=(:b)
        else
          b$10001
        end
      end
      begin
        []$10002 = a
        []$10003 = self(<constant:OpEq>).y()
        []$10004 = self(<constant:OpEq>).z()
        []$10005 = []$10002.[]([]$10003, []$10004)
        if []$10005
          []$10002.[]=([]$10003, []$10004, 1)
        else
          []$10005
        end
      end
      if a
        a
      else
        a = :a
      end
      begin
        b$10006 = self(<constant:OpEq>)
        b$10007 = b$10006.b()
        if b$10007
          b$10007
        else
          b$10006.b=(:b)
        end
      end
      begin
        []$10008 = a
        []$10009 = self(<constant:OpEq>).y()
        []$10010 = self(<constant:OpEq>).z()
        []$10011 = []$10008.[]([]$10009, []$10010)
        if []$10011
          []$10011
        else
          []$10008.[]=([]$10009, []$10010, 1)
        end
      end
    end
  end
end
