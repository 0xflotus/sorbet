class <emptyTree>::<constant:OpEq><<constant:OpEq>> < (::<constant:<todo sym>>)
  <emptyTree>

  <emptyTree>

  <emptyTree>

  <emptyTree>

  <emptyTree>

  def b<b>()
    <emptyTree>
  end

  def b=<b=>(_)
    <emptyTree>
  end

  def y<y>()
    <emptyTree>
  end

  def z<z>()
    <emptyTree>
  end

  def example<example>(a)
    begin
      if a
        a = :a
      else
        a
      end
      begin
        b$2 = self(<constant:OpEq>)
        b$3 = b$2.b()
        if b$3
          b$2.b=(:b)
        else
          b$3
        end
      end
      begin
        []$4 = a
        []$5 = self(<constant:OpEq>).y()
        []$6 = self(<constant:OpEq>).z()
        []$7 = []$4.[]([]$5, []$6)
        if []$7
          []$4.[]=([]$5, []$6, 1)
        else
          []$7
        end
      end
      if a
        a
      else
        a = :a
      end
      begin
        b$8 = self(<constant:OpEq>)
        b$9 = b$8.b()
        if b$9
          b$9
        else
          b$8.b=(:b)
        end
      end
      begin
        []$10 = a
        []$11 = self(<constant:OpEq>).y()
        []$12 = self(<constant:OpEq>).z()
        []$13 = []$10.[]([]$11, []$12)
        if []$13
          []$13
        else
          []$10.[]=([]$11, []$12, 1)
        end
      end
    end
  end
end
