class <C <U <root>>> < <C <U Object>> () @ (Loc {file=test/testdata/resolver/self.rb start=3:1 end=44:4}, Loc {file=https://git.corp.stripe.com/stripe-internal/sorbet/tree/master/bazel-out/host/genfiles/rbi/procs.rbi start=1:1 end=252:4}, Loc {file=https://git.corp.stripe.com/stripe-internal/sorbet/tree/master/rbi/test_bootstrap.rbi start=1:1 end=3365:4})
  method <N <U <static-init>> $3> (<blk>) @ Loc {file=test/testdata/resolver/self.rb start=3:1 end=44:4}
    argument <N <U <static-init>> $3><blk><block> @ Loc {file=test/testdata/resolver/self.rb start=??? end=???}
  class <C <U TestSelf>> < <C <U Object>> () @ Loc {file=test/testdata/resolver/self.rb start=3:1 end=3:15}
    method <C <U TestSelf>><U good1> (s, <blk>) -> TestSelf @ Loc {file=test/testdata/resolver/self.rb start=10:3 end=10:15}
      argument <C <U TestSelf>><U good1>s<> -> TestSelf @ Loc {file=test/testdata/resolver/self.rb start=7:12 end=7:13}
      argument <C <U TestSelf>><U good1><blk><block> -> T.untyped @ Loc {file=test/testdata/resolver/self.rb start=??? end=???}
    method <C <U TestSelf>><U pass> (<blk>) -> TestSelf @ Loc {file=test/testdata/resolver/self.rb start=18:3 end=18:13}
      argument <C <U TestSelf>><U pass><blk><block> -> T.untyped @ Loc {file=test/testdata/resolver/self.rb start=??? end=???}
  class <S <C <U TestSelf>> $1> < <S <C <U Object>> $1> (<C <U Sig>>) @ Loc {file=test/testdata/resolver/self.rb start=3:7 end=3:15}
    method <S <C <U TestSelf>> $1><N <U <block>> $2> () @ Loc {file=test/testdata/resolver/self.rb start=6:3 end=9:6}
    method <S <C <U TestSelf>> $1><N <U <block>> $3> () @ Loc {file=test/testdata/resolver/self.rb start=14:3 end=17:6}
    method <S <C <U TestSelf>> $1><U <static-init>> (<blk>) @ Loc {file=test/testdata/resolver/self.rb start=3:1 end=3:15}
      argument <S <C <U TestSelf>> $1><U <static-init>><blk><block> @ Loc {file=test/testdata/resolver/self.rb start=??? end=???}
  class <C <U TestSelfGeneric>>[<C <U Elem>>] < <C <U Object>> () @ Loc {file=test/testdata/resolver/self.rb start=24:1 end=24:22}
    type-member(=) <C <U TestSelfGeneric>><C <U Elem>> @ Loc {file=test/testdata/resolver/self.rb start=28:3 end=28:21}
    method <C <U TestSelfGeneric>><U good1> (s, <blk>) -> AppliedType {
      klass = <C <U TestSelfGeneric>>
      targs = [
        <C <U Elem>> = SelfTypeParam(<C <U TestSelfGeneric>><C <U Elem>>)
      ]
    } @ Loc {file=test/testdata/resolver/self.rb start=33:3 end=33:15}
      argument <C <U TestSelfGeneric>><U good1>s<> -> AppliedType {
        klass = <C <U TestSelfGeneric>>
        targs = [
          <C <U Elem>> = SelfTypeParam(<C <U TestSelfGeneric>><C <U Elem>>)
        ]
      } @ Loc {file=test/testdata/resolver/self.rb start=30:12 end=30:13}
      argument <C <U TestSelfGeneric>><U good1><blk><block> -> T.untyped @ Loc {file=test/testdata/resolver/self.rb start=??? end=???}
    method <C <U TestSelfGeneric>><U pass> (<blk>) -> AppliedType {
      klass = <C <U TestSelfGeneric>>
      targs = [
        <C <U Elem>> = SelfTypeParam(<C <U TestSelfGeneric>><C <U Elem>>)
      ]
    } @ Loc {file=test/testdata/resolver/self.rb start=41:3 end=41:13}
      argument <C <U TestSelfGeneric>><U pass><blk><block> -> T.untyped @ Loc {file=test/testdata/resolver/self.rb start=??? end=???}
  class <S <C <U TestSelfGeneric>> $1> < <S <C <U Object>> $1> (<C <U Sig>>, <C <U Generic>>, <C <U Helpers>>) @ Loc {file=test/testdata/resolver/self.rb start=24:7 end=24:22}
    method <S <C <U TestSelfGeneric>> $1><N <U <block>> $2> () @ Loc {file=test/testdata/resolver/self.rb start=29:3 end=32:6}
    method <S <C <U TestSelfGeneric>> $1><N <U <block>> $3> () @ Loc {file=test/testdata/resolver/self.rb start=37:3 end=40:6}
    method <S <C <U TestSelfGeneric>> $1><U <static-init>> (<blk>) @ Loc {file=test/testdata/resolver/self.rb start=24:1 end=24:22}
      argument <S <C <U TestSelfGeneric>> $1><U <static-init>><blk><block> @ Loc {file=test/testdata/resolver/self.rb start=??? end=???}

