begin
  class <emptyTree><<constant:<root>>> < ()
    def self.<static-init><<static-init>$65>()
      begin
        <emptyTree>
        <emptyTree>
        <emptyTree>
        <emptyTree>
        <emptyTree>
      end
    end
  end
  class <emptyTree>::<constant:Parent><<constant:Parent>> < (::<todo sym>)
    <emptyTree>

    <emptyTree>

    <emptyTree>

    def initialize<initialize>()
      begin
        ::Parent#@ivar = T.let(1, Integer)
        ::Parent#@ivar2 = T.let(2, Integer)
      end
    end

    def hi<hi>()
      begin
        ::Parent#@ivar = 1
        ::Parent#@ivar2
      end
    end

    def self.<static-init><<static-init>>()
      ::Parent#@@class_var = T.let("hi", String)
    end
  end
  module <emptyTree>::<constant:Mixin><<constant:Mixin>> < ()
    def self.<static-init><<static-init>>()
      begin
        ::Mixin#@@mixin_cvar = T.let(3, Integer)
        ::Mixin#@@mixin_cvar
        <emptyTree>
      end
    end
  end
  class <emptyTree>::<constant:Child><<constant:Child>> < (::Parent, ::Mixin)
    <emptyTree>

    <emptyTree>

    def child_method<child_method>()
      begin
        ::Parent#@@class_var
        ::Mixin#@@mixin_cvar
        ::Parent#@ivar2
        ::Child#@undefinedivar
      end
    end

    def self.<static-init><<static-init>>()
      begin
        ::Parent#@@class_var
        ::Mixin#@@mixin_cvar
        ::Child#@@undefined_cvar
        <emptyTree>
      end
    end
  end
  class <emptyTree>::<constant:Child1><<constant:Child1>> < (::Parent)
    def self.<static-init><<static-init>>()
      ::Parent#@@class_var
    end
  end
  <emptyTree>
end
