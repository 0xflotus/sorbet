class <constant:<root>> < ::Object () -> <Class:<root>> @ -e:1
  class <constant:TestProc> < ::Object () -> <Class:TestProc> @ test/testdata/resolver/proc.rb:3
    method bad (x, y, z, w) -> NilClass @ test/testdata/resolver/proc.rb:22
      argument w<> -> AppliedType {
        klass = ::Proc1
        targs = [
          <constant:Return> = untyped
          <constant:Arg0> = untyped
        ]
      } @ test/testdata/resolver/proc.rb:20
      argument x<> -> AppliedType {
        klass = ::Proc0
        targs = [
          <constant:Return> = untyped
        ]
      } @ test/testdata/resolver/proc.rb:17
      argument y<> -> AppliedType {
        klass = ::Proc0
        targs = [
          <constant:Return> = Integer
        ]
      } @ test/testdata/resolver/proc.rb:18
      argument z<> -> AppliedType {
        klass = ::Proc1
        targs = [
          <constant:Return> = untyped
          <constant:Arg0> = Integer
        ]
      } @ test/testdata/resolver/proc.rb:19
    method foo () -> Integer @ test/testdata/resolver/proc.rb:26
    method foo1 (x) -> Integer @ test/testdata/resolver/proc.rb:31
      argument x<> -> AppliedType {
        klass = ::Proc1
        targs = [
          <constant:Return> = Integer
          <constant:Arg0> = Integer
        ]
      } @ test/testdata/resolver/proc.rb:29
    method good1 (blk) -> Integer @ test/testdata/resolver/proc.rb:6
      argument blk<block> -> AppliedType {
        klass = ::Proc1
        targs = [
          <constant:Return> = Integer
          <constant:Arg0> = Integer
        ]
      } @ test/testdata/resolver/proc.rb:4
    method good2 (blk) -> Integer @ test/testdata/resolver/proc.rb:12
      argument blk<block> -> AppliedType {
        klass = ::Proc1
        targs = [
          <constant:Return> = AppliedType {
              klass = ::Array
              targs = [
                <constant:Elem> = Integer
              ]
            }
          <constant:Arg0> = AppliedType {
              klass = ::Array
              targs = [
                <constant:Elem> = String
              ]
            }
        ]
      } @ test/testdata/resolver/proc.rb:10
  class <singleton class:<constant:TestProc>> < ::<Class:Object> () @ test/testdata/resolver/proc.rb:3

