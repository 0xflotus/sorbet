class ::<root> < ::Object () @ https://git.corp.stripe.com/stripe-internal/sorbet/tree/master/rbi/t.rbi#L2
  class ::<Class:TestProc> < ::<Class:Object> () @ test/testdata/resolver/proc.rb:3
  class ::TestProc < ::Object () @ test/testdata/resolver/proc.rb:3
    method ::TestProc#bad (x, y, z, w) -> NilClass @ test/testdata/resolver/proc.rb:22
      argument ::TestProc#bad#w<> -> AppliedType {
        klass = ::Proc1
        targs = [
          <constant:Return> = T.untyped
          <constant:Arg0> = T.untyped
        ]
      } @ test/testdata/resolver/proc.rb:20
      argument ::TestProc#bad#x<> -> AppliedType {
        klass = ::Proc0
        targs = [
          <constant:Return> = T.untyped
        ]
      } @ test/testdata/resolver/proc.rb:17
      argument ::TestProc#bad#y<> -> AppliedType {
        klass = ::Proc0
        targs = [
          <constant:Return> = Integer
        ]
      } @ test/testdata/resolver/proc.rb:18
      argument ::TestProc#bad#z<> -> AppliedType {
        klass = ::Proc1
        targs = [
          <constant:Return> = T.untyped
          <constant:Arg0> = Integer
        ]
      } @ test/testdata/resolver/proc.rb:19
    method ::TestProc#foo () -> Integer @ test/testdata/resolver/proc.rb:26
    method ::TestProc#foo1 (x) -> Integer @ test/testdata/resolver/proc.rb:31
      argument ::TestProc#foo1#x<> -> AppliedType {
        klass = ::Proc1
        targs = [
          <constant:Return> = Integer
          <constant:Arg0> = Integer
        ]
      } @ test/testdata/resolver/proc.rb:29
    method ::TestProc#good1 (blk) -> Integer @ test/testdata/resolver/proc.rb:6
      argument ::TestProc#good1#blk<block> -> AppliedType {
        klass = ::Proc1
        targs = [
          <constant:Return> = Integer
          <constant:Arg0> = Integer
        ]
      } @ test/testdata/resolver/proc.rb:4
    method ::TestProc#good2 (blk) -> Integer @ test/testdata/resolver/proc.rb:12
      argument ::TestProc#good2#blk<block> -> AppliedType {
        klass = ::Proc1
        targs = [
          <constant:Return> = AppliedType {
              klass = ::Array
              targs = [
                <constant:Elem> = Integer
              ]
            }
          <constant:Arg0> = AppliedType {
              klass = ::Array
              targs = [
                <constant:Elem> = String
              ]
            }
        ]
      } @ test/testdata/resolver/proc.rb:10

