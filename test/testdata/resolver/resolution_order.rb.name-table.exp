class ::<root> < ::Object () @ test/testdata/resolver/resolution_order.rb:8
  class ::<Class:A> < ::Module () @ test/testdata/resolver/resolution_order.rb:32
  class ::<Class:B> < ::<Class:Object> () @ test/testdata/resolver/resolution_order.rb:38
  class ::<Class:C> < ::<Class:B> () @ test/testdata/resolver/resolution_order.rb:42
  class ::<Class:D> < ::Module () @ test/testdata/resolver/resolution_order.rb:60
  class ::<Class:E> < ::Module () @ test/testdata/resolver/resolution_order.rb:54
  class ::<Class:F> < ::Module () @ test/testdata/resolver/resolution_order.rb:45
  class ::<Class:HasError> < ::<Class:Object> () @ test/testdata/resolver/resolution_order.rb:10
  class ::<Class:IsGood> < ::<Class:Object> () @ test/testdata/resolver/resolution_order.rb:14
  class ::<Class:TestInheritace1> < ::<Class:B> () @ test/testdata/resolver/resolution_order.rb:26
  class ::<Class:TestInheritace2> < ::<Class:A> () @ test/testdata/resolver/resolution_order.rb:29
  class ::A (<constant:BasicObject>) @ test/testdata/resolver/resolution_order.rb:32
    class ::A::<Class:DOES_NOT_EXIST> < ::RubyTyper::<Class:StubClass> () @ test/testdata/resolver/resolution_order.rb:11
    class ::A::DOES_NOT_EXIST < ::RubyTyper::StubClass () -> T.untyped @ test/testdata/resolver/resolution_order.rb:11
    static-field ::A#AB -> AliasType { symbol = ::B } @ test/testdata/resolver/resolution_order.rb:33
    static-field ::A#AV -> Integer @ test/testdata/resolver/resolution_order.rb:35
  class ::B < ::Object () @ test/testdata/resolver/resolution_order.rb:38
    static-field ::B#BC -> AliasType { symbol = ::C } @ test/testdata/resolver/resolution_order.rb:39
  class ::C < ::B () @ test/testdata/resolver/resolution_order.rb:42
  class ::D (<constant:BasicObject>) @ test/testdata/resolver/resolution_order.rb:60
    static-field ::D#DA -> AliasType { symbol = ::A } @ test/testdata/resolver/resolution_order.rb:61
  class ::E (<constant:BasicObject>, <constant:D>) @ test/testdata/resolver/resolution_order.rb:54
    static-field ::E#EA -> AliasType { symbol = ::A } @ test/testdata/resolver/resolution_order.rb:56
    static-field ::E#EC -> AliasType { symbol = ::C } @ test/testdata/resolver/resolution_order.rb:57
  class ::F (<constant:BasicObject>, <constant:E>) @ test/testdata/resolver/resolution_order.rb:45
    method ::F#<static-init> () @ test/testdata/resolver/resolution_order.rb:51
  class ::HasError < ::Object (<constant:DOES_NOT_EXIST>) @ test/testdata/resolver/resolution_order.rb:10
  class ::IsGood < ::Object () @ test/testdata/resolver/resolution_order.rb:14
    method ::IsGood#foo1 (a) -> Integer @ test/testdata/resolver/resolution_order.rb:16
      argument ::IsGood#foo1#a<> -> C @ test/testdata/resolver/resolution_order.rb:15
    method ::IsGood#foo2 (a) -> Integer @ test/testdata/resolver/resolution_order.rb:21
      argument ::IsGood#foo2#a<> -> A @ test/testdata/resolver/resolution_order.rb:20
  class ::TestInheritace1 < ::B () @ test/testdata/resolver/resolution_order.rb:26
  class ::TestInheritace2 < ::A () @ test/testdata/resolver/resolution_order.rb:29
  method #<static-init> () @ test/testdata/resolver/resolution_order.rb:8

