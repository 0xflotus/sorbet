ClassDef{
  name = EmptyTree<<constant:<root>>>
  ancestors = []
  rhs = [
    MethodDef{
      flags = 0
      name = main<<constant:<todo sym>>>
      args = []
      rhs = Rescue{
        body = Send{
          recv = Self{ claz = ::<todo sym> }
          fun = a
          block = nullptr
          args = [
          ]
        }
        rescueCases = [
          RescueCase{
            exceptions = [
            ]
            var = UnresolvedIdent{
              kind = Local
              name = <rescueTemp>$2
            }
            body = Send{
              recv = Self{ claz = ::<todo sym> }
              fun = b
              block = nullptr
              args = [
              ]
            }
          }
        ]
        else = Send{
          recv = Self{ claz = ::<todo sym> }
          fun = c
          block = nullptr
          args = [
          ]
        }
        ensure = Send{
          recv = Self{ claz = ::<todo sym> }
          fun = d
          block = nullptr
          args = [
          ]
        }
      }
    }

    MethodDef{
      flags = 0
      name = a<<constant:<todo sym>>>
      args = []
      rhs = EmptyTree
    }

    MethodDef{
      flags = 0
      name = b<<constant:<todo sym>>>
      args = []
      rhs = EmptyTree
    }

    MethodDef{
      flags = 0
      name = c<<constant:<todo sym>>>
      args = []
      rhs = EmptyTree
    }

    MethodDef{
      flags = 0
      name = d<<constant:<todo sym>>>
      args = []
      rhs = EmptyTree
    }

    Send{
      recv = Self{ claz = ::<todo sym> }
      fun = puts
      block = nullptr
      args = [
        Send{
          recv = Self{ claz = ::<todo sym> }
          fun = foo
          block = nullptr
          args = [
          ]
        }
      ]
    }
  ]
}
