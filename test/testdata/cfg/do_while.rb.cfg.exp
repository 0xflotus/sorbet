digraph "do_while.rb" {
subgraph "cluster_#<static-init>" {
    label = "#<static-init>";
    color = blue;
    "bb#<static-init>_0" [shape = invhouse];
    "bb#<static-init>_1" [shape = parallelogram];

    "bb#<static-init>_0" [
        label = "block[id=0]()\l<unconditional>\l"
    ];

    "bb#<static-init>_0" -> "bb#<static-init>_2" [style="bold"];
    "bb#<static-init>_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb#<static-init>_1" -> "bb#<static-init>_1" [style="bold"];
    "bb#<static-init>_2" [
        label = "block[id=2]()\louterLoops: 1\l<whileTemp>$5: TrueClass = true\l<whileTemp>$5: TrueClass\l"
    ];

    "bb#<static-init>_2" -> "bb#<static-init>_4" [style="bold"];
    "bb#<static-init>_2" -> "bb#<static-init>_7" [style="tapered"];

    "bb#<static-init>_4" [
        label = "block[id=4]()\louterLoops: 1\l<statTemp>$8: T.class_of(<root>) = self\l<statTemp>$9: Integer(2) = 2\lforTemp$2: NilClass = <statTemp>$8: T.class_of(<root>).puts(<statTemp>$9: Integer(2))\l<statTemp>$11: FalseClass = false\l<ifTemp>$10: T.any(TrueClass, FalseClass) = <statTemp>$11: FalseClass.!()\l<ifTemp>$10: T.any(TrueClass, FalseClass)\l"
    ];

    "bb#<static-init>_4" -> "bb#<static-init>_7" [style="bold"];
    "bb#<static-init>_4" -> "bb#<static-init>_2" [style="tapered"];

    "bb#<static-init>_7" [
        label = "block[id=7]()\louterLoops: 1\l<whileTemp>$14: TrueClass = true\l<whileTemp>$14: TrueClass\l"
    ];

    "bb#<static-init>_7" -> "bb#<static-init>_9" [style="bold"];
    "bb#<static-init>_7" -> "bb#<static-init>_8" [style="tapered"];

    "bb#<static-init>_8" [
        label = "block[id=8]()\lx: Integer(0) = 0\l<unconditional>\l"
    ];

    "bb#<static-init>_8" -> "bb#<static-init>_12" [style="bold"];
    "bb#<static-init>_9" [
        label = "block[id=9]()\louterLoops: 1\l<statTemp>$17: T.class_of(<root>) = self\l<statTemp>$18: Integer(2) = 2\lforTemp$3: NilClass = <statTemp>$17: T.class_of(<root>).puts(<statTemp>$18: Integer(2))\l<ifTemp>$19: TrueClass = true\l<ifTemp>$19: TrueClass\l"
    ];

    "bb#<static-init>_9" -> "bb#<static-init>_8" [style="bold"];
    "bb#<static-init>_9" -> "bb#<static-init>_7" [style="tapered"];

    "bb#<static-init>_12" [
        label = "block[id=12](x: Integer(0))\louterLoops: 1\l<whileTemp>$23: FalseClass = false\l<whileTemp>$23: FalseClass\l"
    ];

    "bb#<static-init>_12" -> "bb#<static-init>_14" [style="bold"];
    "bb#<static-init>_12" -> "bb#<static-init>_13" [style="tapered"];

    "bb#<static-init>_13" [
        label = "block[id=13](x: Integer(0))\ly: Integer(0) = 0\l<unconditional>\l"
    ];

    "bb#<static-init>_13" -> "bb#<static-init>_15" [style="bold"];
    "bb#<static-init>_14" [
        label = "block[id=14](x: Integer(0))\louterLoops: 1\l<statTemp>$26 = self\l<statTemp>$27 = 2\l<statTemp>$25 = <statTemp>$26.puts(<statTemp>$27)\lx = 1\l<unconditional>\l"
    ];

    "bb#<static-init>_14" -> "bb#<static-init>_12" [style="bold"];
    "bb#<static-init>_15" [
        label = "block[id=15](x: Integer(0), y: Integer(0))\louterLoops: 1\l<statTemp>$31: TrueClass = true\l<whileTemp>$30: T.any(TrueClass, FalseClass) = <statTemp>$31: TrueClass.!()\l<whileTemp>$30: T.any(TrueClass, FalseClass)\l"
    ];

    "bb#<static-init>_15" -> "bb#<static-init>_17" [style="bold"];
    "bb#<static-init>_15" -> "bb#<static-init>_16" [style="tapered"];

    "bb#<static-init>_16" [
        label = "block[id=16](x: Integer(0), y: Integer(0))\l<statTemp>$37: T.class_of(<root>) = self\l<statTemp>$36: NilClass = <statTemp>$37: T.class_of(<root>).puts(x: Integer(0), y: Integer(0))\l<finalReturn>: T.noreturn = return <returnMethodTemp>$2: NilClass\l<unconditional>\l"
    ];

    "bb#<static-init>_16" -> "bb#<static-init>_1" [style="bold"];
    "bb#<static-init>_17" [
        label = "block[id=17](x: Integer(0), y: Integer(0))\louterLoops: 1\l<statTemp>$34: T.class_of(<root>) = self\l<statTemp>$35: Integer(2) = 2\l<statTemp>$33: NilClass = <statTemp>$34: T.class_of(<root>).puts(<statTemp>$35: Integer(2))\ly: Integer(1) = 1\l<unconditional>\l"
    ];

    "bb#<static-init>_17" -> "bb#<static-init>_15" [style="bold"];
}

}

