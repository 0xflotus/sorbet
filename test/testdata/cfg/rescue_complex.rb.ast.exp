begin
  def meth<<constant:<todo sym>>>()
    0
  end
  def foo<<constant:<todo sym>>>()
    1
  end
  def bar<<constant:<todo sym>>>()
    2
  end
  def baz<<constant:<todo sym>>>()
    3
  end
  def take_arg<<constant:<todo sym>>>(x)
    x
  end
  def multiple_rescue<<constant:<todo sym>>>()
    begin
      self(<constant:<todo sym>>).meth()
    rescue => rescueTemp$10000
      self(<constant:<todo sym>>).baz()
    rescue => rescueTemp$10001
      self(<constant:<todo sym>>).bar()
    else
      <emptyTree>
    end
  end
  def multiple_rescue_classes<<constant:<todo sym>>>()
    begin
      self(<constant:<todo sym>>).meth()
    rescue <emptyTree>::<constant:Foo>, <emptyTree>::<constant:Bar> => baz
      baz
    else
      <emptyTree>
    end
  end
  def parse_rescue_ensure<<constant:<todo sym>>>()
    begin
      <Not Supported (Ensure)>
    end
  end
  def parse_bug_rescue_empty_else<<constant:<todo sym>>>()
    begin
      <emptyTree>
    rescue <emptyTree>::<constant:LoadError> => rescueTemp$10002
      <emptyTree>
    else
      <emptyTree>
    end
  end
  def parse_ruby_bug_12686<<constant:<todo sym>>>()
    self(<constant:<todo sym>>).take_arg(begin
        self(<constant:<todo sym>>).bar()
      rescue => rescueTemp$10003
        ::<constant:nil>
      else
        <emptyTree>
      end)
  end
  def parse_rescue_mod<<constant:<todo sym>>>()
    self(<constant:<todo sym>>).meth()
  rescue => rescueTemp$10004
    self(<constant:<todo sym>>).bar()
  else
    <emptyTree>
  end
  def parse_resbody_list_var<<constant:<todo sym>>>()
    begin
      self(<constant:<todo sym>>).meth()
    rescue self(<constant:<todo sym>>).foo() => ex
      self(<constant:<todo sym>>).bar()
    else
      <emptyTree>
    end
  end
  def parse_rescue_else_ensure<<constant:<todo sym>>>()
    begin
      <Not Supported (Ensure)>
    end
  end
  def parse_rescue<<constant:<todo sym>>>()
    begin
      self(<constant:<todo sym>>).meth()
    rescue => rescueTemp$10005
      self(<constant:<todo sym>>).foo()
    else
      <emptyTree>
    end
  end
  def parse_resbody_var<<constant:<todo sym>>>()
    begin
      self(<constant:<todo sym>>).meth()
    rescue => ex
      self(<constant:<todo sym>>).bar()
    else
      <emptyTree>
    end
  end
  def parse_resbody_var_1<<constant:<todo sym>>>()
    begin
      self(<constant:<todo sym>>).meth()
    rescue => rescueTemp$10006
      begin
        @ex = rescueTemp$10006
        self(<constant:<todo sym>>).bar()
      end
    else
      <emptyTree>
    end
  end
  def parse_rescue_mod_op_assign<<constant:<todo sym>>>()
    foo = foo.+(self(<constant:<todo sym>>).meth()
    rescue => rescueTemp$10007
      self(<constant:<todo sym>>).bar()
    else
      <emptyTree>)
  end
  def parse_ruby_bug_12402<<constant:<todo sym>>>()
    foo = self(<constant:<todo sym>>).raise(self(<constant:<todo sym>>).bar())
  rescue => rescueTemp$10008
    ::<constant:nil>
  else
    <emptyTree>
  end
  def parse_ruby_bug_12402_1<<constant:<todo sym>>>()
    foo = foo.+(self(<constant:<todo sym>>).raise(self(<constant:<todo sym>>).bar())
    rescue => rescueTemp$10009
      ::<constant:nil>
    else
      <emptyTree>)
  end
  def parse_ruby_bug_12402_2<<constant:<todo sym>>>()
    begin
      []$10011 = self(<constant:<todo sym>>).foo()
      []$10012 = 0
      []$10011.[]=([]$10012, []$10011.[]([]$10012).+(self(<constant:<todo sym>>).raise(self(<constant:<todo sym>>).bar())
        rescue => rescueTemp$10010
          ::<constant:nil>
        else
          <emptyTree>))
    end
  end
end
