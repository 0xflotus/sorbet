class <emptyTree>::<constant:TestRescue><<constant:<todo sym>>> < (::<todo sym>)
  def meth<<constant:<todo sym>>>()
    0
  end

  def foo<<constant:<todo sym>>>()
    1
  end

  def bar<<constant:<todo sym>>>()
    2
  end

  def baz<<constant:<todo sym>>>()
    3
  end

  def take_arg<<constant:<todo sym>>>(x)
    x
  end

  def initialize<<constant:<todo sym>>>()
    @ex = <emptyTree>::<constant:T>.let(nil, <emptyTree>::<constant:T>.nilable(<emptyTree>::<constant:StandardError>))
  end

  def multiple_rescue<<constant:<todo sym>>>()
    self(<constant:<todo sym>>).meth()
  rescue => <rescueTemp>$2
    self(<constant:<todo sym>>).baz()
  rescue => <rescueTemp>$3
    self(<constant:<todo sym>>).bar()
  end

  def multiple_rescue_classes<<constant:<todo sym>>>()
    self(<constant:<todo sym>>).meth()
  rescue <emptyTree>::<constant:Foo>, <emptyTree>::<constant:Bar> => baz
    baz
  end

  def parse_rescue_ensure<<constant:<todo sym>>>()
    self(<constant:<todo sym>>).meth()
  rescue => <rescueTemp>$2
    self(<constant:<todo sym>>).baz()
  ensure
    self(<constant:<todo sym>>).bar()
  end

  def parse_bug_rescue_empty_else<<constant:<todo sym>>>()
    <emptyTree>
  rescue <emptyTree>::<constant:LoadError> => <rescueTemp>$2
    <emptyTree>
  end

  def parse_ruby_bug_12686<<constant:<todo sym>>>()
    self(<constant:<todo sym>>).take_arg(self(<constant:<todo sym>>).bar()
    rescue => <rescueTemp>$2
      nil)
  end

  def parse_rescue_mod<<constant:<todo sym>>>()
    self(<constant:<todo sym>>).meth()
  rescue => <rescueTemp>$2
    self(<constant:<todo sym>>).bar()
  end

  def parse_resbody_list_var<<constant:<todo sym>>>()
    self(<constant:<todo sym>>).meth()
  rescue self(<constant:<todo sym>>).foo() => ex
    self(<constant:<todo sym>>).bar()
  end

  def parse_rescue_else_ensure<<constant:<todo sym>>>()
    self(<constant:<todo sym>>).meth()
  rescue => <rescueTemp>$2
    self(<constant:<todo sym>>).baz()
  else
    self(<constant:<todo sym>>).foo()
  ensure
    self(<constant:<todo sym>>).bar()
  end

  def parse_rescue<<constant:<todo sym>>>()
    self(<constant:<todo sym>>).meth()
  rescue => <rescueTemp>$2
    self(<constant:<todo sym>>).foo()
  end

  def parse_resbody_var<<constant:<todo sym>>>()
    self(<constant:<todo sym>>).meth()
  rescue => ex
    self(<constant:<todo sym>>).bar()
  end

  def parse_resbody_var_1<<constant:<todo sym>>>()
    self(<constant:<todo sym>>).meth()
  rescue => <rescueTemp>$2
    begin
      @ex = <rescueTemp>$2
      self(<constant:<todo sym>>).bar()
    end
  end

  def parse_rescue_mod_op_assign<<constant:<todo sym>>>()
    foo = foo.+(self(<constant:<todo sym>>).meth()
    rescue => <rescueTemp>$2
      self(<constant:<todo sym>>).bar())
  end

  def parse_ruby_bug_12402<<constant:<todo sym>>>()
    foo = self(<constant:<todo sym>>).raise(self(<constant:<todo sym>>).bar())
  rescue => <rescueTemp>$2
    nil
  end

  def parse_ruby_bug_12402_1<<constant:<todo sym>>>()
    foo = foo.+(self(<constant:<todo sym>>).raise(self(<constant:<todo sym>>).bar())
    rescue => <rescueTemp>$2
      nil)
  end

  def parse_ruby_bug_12402_2<<constant:<todo sym>>>()
    begin
      []$3 = self(<constant:<todo sym>>).foo()
      []$4 = 0
      []$3.[]=([]$4, []$3.[]([]$4).+(self(<constant:<todo sym>>).raise(self(<constant:<todo sym>>).bar())
        rescue => <rescueTemp>$2
          nil))
    end
  end
end
