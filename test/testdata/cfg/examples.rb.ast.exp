class <emptyTree>::<constant:Examples><<constant:<todo sym>>> < (::<todo sym>)
  def i_like_ifs<<constant:<todo sym>>>(&<blk>)
    if true
      return 1
    else
      return 2
    end
  end

  def i_like_exps<<constant:<todo sym>>>(&<blk>)
    if true
      1
    else
      2
    end
  end

  def return_in_one_branch1<<constant:<todo sym>>>(&<blk>)
    if true
      return 1
    else
      2
    end
  end

  def return_in_one_branch2<<constant:<todo sym>>>(&<blk>)
    if true
      1
    else
      return 2
    end
  end

  def variables<<constant:<todo sym>>>(&<blk>)
    begin
      if true
        a = 1
      else
        a = 2
      end
      if false
        b = 1
      else
        b = 2
      end
      a.+(b)
    end
  end

  def variables_and_loop<<constant:<todo sym>>>(cond, &<blk>)
    begin
      if true
        a = 1
      else
        a = 2
      end
      while true
        if cond
          b = 1
        else
          b = 2
        end
      end
      b
    end
  end

  def variables_loop_if<<constant:<todo sym>>>(cond, &<blk>)
    begin
      while true
        if cond
          b = 1
        else
          b = 2
        end
      end
      b
    end
  end

  def take_arguments<<constant:<todo sym>>>(i, &<blk>)
    if false
      2
    else
      i
    end
  end
end
