digraph "rescue_var_expression.rb" {
subgraph "cluster_::Object#foo" {
    label = "::Object#foo";
    color = blue;
    "bb::Object#foo_0" [shape = invhouse];
    "bb::Object#foo_1" [shape = parallelogram];

    "bb::Object#foo_0" [
        label = "block[id=0]()\l<constant:Exception>$8 = alias <constant:Exception> : <Class:Exception>\l<constant:MyClass>$13 = alias <constant:MyClass> : <Class:MyClass>\l<rescueTemp$4 = <unanalyzable> : T.untyped\l<rescueTemp$4\l"
    ];

    "bb::Object#foo_0" -> "bb::Object#foo_3" [style="bold"];
    "bb::Object#foo_0" -> "bb::Object#foo_4" [style="tapered"];

    "bb::Object#foo_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Object#foo_1" -> "bb::Object#foo_1" [style="bold"];
    "bb::Object#foo_3" [
        label = "block[id=3](<rescueTemp$4, <constant:Exception>$8, <constant:MyClass>$13)\l<rescueTemp$9 = <rescueTemp$4.is_a?(<constant:Exception>$8) : T.untyped\l<rescueTemp$9\l"
    ];

    "bb::Object#foo_3" -> "bb::Object#foo_7" [style="bold"];
    "bb::Object#foo_3" -> "bb::Object#foo_1" [style="tapered"];

    "bb::Object#foo_4" [
        label = "block[id=4]()\l<statTemp>$5 = self : Object\l<statTemp>$6 = \"boop\" : String(\"boop\")\l<returnMethodTemp>$2 = <statTemp>$5.raise(<statTemp>$6) : <impossible>\l<unconditional>\l"
    ];

    "bb::Object#foo_4" -> "bb::Object#foo_9" [style="bold"];
    "bb::Object#foo_7" [
        label = "block[id=7](<rescueTemp$4, <constant:MyClass>$13)\l<statTemp>$11 = <constant:MyClass>$13.new() : MyClass\l<statTemp>$10 = <statTemp>$11.foo=(<rescueTemp$4) : T.untyped\l<returnMethodTemp>$2 = 3 : Integer(3)\l<unconditional>\l"
    ];

    "bb::Object#foo_7" -> "bb::Object#foo_9" [style="bold"];
    "bb::Object#foo_9" [
        label = "block[id=9](<returnMethodTemp>$2)\l<finalReturn> = return <returnMethodTemp>$2 : <impossible>\l<unconditional>\l"
    ];

    "bb::Object#foo_9" -> "bb::Object#foo_1" [style="bold"];
}

subgraph "cluster_#<static-init>" {
    label = "#<static-init>";
    color = blue;
    "bb#<static-init>_0" [shape = invhouse];
    "bb#<static-init>_1" [shape = parallelogram];

    "bb#<static-init>_0" [
        label = "block[id=0]()\l<constant:RubyTyper>$7 = alias <constant:RubyTyper> : <Class:RubyTyper>\l<constant:MyClass>$9 = alias <constant:MyClass> : <Class:MyClass>\l<statTemp>$5 = <constant:RubyTyper>$7.keep_for_ide(<constant:MyClass>$9) : T.untyped\l<statTemp>$11 = self : <Class:<root>>\l<statTemp>$13 = self : <Class:<root>>\l<statTemp>$12 = <statTemp>$13.foo() : T.untyped\l<statTemp>$10 = <statTemp>$11.puts(<statTemp>$12) : NilClass\l<finalReturn> = return <returnMethodTemp>$2 : <impossible>\l<unconditional>\l"
    ];

    "bb#<static-init>_0" -> "bb#<static-init>_1" [style="bold"];
    "bb#<static-init>_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb#<static-init>_1" -> "bb#<static-init>_1" [style="bold"];
}

subgraph "cluster_::MyClass#foo=" {
    label = "::MyClass#foo=";
    color = blue;
    "bb::MyClass#foo=_0" [shape = invhouse];
    "bb::MyClass#foo=_1" [shape = parallelogram];

    "bb::MyClass#foo=_0" [
        label = "block[id=0]()\l<selfMethodTemp>$3 = self : MyClass\l<finalReturn> = return <returnMethodTemp>$2 : <impossible>\l<unconditional>\l"
    ];

    "bb::MyClass#foo=_0" -> "bb::MyClass#foo=_1" [style="bold"];
    "bb::MyClass#foo=_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::MyClass#foo=_1" -> "bb::MyClass#foo=_1" [style="bold"];
}

}

