digraph "rescue_expression.rb"{
subgraph "cluster_#<static-init>$10" {
    label = "#<static-init>$10";
    color = blue;
    "bb#<static-init>$10_0" [shape = invhouse];
    "bb#<static-init>$10_1" [shape = parallelogram];

    "bb#<static-init>$10_0" [label = "block[id=0]()
<statTemp>$6 = self : <Class:<root>>
<statTemp>$8 = self : <Class:<root>>
<statTemp>$7 = <statTemp>$8.foo() : untyped
<returnMethodTemp>$2 = <statTemp>$6.puts(<statTemp>$7) : NilClass
<finalReturn> = return <returnMethodTemp>$2 : <impossible>
<unconditional>"];

    "bb#<static-init>$10_0" -> "bb#<static-init>$10_1" [style="bold"];
    "bb#<static-init>$10_1" [label = "block[id=1]()
<unconditional>"];

    "bb#<static-init>$10_1" -> "bb#<static-init>$10_1" [style="bold"];
}

subgraph "cluster_::<constant:Object>#foo" {
    label = "::<constant:Object>#foo";
    color = blue;
    "bb::<constant:Object>#foo_0" [shape = invhouse];
    "bb::<constant:Object>#foo_1" [shape = parallelogram];

    "bb::<constant:Object>#foo_0" [label = "block[id=0]()
<constant:MyException>$8 = alias <constant:MyException> : <Class:MyException>
<rescueTemp$4 = <unanalyzable> : untyped
<rescueTemp$4"];

    "bb::<constant:Object>#foo_0" -> "bb::<constant:Object>#foo_3" [style="bold"];
    "bb::<constant:Object>#foo_0" -> "bb::<constant:Object>#foo_4" [style="tapered"];

    "bb::<constant:Object>#foo_1" [label = "block[id=1]()
<unconditional>"];

    "bb::<constant:Object>#foo_1" -> "bb::<constant:Object>#foo_1" [style="bold"];
    "bb::<constant:Object>#foo_3" [label = "block[id=3](<rescueTemp$4, <constant:MyException>$8)
<statTemp>$11 = <constant:MyException>$8.new() : MyException
<rescueTemp$10 = <statTemp>$11.class() : <Class:MyException>
<rescueTemp$13 = <rescueTemp$4.is_a?(<rescueTemp$10) : untyped
<rescueTemp$13"];

    "bb::<constant:Object>#foo_3" -> "bb::<constant:Object>#foo_8" [style="bold"];
    "bb::<constant:Object>#foo_3" -> "bb::<constant:Object>#foo_1" [style="tapered"];

    "bb::<constant:Object>#foo_4" [label = "block[id=4](<constant:MyException>$8)
<statTemp>$5 = self : Object
<statTemp>$6 = <constant:MyException>$8.new() : MyException
<returnMethodTemp>$2 = <statTemp>$5.raise(<statTemp>$6) : <impossible>
<unconditional>"];

    "bb::<constant:Object>#foo_4" -> "bb::<constant:Object>#foo_7" [style="bold"];
    "bb::<constant:Object>#foo_7" [label = "block[id=7](<returnMethodTemp>$2)
<finalReturn> = return <returnMethodTemp>$2 : <impossible>
<unconditional>"];

    "bb::<constant:Object>#foo_7" -> "bb::<constant:Object>#foo_1" [style="bold"];
    "bb::<constant:Object>#foo_8" [label = "block[id=8](<rescueTemp$4)
<returnMethodTemp>$2 = 3 : Integer(3)
<unconditional>"];

    "bb::<constant:Object>#foo_8" -> "bb::<constant:Object>#foo_7" [style="bold"];
}

}

