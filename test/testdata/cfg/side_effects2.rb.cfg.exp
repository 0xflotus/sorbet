digraph "side_effects2.rb" {
subgraph "cluster_::Side#foo" {
    label = "::Side#foo";
    color = blue;
    "bb::Side#foo_0" [shape = invhouse];
    "bb::Side#foo_1" [shape = parallelogram];

    "bb::Side#foo_0" [
        label = "block[id=0]()\l<selfMethodTemp>$3 = self : Side\lcond = load_arg(<selfMethodTemp>$3#foo, 0) : untyped\la = self : Side\l<statTemp>$5 = a : Side\l<statTemp>$6 = a : Side\lcond\l"
    ];

    "bb::Side#foo_0" -> "bb::Side#foo_2" [style="bold"];
    "bb::Side#foo_0" -> "bb::Side#foo_3" [style="tapered"];

    "bb::Side#foo_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Side#foo_1" -> "bb::Side#foo_1" [style="bold"];
    "bb::Side#foo_2" [
        label = "block[id=2](<statTemp>$5, <statTemp>$6)\la = true : TrueClass\l<unconditional>\l"
    ];

    "bb::Side#foo_2" -> "bb::Side#foo_4" [style="bold"];
    "bb::Side#foo_3" [
        label = "block[id=3](<statTemp>$5, <statTemp>$6)\la = 2 : Integer(2)\l<unconditional>\l"
    ];

    "bb::Side#foo_3" -> "bb::Side#foo_4" [style="bold"];
    "bb::Side#foo_4" [
        label = "block[id=4](<statTemp>$5, <statTemp>$6, a)\l<returnMethodTemp>$2 = <statTemp>$5.bar(<statTemp>$6, a, a) : untyped\l<finalReturn> = return <returnMethodTemp>$2 : <impossible>\l<unconditional>\l"
    ];

    "bb::Side#foo_4" -> "bb::Side#foo_1" [style="bold"];
}

subgraph "cluster_::Side#bar" {
    label = "::Side#bar";
    color = blue;
    "bb::Side#bar_0" [shape = invhouse];
    "bb::Side#bar_1" [shape = parallelogram];

    "bb::Side#bar_0" [
        label = "block[id=0]()\l<selfMethodTemp>$3 = self : Side\la = load_arg(<selfMethodTemp>$3#bar, 0) : untyped\lb = load_arg(<selfMethodTemp>$3#bar, 1) : untyped\lc = load_arg(<selfMethodTemp>$3#bar, 2) : untyped\l<statTemp>$4 = self : Side\l<returnMethodTemp>$2 = <statTemp>$4.puts(a, b, c) : NilClass\l<finalReturn> = return <returnMethodTemp>$2 : <impossible>\l<unconditional>\l"
    ];

    "bb::Side#bar_0" -> "bb::Side#bar_1" [style="bold"];
    "bb::Side#bar_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Side#bar_1" -> "bb::Side#bar_1" [style="bold"];
}

}

