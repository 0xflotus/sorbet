digraph "side_effects2.rb"{
subgraph "cluster_::<constant:Side>#foo" {
    label = "::<constant:Side>#foo";
    color = blue;
    "bb::<constant:Side>#foo_0" [shape = invhouse];
    "bb::<constant:Side>#foo_1" [shape = parallelogram];

    "bb::<constant:Side>#foo_0" [label = "(a, statTemp$4, statTemp$5)
a = self : Side
statTemp$4 = a : Side
statTemp$5 = a : Side
ifTemp$7 = true : TrueClass(true)
ifTemp$7"];

    "bb::<constant:Side>#foo_0" -> "bb::<constant:Side>#foo_2" [style="bold"];
    "bb::<constant:Side>#foo_0" -> "bb::<constant:Side>#foo_3" [style="tapered"];

    "bb::<constant:Side>#foo_1" [label = "()
<unconditional>"];

    "bb::<constant:Side>#foo_1" -> "bb::<constant:Side>#foo_1" [style="bold"];
    "bb::<constant:Side>#foo_2" [label = "(a, statTemp$4, statTemp$5)
a = true : TrueClass(true)
<unconditional>"];

    "bb::<constant:Side>#foo_2" -> "bb::<constant:Side>#foo_4" [style="bold"];
    "bb::<constant:Side>#foo_3" [label = "(a, statTemp$4, statTemp$5)
a = 2 : Integer(2)
<unconditional>"];

    "bb::<constant:Side>#foo_3" -> "bb::<constant:Side>#foo_4" [style="bold"];
    "bb::<constant:Side>#foo_4" [label = "(a, statTemp$4, statTemp$5)
returnMethodTemp$1 = statTemp$4.bar(statTemp$5, a, a) : untyped
returnMethodTemp$9 = return returnMethodTemp$1 : <bottom>
<unconditional>"];

    "bb::<constant:Side>#foo_4" -> "bb::<constant:Side>#foo_1" [style="bold"];
}

subgraph "cluster_::<constant:Side>#bar" {
    label = "::<constant:Side>#bar";
    color = blue;
    "bb::<constant:Side>#bar_0" [shape = invhouse];
    "bb::<constant:Side>#bar_1" [shape = parallelogram];

    "bb::<constant:Side>#bar_0" [label = "()
selfMethodTemp$2 = self : Side
a = load_arg(selfMethodTemp$2#bar, 0) : untyped
b = load_arg(selfMethodTemp$2#bar, 1) : untyped
c = load_arg(selfMethodTemp$2#bar, 2) : untyped
statTemp$3 = self : Side
returnMethodTemp$1 = statTemp$3.puts(a, b, c) : untyped
returnMethodTemp$7 = return returnMethodTemp$1 : <bottom>
<unconditional>"];

    "bb::<constant:Side>#bar_0" -> "bb::<constant:Side>#bar_1" [style="bold"];
    "bb::<constant:Side>#bar_1" [label = "()
<unconditional>"];

    "bb::<constant:Side>#bar_1" -> "bb::<constant:Side>#bar_1" [style="bold"];
}

}

