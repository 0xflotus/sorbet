digraph "retry.rb"{
subgraph "cluster_#<static-init>" {
    label = "#<static-init>";
    color = blue;
    "bb#<static-init>_0" [shape = invhouse];
    "bb#<static-init>_1" [shape = parallelogram];

    "bb#<static-init>_0" [label = "block[id=0]()
<statTemp>$5 = self : <Class:<root>>
<returnMethodTemp>$2 = <statTemp>$5.main() : untyped
<finalReturn> = return <returnMethodTemp>$2 : <impossible>
<unconditional>"];

    "bb#<static-init>_0" -> "bb#<static-init>_1" [style="bold"];
    "bb#<static-init>_1" [label = "block[id=1]()
<unconditional>"];

    "bb#<static-init>_1" -> "bb#<static-init>_1" [style="bold"];
}

subgraph "cluster_::Object#main" {
    label = "::Object#main";
    color = blue;
    "bb::Object#main_0" [shape = invhouse];
    "bb::Object#main_1" [shape = parallelogram];

    "bb::Object#main_0" [label = "block[id=0]()
<constant:StandardError>$16 = alias <constant:StandardError> : <Class:StandardError>
try = 0 : Integer(0)
<unconditional>"];

    "bb::Object#main_0" -> "bb::Object#main_2" [style="bold"];
    "bb::Object#main_1" [label = "block[id=1]()
<returnMethodTemp>$2 = 1
<unconditional>"];

    "bb::Object#main_1" -> "bb::Object#main_1" [style="bold"];
    "bb::Object#main_2" [label = "block[id=2](<constant:StandardError>$16, try)
<rescueTemp$5 = <unanalyzable> : untyped
<rescueTemp$5"];

    "bb::Object#main_2" -> "bb::Object#main_3" [style="bold"];
    "bb::Object#main_2" -> "bb::Object#main_4" [style="tapered"];

    "bb::Object#main_3" [label = "block[id=3](<rescueTemp$5, <constant:StandardError>$16, try)
<rescueTemp$17 = <rescueTemp$5.is_a?(<constant:StandardError>$16) : untyped
<rescueTemp$17"];

    "bb::Object#main_3" -> "bb::Object#main_11" [style="bold"];
    "bb::Object#main_3" -> "bb::Object#main_1" [style="tapered"];

    "bb::Object#main_4" [label = "block[id=4](try)
<statTemp>$8 = 3 : Integer(3)
<ifTemp>$6 = try.<(<statTemp>$8) : TrueClass | FalseClass
<ifTemp>$6"];

    "bb::Object#main_4" -> "bb::Object#main_5" [style="bold"];
    "bb::Object#main_4" -> "bb::Object#main_10" [style="tapered"];

    "bb::Object#main_5" [label = "block[id=5](try)
<statTemp>$10 = try : Integer(0)
<statTemp>$11 = 1 : Integer(1)
try = <statTemp>$10.+(<statTemp>$11) : Integer
<statTemp>$12 = self : Object
<statTemp>$13 = \"e\" : String(\"e\")
<returnMethodTemp>$2 = <statTemp>$12.raise(<statTemp>$13) : <impossible>
<unconditional>"];

    "bb::Object#main_5" -> "bb::Object#main_10" [style="bold"];
    "bb::Object#main_10" [label = "block[id=10](<returnMethodTemp>$2)
<finalReturn> = return <returnMethodTemp>$2 : <impossible>
<unconditional>"];

    "bb::Object#main_10" -> "bb::Object#main_1" [style="bold"];
    "bb::Object#main_11" [label = "block[id=11](<rescueTemp$5, <constant:StandardError>$16, try)
<statTemp>$19 = self : Object
<statTemp>$20 = \"rescue\" : String(\"rescue\")
<statTemp>$18 = <statTemp>$19.puts(<statTemp>$20) : NilClass
<unconditional>"];

    "bb::Object#main_11" -> "bb::Object#main_2" [style="bold"];
}

}

