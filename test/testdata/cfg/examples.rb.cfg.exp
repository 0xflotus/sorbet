digraph "examples.rb"{
subgraph "cluster_::<constant:Integer>#+" {
    label = "::<constant:Integer>#+";
    color = blue;
    "bb::<constant:Integer>#+_0" [shape = invhouse];
    "bb::<constant:Integer>#+_1" [shape = parallelogram];

    "bb::<constant:Integer>#+_0" [label = "()
selfMethodTemp$1 = self : Integer
returnMethodTemp$1 = NotSupported() : untyped
returnMethodTemp$2 = return returnMethodTemp$1 : <bottom>
<unconditional>"];
    "bb::<constant:Integer>#+_0" -> "bb::<constant:Integer>#+_1";
    "bb::<constant:Integer>#+_1" [label = "()
<unconditional>"];
    "bb::<constant:Integer>#+_1" -> "bb::<constant:Integer>#+_1";
}

subgraph "cluster_::<constant:Examples>#i_like_ifs" {
    label = "::<constant:Examples>#i_like_ifs";
    color = blue;
    "bb::<constant:Examples>#i_like_ifs_0" [shape = invhouse];
    "bb::<constant:Examples>#i_like_ifs_1" [shape = parallelogram];

    "bb::<constant:Examples>#i_like_ifs_0" [label = "()
ifTemp$2 = true : TrueClass(true)
ifTemp$2"];
    "bb::<constant:Examples>#i_like_ifs_0" -> "bb::<constant:Examples>#i_like_ifs_2";
    "bb::<constant:Examples>#i_like_ifs_0" -> "bb::<constant:Examples>#i_like_ifs_3";

    "bb::<constant:Examples>#i_like_ifs_1" [label = "(returnMethodTemp$2)
returnMethodTemp$5 = return returnMethodTemp$2
<unconditional>"];
    "bb::<constant:Examples>#i_like_ifs_1" -> "bb::<constant:Examples>#i_like_ifs_1";
    "bb::<constant:Examples>#i_like_ifs_2" [label = "()
returnTemp$3 = 1 : Integer(1)
returnMethodTemp$2 = return returnTemp$3 : <bottom>
<unconditional>"];
    "bb::<constant:Examples>#i_like_ifs_2" -> "bb::<constant:Examples>#i_like_ifs_1";
    "bb::<constant:Examples>#i_like_ifs_3" [label = "()
returnTemp$4 = 2 : Integer(2)
returnMethodTemp$2 = return returnTemp$4 : <bottom>
<unconditional>"];
    "bb::<constant:Examples>#i_like_ifs_3" -> "bb::<constant:Examples>#i_like_ifs_1";
}

subgraph "cluster_::<constant:Examples>#i_like_exps" {
    label = "::<constant:Examples>#i_like_exps";
    color = blue;
    "bb::<constant:Examples>#i_like_exps_0" [shape = invhouse];
    "bb::<constant:Examples>#i_like_exps_1" [shape = parallelogram];

    "bb::<constant:Examples>#i_like_exps_0" [label = "()
ifTemp$2 = true : TrueClass(true)
ifTemp$2"];
    "bb::<constant:Examples>#i_like_exps_0" -> "bb::<constant:Examples>#i_like_exps_2";
    "bb::<constant:Examples>#i_like_exps_0" -> "bb::<constant:Examples>#i_like_exps_3";

    "bb::<constant:Examples>#i_like_exps_1" [label = "()
<unconditional>"];
    "bb::<constant:Examples>#i_like_exps_1" -> "bb::<constant:Examples>#i_like_exps_1";
    "bb::<constant:Examples>#i_like_exps_2" [label = "(returnMethodTemp$3)
returnMethodTemp$3 = 1 : Integer(1)
<unconditional>"];
    "bb::<constant:Examples>#i_like_exps_2" -> "bb::<constant:Examples>#i_like_exps_4";
    "bb::<constant:Examples>#i_like_exps_3" [label = "(returnMethodTemp$3)
returnMethodTemp$3 = 2 : Integer(2)
<unconditional>"];
    "bb::<constant:Examples>#i_like_exps_3" -> "bb::<constant:Examples>#i_like_exps_4";
    "bb::<constant:Examples>#i_like_exps_4" [label = "(returnMethodTemp$3)
returnMethodTemp$3 = return returnMethodTemp$3 : <bottom>
<unconditional>"];
    "bb::<constant:Examples>#i_like_exps_4" -> "bb::<constant:Examples>#i_like_exps_1";
}

subgraph "cluster_::<constant:Examples>#return_in_one_branch1" {
    label = "::<constant:Examples>#return_in_one_branch1";
    color = blue;
    "bb::<constant:Examples>#return_in_one_branch1_0" [shape = invhouse];
    "bb::<constant:Examples>#return_in_one_branch1_1" [shape = parallelogram];

    "bb::<constant:Examples>#return_in_one_branch1_0" [label = "()
ifTemp$2 = true : TrueClass(true)
ifTemp$2"];
    "bb::<constant:Examples>#return_in_one_branch1_0" -> "bb::<constant:Examples>#return_in_one_branch1_2";
    "bb::<constant:Examples>#return_in_one_branch1_0" -> "bb::<constant:Examples>#return_in_one_branch1_3";

    "bb::<constant:Examples>#return_in_one_branch1_1" [label = "()
<unconditional>"];
    "bb::<constant:Examples>#return_in_one_branch1_1" -> "bb::<constant:Examples>#return_in_one_branch1_1";
    "bb::<constant:Examples>#return_in_one_branch1_2" [label = "()
returnTemp$3 = 1 : Integer(1)
returnMethodTemp$4 = return returnTemp$3 : <bottom>
<unconditional>"];
    "bb::<constant:Examples>#return_in_one_branch1_2" -> "bb::<constant:Examples>#return_in_one_branch1_1";
    "bb::<constant:Examples>#return_in_one_branch1_3" [label = "(returnMethodTemp$4)
returnMethodTemp$4 = 2 : Integer(2)
returnMethodTemp$4 = return returnMethodTemp$4 : <bottom>
<unconditional>"];
    "bb::<constant:Examples>#return_in_one_branch1_3" -> "bb::<constant:Examples>#return_in_one_branch1_1";
}

subgraph "cluster_::<constant:Examples>#return_in_one_branch2" {
    label = "::<constant:Examples>#return_in_one_branch2";
    color = blue;
    "bb::<constant:Examples>#return_in_one_branch2_0" [shape = invhouse];
    "bb::<constant:Examples>#return_in_one_branch2_1" [shape = parallelogram];

    "bb::<constant:Examples>#return_in_one_branch2_0" [label = "()
ifTemp$2 = true : TrueClass(true)
ifTemp$2"];
    "bb::<constant:Examples>#return_in_one_branch2_0" -> "bb::<constant:Examples>#return_in_one_branch2_2";
    "bb::<constant:Examples>#return_in_one_branch2_0" -> "bb::<constant:Examples>#return_in_one_branch2_3";

    "bb::<constant:Examples>#return_in_one_branch2_1" [label = "()
<unconditional>"];
    "bb::<constant:Examples>#return_in_one_branch2_1" -> "bb::<constant:Examples>#return_in_one_branch2_1";
    "bb::<constant:Examples>#return_in_one_branch2_2" [label = "(returnMethodTemp$5)
returnMethodTemp$5 = 1 : Integer(1)
<unconditional>"];
    "bb::<constant:Examples>#return_in_one_branch2_2" -> "bb::<constant:Examples>#return_in_one_branch2_4";
    "bb::<constant:Examples>#return_in_one_branch2_3" [label = "()
returnTemp$3 = 2 : Integer(2)
returnMethodTemp$5 = return returnTemp$3 : <bottom>
<unconditional>"];
    "bb::<constant:Examples>#return_in_one_branch2_3" -> "bb::<constant:Examples>#return_in_one_branch2_1";
    "bb::<constant:Examples>#return_in_one_branch2_4" [label = "(returnMethodTemp$5)
returnMethodTemp$4 = return returnMethodTemp$5 : <bottom>
<unconditional>"];
    "bb::<constant:Examples>#return_in_one_branch2_4" -> "bb::<constant:Examples>#return_in_one_branch2_1";
}

subgraph "cluster_::<constant:Examples>#variables" {
    label = "::<constant:Examples>#variables";
    color = blue;
    "bb::<constant:Examples>#variables_0" [shape = invhouse];
    "bb::<constant:Examples>#variables_1" [shape = parallelogram];

    "bb::<constant:Examples>#variables_0" [label = "()
ifTemp$3 = true : TrueClass(true)
ifTemp$3"];
    "bb::<constant:Examples>#variables_0" -> "bb::<constant:Examples>#variables_2";
    "bb::<constant:Examples>#variables_0" -> "bb::<constant:Examples>#variables_3";

    "bb::<constant:Examples>#variables_1" [label = "()
<unconditional>"];
    "bb::<constant:Examples>#variables_1" -> "bb::<constant:Examples>#variables_1";
    "bb::<constant:Examples>#variables_2" [label = "(a)
a = 1 : Integer(1)
<unconditional>"];
    "bb::<constant:Examples>#variables_2" -> "bb::<constant:Examples>#variables_4";
    "bb::<constant:Examples>#variables_3" [label = "(a)
a = 2 : Integer(2)
<unconditional>"];
    "bb::<constant:Examples>#variables_3" -> "bb::<constant:Examples>#variables_4";
    "bb::<constant:Examples>#variables_4" [label = "(a)
ifTemp$5 = false : FalseClass(false)
ifTemp$5"];
    "bb::<constant:Examples>#variables_4" -> "bb::<constant:Examples>#variables_5";
    "bb::<constant:Examples>#variables_4" -> "bb::<constant:Examples>#variables_6";

    "bb::<constant:Examples>#variables_5" [label = "(a, b)
b = 1 : Integer(1)
<unconditional>"];
    "bb::<constant:Examples>#variables_5" -> "bb::<constant:Examples>#variables_7";
    "bb::<constant:Examples>#variables_6" [label = "(a, b)
b = 2 : Integer(2)
<unconditional>"];
    "bb::<constant:Examples>#variables_6" -> "bb::<constant:Examples>#variables_7";
    "bb::<constant:Examples>#variables_7" [label = "(a, b)
returnMethodTemp$6 = a.+(b) : Integer
returnMethodTemp$8 = return returnMethodTemp$6 : <bottom>
<unconditional>"];
    "bb::<constant:Examples>#variables_7" -> "bb::<constant:Examples>#variables_1";
}

subgraph "cluster_::<constant:Examples>#variables_and_loop" {
    label = "::<constant:Examples>#variables_and_loop";
    color = blue;
    "bb::<constant:Examples>#variables_and_loop_0" [shape = invhouse];
    "bb::<constant:Examples>#variables_and_loop_1" [shape = parallelogram];

    "bb::<constant:Examples>#variables_and_loop_0" [label = "()
ifTemp$3 = true : TrueClass(true)
ifTemp$3"];
    "bb::<constant:Examples>#variables_and_loop_0" -> "bb::<constant:Examples>#variables_and_loop_2";
    "bb::<constant:Examples>#variables_and_loop_0" -> "bb::<constant:Examples>#variables_and_loop_3";

    "bb::<constant:Examples>#variables_and_loop_1" [label = "()
<unconditional>"];
    "bb::<constant:Examples>#variables_and_loop_1" -> "bb::<constant:Examples>#variables_and_loop_1";
    "bb::<constant:Examples>#variables_and_loop_2" [label = "(a)
a = 1 : Integer(1)
<unconditional>"];
    "bb::<constant:Examples>#variables_and_loop_2" -> "bb::<constant:Examples>#variables_and_loop_4";
    "bb::<constant:Examples>#variables_and_loop_3" [label = "(a)
a = 2 : Integer(2)
<unconditional>"];
    "bb::<constant:Examples>#variables_and_loop_3" -> "bb::<constant:Examples>#variables_and_loop_4";
    "bb::<constant:Examples>#variables_and_loop_4" [label = "()
<unconditional>"];
    "bb::<constant:Examples>#variables_and_loop_4" -> "bb::<constant:Examples>#variables_and_loop_5";
    "bb::<constant:Examples>#variables_and_loop_5" [label = "(b)
outerLoops: 1
whileTemp$5 = true : TrueClass(true)
whileTemp$5"];
    "bb::<constant:Examples>#variables_and_loop_5" -> "bb::<constant:Examples>#variables_and_loop_6";
    "bb::<constant:Examples>#variables_and_loop_5" -> "bb::<constant:Examples>#variables_and_loop_7";

    "bb::<constant:Examples>#variables_and_loop_6" [label = "(b)
outerLoops: 1
ifTemp$7 = false : FalseClass(false)
ifTemp$7"];
    "bb::<constant:Examples>#variables_and_loop_6" -> "bb::<constant:Examples>#variables_and_loop_8";
    "bb::<constant:Examples>#variables_and_loop_6" -> "bb::<constant:Examples>#variables_and_loop_9";

    "bb::<constant:Examples>#variables_and_loop_7" [label = "(b)
statTemp$4 = nil : NilClass
returnMethodTemp$8 = return b : <bottom>
<unconditional>"];
    "bb::<constant:Examples>#variables_and_loop_7" -> "bb::<constant:Examples>#variables_and_loop_1";
    "bb::<constant:Examples>#variables_and_loop_8" [label = "(b)
outerLoops: 1
b = 1 : untyped
<unconditional>"];
    "bb::<constant:Examples>#variables_and_loop_8" -> "bb::<constant:Examples>#variables_and_loop_10";
    "bb::<constant:Examples>#variables_and_loop_9" [label = "(b)
outerLoops: 1
b = 2 : untyped
<unconditional>"];
    "bb::<constant:Examples>#variables_and_loop_9" -> "bb::<constant:Examples>#variables_and_loop_10";
    "bb::<constant:Examples>#variables_and_loop_10" [label = "(b)
outerLoops: 1
<unconditional>"];
    "bb::<constant:Examples>#variables_and_loop_10" -> "bb::<constant:Examples>#variables_and_loop_5";
}

subgraph "cluster_::<constant:Examples>#variables_loop_if" {
    label = "::<constant:Examples>#variables_loop_if";
    color = blue;
    "bb::<constant:Examples>#variables_loop_if_0" [shape = invhouse];
    "bb::<constant:Examples>#variables_loop_if_1" [shape = parallelogram];

    "bb::<constant:Examples>#variables_loop_if_0" [label = "()
<unconditional>"];
    "bb::<constant:Examples>#variables_loop_if_0" -> "bb::<constant:Examples>#variables_loop_if_2";
    "bb::<constant:Examples>#variables_loop_if_1" [label = "()
<unconditional>"];
    "bb::<constant:Examples>#variables_loop_if_1" -> "bb::<constant:Examples>#variables_loop_if_1";
    "bb::<constant:Examples>#variables_loop_if_2" [label = "(b)
outerLoops: 1
whileTemp$3 = true : TrueClass(true)
whileTemp$3"];
    "bb::<constant:Examples>#variables_loop_if_2" -> "bb::<constant:Examples>#variables_loop_if_3";
    "bb::<constant:Examples>#variables_loop_if_2" -> "bb::<constant:Examples>#variables_loop_if_4";

    "bb::<constant:Examples>#variables_loop_if_3" [label = "(b)
outerLoops: 1
ifTemp$5 = false : FalseClass(false)
ifTemp$5"];
    "bb::<constant:Examples>#variables_loop_if_3" -> "bb::<constant:Examples>#variables_loop_if_5";
    "bb::<constant:Examples>#variables_loop_if_3" -> "bb::<constant:Examples>#variables_loop_if_6";

    "bb::<constant:Examples>#variables_loop_if_4" [label = "(b)
statTemp$2 = nil : NilClass
returnMethodTemp$6 = return b : <bottom>
<unconditional>"];
    "bb::<constant:Examples>#variables_loop_if_4" -> "bb::<constant:Examples>#variables_loop_if_1";
    "bb::<constant:Examples>#variables_loop_if_5" [label = "(b)
outerLoops: 1
b = 1 : untyped
<unconditional>"];
    "bb::<constant:Examples>#variables_loop_if_5" -> "bb::<constant:Examples>#variables_loop_if_7";
    "bb::<constant:Examples>#variables_loop_if_6" [label = "(b)
outerLoops: 1
b = 2 : untyped
<unconditional>"];
    "bb::<constant:Examples>#variables_loop_if_6" -> "bb::<constant:Examples>#variables_loop_if_7";
    "bb::<constant:Examples>#variables_loop_if_7" [label = "(b)
outerLoops: 1
<unconditional>"];
    "bb::<constant:Examples>#variables_loop_if_7" -> "bb::<constant:Examples>#variables_loop_if_2";
}

subgraph "cluster_::<constant:Examples>#take_arguments" {
    label = "::<constant:Examples>#take_arguments";
    color = blue;
    "bb::<constant:Examples>#take_arguments_0" [shape = invhouse];
    "bb::<constant:Examples>#take_arguments_1" [shape = parallelogram];

    "bb::<constant:Examples>#take_arguments_0" [label = "(i)
selfMethodTemp$1 = self : Examples
i = load_arg(selfMethodTemp$1#take_arguments, 0) : untyped
ifTemp$2 = false : FalseClass(false)
ifTemp$2"];
    "bb::<constant:Examples>#take_arguments_0" -> "bb::<constant:Examples>#take_arguments_2";
    "bb::<constant:Examples>#take_arguments_0" -> "bb::<constant:Examples>#take_arguments_3";

    "bb::<constant:Examples>#take_arguments_1" [label = "()
<unconditional>"];
    "bb::<constant:Examples>#take_arguments_1" -> "bb::<constant:Examples>#take_arguments_1";
    "bb::<constant:Examples>#take_arguments_2" [label = "(returnMethodTemp$9)
returnMethodTemp$9 = 2 : Integer(2)
<unconditional>"];
    "bb::<constant:Examples>#take_arguments_2" -> "bb::<constant:Examples>#take_arguments_4";
    "bb::<constant:Examples>#take_arguments_3" [label = "(i, returnMethodTemp$9)
returnMethodTemp$9 = i : untyped
<unconditional>"];
    "bb::<constant:Examples>#take_arguments_3" -> "bb::<constant:Examples>#take_arguments_4";
    "bb::<constant:Examples>#take_arguments_4" [label = "(returnMethodTemp$9)
returnMethodTemp$3 = return returnMethodTemp$9 : <bottom>
<unconditional>"];
    "bb::<constant:Examples>#take_arguments_4" -> "bb::<constant:Examples>#take_arguments_1";
}

}

