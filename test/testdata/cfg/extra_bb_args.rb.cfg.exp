digraph "extra_bb_args.rb" {
subgraph "cluster_::Object#main" {
    label = "::Object#main";
    color = blue;
    "bb::Object#main_0" [shape = invhouse];
    "bb::Object#main_1" [shape = parallelogram];

    "bb::Object#main_0" [
        label = "block[id=0]()\l<statTemp>$6 = alias <constant:RubyTyper> : <Class:RubyTyper>\l<statTemp>$8 = alias <constant:T> : <Class:T>\l<statTemp>$9 = alias <constant:String> : <Class:String>\l<statTemp>$7 = <statTemp>$8.nilable(<statTemp>$9) : T.untyped\l<statTemp>$5 = <statTemp>$6.keep_for_typechecking(<statTemp>$7) : T.untyped\l<castTemp>$10 = nil : NilClass\lname = cast(<castTemp>$10, String | NilClass); : String | NilClass\l<ifTemp>$12 = name.nil?() : TrueClass | FalseClass\l<ifTemp>$12\l"
    ];

    "bb::Object#main_0" -> "bb::Object#main_2" [style="bold"];
    "bb::Object#main_0" -> "bb::Object#main_3" [style="tapered"];

    "bb::Object#main_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Object#main_1" -> "bb::Object#main_1" [style="bold"];
    "bb::Object#main_2" [
        label = "block[id=2]()\l<returnTemp>$14 = \"missing name\" : String(\"missing name\")\l<statTemp>$11 = return <returnTemp>$14 : <impossible>\l<unconditional>\l"
    ];

    "bb::Object#main_2" -> "bb::Object#main_1" [style="bold"];
    "bb::Object#main_3" [
        label = "block[id=3](name)\l<statTemp>$16 = \"foo\" : String(\"foo\")\l<returnMethodTemp>$2 = name.include?(<statTemp>$16) : TrueClass | FalseClass\l<finalReturn> = return <returnMethodTemp>$2 : <impossible>\l<unconditional>\l"
    ];

    "bb::Object#main_3" -> "bb::Object#main_1" [style="bold"];
}

}

