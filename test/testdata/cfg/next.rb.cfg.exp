digraph "next.rb"{
subgraph "cluster_::Object#foo" {
    label = "::Object#foo";
    color = blue;
    "bb::Object#foo_0" [shape = invhouse];
    "bb::Object#foo_1" [shape = parallelogram];

    "bb::Object#foo_0" [label = "block[id=0]()
<constant:<Magic>>$7 = alias <constant:<Magic>> : <Magic>
<arrayTemp>$6 = 1 : Integer(1)
<statTemp>$5 = <constant:<Magic>>$7.<build-array>(<arrayTemp>$6) : TupleType {
  0 = Integer(1)
}
<returnMethodTemp>$3 = <statTemp>$5.map() : AppliedType {
  klass = ::Array
  targs = [
    <constant:Elem> = untyped
  ]
}
<unconditional>"];

    "bb::Object#foo_0" -> "bb::Object#foo_2" [style="bold"];
    "bb::Object#foo_1" [label = "block[id=1]()
<statTemp>$14 = self
<blockReturnTemp>$8 = <statTemp>$14.bad()
<unconditional>"];

    "bb::Object#foo_1" -> "bb::Object#foo_1" [style="bold"];
    "bb::Object#foo_2" [label = "block[id=2](<returnMethodTemp>$3)
outerLoops: 1
<block-call>"];

    "bb::Object#foo_2" -> "bb::Object#foo_4" [style="bold"];
    "bb::Object#foo_2" -> "bb::Object#foo_3" [style="tapered"];

    "bb::Object#foo_3" [label = "block[id=3](<returnMethodTemp>$3)
<finalReturn> = return <returnMethodTemp>$3 : <impossible>
<unconditional>"];

    "bb::Object#foo_3" -> "bb::Object#foo_1" [style="bold"];
    "bb::Object#foo_4" [label = "block[id=4](<returnMethodTemp>$3)
outerLoops: 1
x$2 = load_yield_param(::Object#foo#<block>, 0) : untyped
<statTemp>$10 = self : Object
<statTemp>$9 = <statTemp>$10.good() : untyped
<blockReturnTemp>$12 = x$2 : untyped
<blockReturnTemp>$13 = blockreturn<::Object#foo#<block>> <blockReturnTemp>$12 : <impossible>
<unconditional>"];

    "bb::Object#foo_4" -> "bb::Object#foo_2" [style="bold"];
}

}

