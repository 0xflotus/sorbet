digraph "next.rb"{
subgraph "cluster_::<constant:Object>#foo" {
    label = "::<constant:Object>#foo";
    color = blue;
    "bb::<constant:Object>#foo_0" [shape = invhouse];
    "bb::<constant:Object>#foo_1" [shape = parallelogram];

    "bb::<constant:Object>#foo_0" [label = "block[id=0](statTemp$5)
arrayTemp$6 = 1 : Integer(1)
arrayTemp$7 = alias <constant:<Magic>> : <Magic>
statTemp$5 = arrayTemp$7.<build-array>(arrayTemp$6) : TupleType {
  0 = Integer(1)
}
<unconditional>"];

    "bb::<constant:Object>#foo_0" -> "bb::<constant:Object>#foo_2" [style="bold"];
    "bb::<constant:Object>#foo_1" [label = "block[id=1]()
statTemp$13 = self
blockReturnTemp$8 = statTemp$13.bad()
<unconditional>"];

    "bb::<constant:Object>#foo_1" -> "bb::<constant:Object>#foo_1" [style="bold"];
    "bb::<constant:Object>#foo_2" [label = "block[id=2](statTemp$5)
outerLoops: 1
<block-call>"];

    "bb::<constant:Object>#foo_2" -> "bb::<constant:Object>#foo_4" [style="bold"];
    "bb::<constant:Object>#foo_2" -> "bb::<constant:Object>#foo_3" [style="tapered"];

    "bb::<constant:Object>#foo_3" [label = "block[id=3](statTemp$5)
returnMethodTemp$3 = statTemp$5.map() : Array
returnMethodTemp$14 = return returnMethodTemp$3 : <bottom>
<unconditional>"];

    "bb::<constant:Object>#foo_3" -> "bb::<constant:Object>#foo_1" [style="bold"];
    "bb::<constant:Object>#foo_4" [label = "block[id=4](statTemp$5)
outerLoops: 1
<block-nested: x> = load_arg(statTemp$5#map, 0) : Proc
statTemp$10 = self : Object
statTemp$9 = statTemp$10.good() : untyped
<unconditional>"];

    "bb::<constant:Object>#foo_4" -> "bb::<constant:Object>#foo_2" [style="bold"];
}

}

