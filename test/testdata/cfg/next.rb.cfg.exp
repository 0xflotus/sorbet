digraph "next.rb"{
subgraph "cluster_::<constant:Object>#foo" {
    label = "::<constant:Object>#foo";
    color = blue;
    "bb::<constant:Object>#foo_0" [shape = invhouse];
    "bb::<constant:Object>#foo_1" [shape = parallelogram];

    "bb::<constant:Object>#foo_0" [label = "block[id=0](statTemp$3)
arrayTemp$4 = 1 : Integer(1)
arrayTemp$5 = alias <constant:<Magic>> : <Magic>
statTemp$3 = arrayTemp$5.<build-array>(arrayTemp$4) : TupleType {
  0 = Integer(1)
}
<unconditional>"];

    "bb::<constant:Object>#foo_0" -> "bb::<constant:Object>#foo_2" [style="bold"];
    "bb::<constant:Object>#foo_1" [label = "block[id=1]()
statTemp$13 = self
blockReturnTemp$6 = statTemp$13.bad()
<unconditional>"];

    "bb::<constant:Object>#foo_1" -> "bb::<constant:Object>#foo_1" [style="bold"];
    "bb::<constant:Object>#foo_2" [label = "block[id=2](statTemp$3)
outerLoops: 1
<block-call>"];

    "bb::<constant:Object>#foo_2" -> "bb::<constant:Object>#foo_4" [style="bold"];
    "bb::<constant:Object>#foo_2" -> "bb::<constant:Object>#foo_3" [style="tapered"];

    "bb::<constant:Object>#foo_3" [label = "block[id=3](statTemp$3)
returnMethodTemp$1 = statTemp$3.map() : Array | Enumerator
returnMethodTemp$14 = return returnMethodTemp$1 : <bottom>
<unconditional>"];

    "bb::<constant:Object>#foo_3" -> "bb::<constant:Object>#foo_1" [style="bold"];
    "bb::<constant:Object>#foo_4" [label = "block[id=4](statTemp$3)
outerLoops: 1
<block-nested: x> = load_arg(statTemp$3#map, 0) : Proc
statTemp$8 = self : Object
statTemp$7 = statTemp$8.good() : untyped
statTemp$12 = 1 : Integer(1)
returnTemp$10 = <block-nested: x>.+(statTemp$12) : untyped
<unconditional>"];

    "bb::<constant:Object>#foo_4" -> "bb::<constant:Object>#foo_2" [style="bold"];
}

}

