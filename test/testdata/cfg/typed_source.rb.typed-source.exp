# typed: strict
# typed: strict
class Examples
  def i_like_ifs()
    if true
       # <ifTemp>$4: TrueClass
      return 1
      # dead=1
      # <returnTemp>$5: Integer(1)
      #
      # <returnMethodTemp>$2: <impossible>
    else
      return 2 # error: This code is unreachable
    end
  end

    def i_like_exps()
      # <returnMethodTemp>$2: Integer(1)
      if (true)
          # <ifTemp>$4: TrueClass
        1
        # <returnMethodTemp>$2: Integer(1)
      else
        2 # error: This code is unreachable
      end
      # dead=1
      # <returnMethodTemp>$2: Integer(1)
      #
      # <finalReturn>: <impossible>
    end

    def return_in_one_branch1()
      if (true)
          # <ifTemp>$4: TrueClass
        return 1
        # dead=1
        # <returnTemp>$5: Integer(1)
        #
        # <returnMethodTemp>$2: <impossible>
      else
        2 # error: This code is unreachable
      end
    end

    def variables()
      if (true)
          # <ifTemp>$5: TrueClass
        a = 1
            # a: Integer(1)
      else
        a = 2 # error: This code is unreachable
      end

          # a: Integer(1)
      if (false)
          # <ifTemp>$7: FalseClass
          #
          # a: Integer(1)
        b = 1 # error: This code is unreachable
      else
            # a: Integer(1)
        b = 2
            # b: Integer(2)
            #
            # a: Integer(1)
      end

      # b: Integer(2)
      #
      # a: Integer(1)
      a + b
      # dead=1
      # <returnMethodTemp>$2: Integer
      #
      # <finalReturn>: <impossible>
      #
      # b: Integer(2)
      #
      # a: Integer(1)
    end


    def variables_and_loop(cond)
      if (true)
          # <ifTemp>$5: TrueClass
          #
          # <selfMethodTemp>$3: Examples
          #
          # cond: T.untyped
            # cond: T.untyped
        a = 1
            # a: Integer(1)
            #
            # cond: T.untyped
      else
        a = 2 # error: This code is unreachable
      end

            # b: NilClass
            #
            # cond: T.untyped
            #   Being truthy entails:
            #     <debugEnvironmentTemp> to be NilClass
            #     a to be Integer(1)
            #   Being falsy entails:
            #     <debugEnvironmentTemp> to be NilClass
            #     a to be Integer(1)
      while true
            # <whileTemp>$7: TrueClass
            #
            # b: NilClass
            #
            # cond: T.untyped
            #   Being truthy entails:
            #     a to be Integer(1)
            #   Being falsy entails:
            #     a to be Integer(1)
        if (cond)
              # b: NilClass
              #
              # cond: T.untyped (and truthy)
              #
              #   Being truthy entails:
              #     a to be Integer(1)
              #   Being falsy entails:
              #     a to be Integer(1)
          b = 1 # error: Changing the type of a variable in a loop is not permitted
              # b: T.untyped
              #
              # cond: T.untyped (and truthy)
              #
              #   Being truthy entails:
              #     a to be Integer(1)
              #   Being falsy entails:
              #     a to be Integer(1)
        else
              # b: NilClass
              #
              # cond: NilClass | FalseClass
              #   Being truthy entails:
              #     a to be Integer(1)
              #   Being falsy entails:
              #     a to be Integer(1)
          b = 2 # error: Changing the type of a variable in a loop is not permitted
              # b: T.untyped
              #
              # cond: NilClass | FalseClass
              #   Being truthy entails:
              #     a to be Integer(1)
              #   Being falsy entails:
              #     a to be Integer(1)
        end
      end

      b # error: This code is unreachable
    end


    def variables_loop_if(cond)
                          # <selfMethodTemp>$3: Examples
                          #
                          # cond: T.untyped
            # b: NilClass
            #
            # cond: T.untyped
            #   Being truthy entails:
            #     <debugEnvironmentTemp> to be NilClass
            #     <selfMethodTemp>$3 to be Examples
            #   Being falsy entails:
            #     <debugEnvironmentTemp> to be NilClass
            #     <selfMethodTemp>$3 to be Examples
      while true
            # <whileTemp>$5: TrueClass
            #
            # b: NilClass
            #
            # cond: T.untyped
            #   Being truthy entails:
            #     <selfMethodTemp>$3 to be Examples
            #   Being falsy entails:
            #     <selfMethodTemp>$3 to be Examples
        if (cond)
              # b: NilClass
              #
              # cond: T.untyped (and truthy)
              #
              #   Being truthy entails:
              #     <selfMethodTemp>$3 to be Examples
              #   Being falsy entails:
              #     <selfMethodTemp>$3 to be Examples
          b = 1 # error: Changing the type of a variable in a loop is not permitted
              # b: T.untyped
              #
              # cond: T.untyped (and truthy)
              #
              #   Being truthy entails:
              #     <selfMethodTemp>$3 to be Examples
              #   Being falsy entails:
              #     <selfMethodTemp>$3 to be Examples
        else
              # b: NilClass
              #
              # cond: NilClass | FalseClass
              #   Being truthy entails:
              #     <selfMethodTemp>$3 to be Examples
              #   Being falsy entails:
              #     <selfMethodTemp>$3 to be Examples
          b = 2 # error: Changing the type of a variable in a loop is not permitted
              # b: T.untyped
              #
              # cond: NilClass | FalseClass
              #   Being truthy entails:
              #     <selfMethodTemp>$3 to be Examples
              #   Being falsy entails:
              #     <selfMethodTemp>$3 to be Examples
        end
      end

      b # error: This code is unreachable
    end

    def take_arguments(i)
      # <returnMethodTemp>$2: T.untyped
      if(false)
         # <ifTemp>$4: FalseClass
         #
         # <selfMethodTemp>$3: Examples
         #
         # i: T.untyped
       2 # error: This code is unreachable
      else
       # i: T.untyped
       i
       # <returnMethodTemp>$2: T.untyped
       #
       # i: T.untyped
      end
      # dead=1
      # <returnMethodTemp>$2: T.untyped
      #
      # <finalReturn>: <impossible>
    end

end
