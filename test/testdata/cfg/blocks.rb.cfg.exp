digraph "blocks.rb" {
subgraph "cluster_::BlockTest#block_pass" {
    label = "::BlockTest#block_pass";
    color = blue;
    "bb::BlockTest#block_pass_0" [shape = invhouse];
    "bb::BlockTest#block_pass_1" [shape = parallelogram];

    "bb::BlockTest#block_pass_0" [
        label = "block[id=0]()\l<statTemp>$5 = self : BlockTest\l<statTemp>$6 = 1 : Integer(1)\l<statTemp>$7 = 2 : Integer(2)\l<statTemp>$8 = 3 : Integer(3)\l<block-pre-call-temp>$9 = <statTemp>$5.foo(<statTemp>$6, <statTemp>$7, <statTemp>$8) : T.untyped\l<unconditional>\l"
    ];

    "bb::BlockTest#block_pass_0" -> "bb::BlockTest#block_pass_2" [style="bold"];
    "bb::BlockTest#block_pass_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::BlockTest#block_pass_1" -> "bb::BlockTest#block_pass_1" [style="bold"];
    "bb::BlockTest#block_pass_2" [
        label = "block[id=2]()\louterLoops: 1\l<block-call>\l"
    ];

    "bb::BlockTest#block_pass_2" -> "bb::BlockTest#block_pass_4" [style="bold"];
    "bb::BlockTest#block_pass_2" -> "bb::BlockTest#block_pass_3" [style="tapered"];

    "bb::BlockTest#block_pass_3" [
        label = "block[id=3]()\l<returnMethodTemp>$3 = Solve<::BlockTest#block_pass#<block>> : T.untyped\l<finalReturn> = return <returnMethodTemp>$3 : <impossible>\l<unconditional>\l"
    ];

    "bb::BlockTest#block_pass_3" -> "bb::BlockTest#block_pass_1" [style="bold"];
    "bb::BlockTest#block_pass_4" [
        label = "block[id=4]()\louterLoops: 1\lx$2 = load_yield_param(::BlockTest#block_pass#<block>, 0) : T.untyped\l<blockReturnTemp>$10 = x$2 : T.untyped\l<blockReturnTemp>$11 = blockreturn<::BlockTest#block_pass#<block>> <blockReturnTemp>$10 : <impossible>\l<unconditional>\l"
    ];

    "bb::BlockTest#block_pass_4" -> "bb::BlockTest#block_pass_2" [style="bold"];
}

}

