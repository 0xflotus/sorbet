digraph "break.rb" {
subgraph "cluster_::Object#foo" {
    label = "::Object#foo";
    color = blue;
    "bb::Object#foo_0" [shape = invhouse];
    "bb::Object#foo_1" [shape = parallelogram];

    "bb::Object#foo_0" [
        label = "block[id=0]()\l<U <arrayTemp>>$4: Integer(1) = 1\l<U <arrayTemp>>$5: Integer(2) = 2\l<U <magic>>$6: <Magic> = alias <C <U <Magic>>>\l<U <statTemp>>$3: [Integer(1), Integer(2)] = <U <magic>>$6: <Magic>.<U <build-array>>(<U <arrayTemp>>$4: Integer(1), <U <arrayTemp>>$5: Integer(2))\l<U <block-pre-call-temp>>$7: T::Array[U] = <U <statTemp>>$3: [Integer(1), Integer(2)].<U map>()\l<unconditional>\l"
    ];

    "bb::Object#foo_0" -> "bb::Object#foo_2" [style="bold"];
    "bb::Object#foo_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Object#foo_1" -> "bb::Object#foo_1" [style="bold"];
    "bb::Object#foo_2" [
        label = "block[id=2]()\louterLoops: 1\l<U <block-call>>: NilClass\l"
    ];

    "bb::Object#foo_2" -> "bb::Object#foo_4" [style="bold"];
    "bb::Object#foo_2" -> "bb::Object#foo_3" [style="tapered"];

    "bb::Object#foo_3" [
        label = "block[id=3]()\l<U <returnMethodTemp>>$2: T::Array[T.noreturn] = Solve<::Object#foo#<block>>\l<U <finalReturn>>: T.noreturn = return <U <returnMethodTemp>>$2: T::Array[T.noreturn]\l<unconditional>\l"
    ];

    "bb::Object#foo_3" -> "bb::Object#foo_1" [style="bold"];
    "bb::Object#foo_4" [
        label = "block[id=4]()\louterLoops: 1\l<U <blk>>$8: [Integer] = load_yield_params(::Object#foo#<block>, Object#foo#<block>)\l<U <blk>>$9: Integer(0) = 0\l<U x>$1: Integer = <U <blk>>$8: [Integer].<U []>(<U <blk>>$9: Integer(0))\l<unconditional>\l"
    ];

    "bb::Object#foo_4" -> "bb::Object#foo_3" [style="bold"];
}

subgraph "cluster_#<static-init>" {
    label = "#<static-init>";
    color = blue;
    "bb#<static-init>_0" [shape = invhouse];
    "bb#<static-init>_1" [shape = parallelogram];

    "bb#<static-init>_0" [
        label = "block[id=0]()\l<U <statTemp>>$3: T.class_of(<root>) = self\l<U <statTemp>>$5: T.class_of(<root>) = self\l<U <statTemp>>$4: T.untyped = <U <statTemp>>$5: T.class_of(<root>).<U foo>()\l<U <returnMethodTemp>>$2: NilClass = <U <statTemp>>$3: T.class_of(<root>).<U puts>(<U <statTemp>>$4: T.untyped)\l<U <finalReturn>>: T.noreturn = return <U <returnMethodTemp>>$2: NilClass\l<unconditional>\l"
    ];

    "bb#<static-init>_0" -> "bb#<static-init>_1" [style="bold"];
    "bb#<static-init>_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb#<static-init>_1" -> "bb#<static-init>_1" [style="bold"];
}

}

