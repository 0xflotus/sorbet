digraph "uaf1.rb" {
subgraph "cluster_::A#initialize" {
    label = "::A#initialize";
    color = blue;
    "bb::A#initialize_0" [shape = invhouse];
    "bb::A#initialize_1" [shape = parallelogram];

    "bb::A#initialize_0" [
        label = "block[id=0]()\l<statTemp>$5: A = self\l<statTemp>$4: T.untyped = <statTemp>$5: A.spec_list()\l<block-pre-call-temp>$6: T.untyped = <statTemp>$4: T.untyped.map()\l<unconditional>\l"
    ];

    "bb::A#initialize_0" -> "bb::A#initialize_2" [style="bold"];
    "bb::A#initialize_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::A#initialize_1" -> "bb::A#initialize_1" [style="bold"];
    "bb::A#initialize_2" [
        label = "block[id=2](<blockReturnTemp>$9: NilClass, <gotoDeadTemp>$14: NilClass)\louterLoops: 1\l<block-call>: NilClass\l"
    ];

    "bb::A#initialize_2" -> "bb::A#initialize_5" [style="bold"];
    "bb::A#initialize_2" -> "bb::A#initialize_3" [style="tapered"];

    "bb::A#initialize_3" [
        label = "block[id=3]()\l<returnMethodTemp>$2: T.untyped = Solve<::A#initialize#<block>>\l<finalReturn>: <impossible> = return <returnMethodTemp>$2: T.untyped\l<unconditional>\l"
    ];

    "bb::A#initialize_3" -> "bb::A#initialize_1" [style="bold"];
    "bb::A#initialize_5" [
        label = "block[id=5](<blockReturnTemp>$9: NilClass, <gotoDeadTemp>$14: NilClass)\louterLoops: 1\l<rescueStartTemp>$10: T.untyped = <unanalyzable>\l<rescueStartTemp>$10: T.untyped\l"
    ];

    "bb::A#initialize_5" -> "bb::A#initialize_6" [style="bold"];
    "bb::A#initialize_5" -> "bb::A#initialize_7" [style="tapered"];

    "bb::A#initialize_6" [
        label = "block[id=6](<blockReturnTemp>$9: T.nilable(Integer), <gotoDeadTemp>$14: NilClass)\louterLoops: 1\lse$2: T.untyped = <unanalyzable>\l<exceptionClassTemp>$12: <Class:StandardError> = alias <constant:StandardError>\l<isaCheckTemp>$13: T.untyped = se$2: T.untyped.is_a?(<exceptionClassTemp>$12: <Class:StandardError>)\l<isaCheckTemp>$13: T.untyped\l"
    ];

    "bb::A#initialize_6" -> "bb::A#initialize_11" [style="bold"];
    "bb::A#initialize_6" -> "bb::A#initialize_12" [style="tapered"];

    "bb::A#initialize_7" [
        label = "block[id=7](<gotoDeadTemp>$14: NilClass)\louterLoops: 1\l<blockReturnTemp>$9: Integer(1) = 1\l<rescueEndTemp>$11: T.untyped = <unanalyzable>\l<rescueEndTemp>$11: T.untyped\l"
    ];

    "bb::A#initialize_7" -> "bb::A#initialize_6" [style="bold"];
    "bb::A#initialize_7" -> "bb::A#initialize_9" [style="tapered"];

    "bb::A#initialize_9" [
        label = "block[id=9](<blockReturnTemp>$9: Integer(1), <gotoDeadTemp>$14: NilClass)\louterLoops: 1\l<gotoDeadTemp>$14: NilClass\l"
    ];

    "bb::A#initialize_9" -> "bb::A#initialize_1" [style="bold"];
    "bb::A#initialize_9" -> "bb::A#initialize_13" [style="tapered"];

    "bb::A#initialize_11" [
        label = "block[id=11](<gotoDeadTemp>$14: NilClass)\louterLoops: 1\l<blockReturnTemp>$9: Integer(2) = 2\l<gotoDeadTemp>$14: NilClass\l"
    ];

    "bb::A#initialize_11" -> "bb::A#initialize_1" [style="bold"];
    "bb::A#initialize_11" -> "bb::A#initialize_13" [style="tapered"];

    "bb::A#initialize_12" [
        label = "block[id=12](<blockReturnTemp>$9: T.nilable(Integer))\louterLoops: 1\l<gotoDeadTemp>$14: TrueClass(true) = true\l<gotoDeadTemp>$14: TrueClass(true)\l"
    ];

    "bb::A#initialize_12" -> "bb::A#initialize_1" [style="bold"];
    "bb::A#initialize_12" -> "bb::A#initialize_13" [style="tapered"];

    "bb::A#initialize_13" [
        label = "block[id=13](<blockReturnTemp>$9: Integer, <gotoDeadTemp>$14: NilClass)\louterLoops: 1\l<blockReturnTemp>$16: <impossible> = blockreturn<::A#initialize#<block>> <blockReturnTemp>$9: Integer\l<unconditional>\l"
    ];

    "bb::A#initialize_13" -> "bb::A#initialize_2" [style="bold"];
}

}

