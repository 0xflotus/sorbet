digraph "uaf1.rb" {
subgraph "cluster_::A#initialize" {
    label = "::A#initialize";
    color = blue;
    "bb::A#initialize_0" [shape = invhouse];
    "bb::A#initialize_1" [shape = parallelogram];

    "bb::A#initialize_0" [
        label = "block[id=0]()\l<statTemp>$5 = self : A\l<statTemp>$4 = <statTemp>$5.spec_list() : T.untyped\l<block-pre-call-temp>$6 = <statTemp>$4.map() : T.untyped\l<unconditional>\l"
    ];

    "bb::A#initialize_0" -> "bb::A#initialize_2" [style="bold"];
    "bb::A#initialize_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::A#initialize_1" -> "bb::A#initialize_1" [style="bold"];
    "bb::A#initialize_2" [
        label = "block[id=2](<blockReturnTemp>$9, <gotoDeadTemp>$14)\louterLoops: 1\l<block-call>\l"
    ];

    "bb::A#initialize_2" -> "bb::A#initialize_5" [style="bold"];
    "bb::A#initialize_2" -> "bb::A#initialize_3" [style="tapered"];

    "bb::A#initialize_3" [
        label = "block[id=3]()\l<returnMethodTemp>$2 = Solve<::A#initialize#<block>> : T.untyped\l<finalReturn> = return <returnMethodTemp>$2 : <impossible>\l<unconditional>\l"
    ];

    "bb::A#initialize_3" -> "bb::A#initialize_1" [style="bold"];
    "bb::A#initialize_5" [
        label = "block[id=5](<blockReturnTemp>$9, <gotoDeadTemp>$14)\louterLoops: 1\l<rescueStartTemp>$10 = <unanalyzable> : T.untyped\l<rescueStartTemp>$10\l"
    ];

    "bb::A#initialize_5" -> "bb::A#initialize_6" [style="bold"];
    "bb::A#initialize_5" -> "bb::A#initialize_7" [style="tapered"];

    "bb::A#initialize_6" [
        label = "block[id=6](<blockReturnTemp>$9, <gotoDeadTemp>$14)\louterLoops: 1\lse$2 = <unanalyzable> : T.untyped\l<exceptionClassTemp>$12 = alias <constant:StandardError> : <Class:StandardError>\l<isaCheckTemp>$13 = se$2.is_a?(<exceptionClassTemp>$12) : T.untyped\l<isaCheckTemp>$13\l"
    ];

    "bb::A#initialize_6" -> "bb::A#initialize_11" [style="bold"];
    "bb::A#initialize_6" -> "bb::A#initialize_12" [style="tapered"];

    "bb::A#initialize_7" [
        label = "block[id=7](<gotoDeadTemp>$14)\louterLoops: 1\l<blockReturnTemp>$9 = 1 : Integer(1)\l<rescueEndTemp>$11 = <unanalyzable> : T.untyped\l<rescueEndTemp>$11\l"
    ];

    "bb::A#initialize_7" -> "bb::A#initialize_6" [style="bold"];
    "bb::A#initialize_7" -> "bb::A#initialize_9" [style="tapered"];

    "bb::A#initialize_9" [
        label = "block[id=9](<blockReturnTemp>$9, <gotoDeadTemp>$14)\louterLoops: 1\l<gotoDeadTemp>$14\l"
    ];

    "bb::A#initialize_9" -> "bb::A#initialize_1" [style="bold"];
    "bb::A#initialize_9" -> "bb::A#initialize_13" [style="tapered"];

    "bb::A#initialize_11" [
        label = "block[id=11](<gotoDeadTemp>$14)\louterLoops: 1\l<blockReturnTemp>$9 = 2 : Integer(2)\l<gotoDeadTemp>$14\l"
    ];

    "bb::A#initialize_11" -> "bb::A#initialize_1" [style="bold"];
    "bb::A#initialize_11" -> "bb::A#initialize_13" [style="tapered"];

    "bb::A#initialize_12" [
        label = "block[id=12](<blockReturnTemp>$9)\louterLoops: 1\l<gotoDeadTemp>$14 = true : TrueClass(true)\l<gotoDeadTemp>$14\l"
    ];

    "bb::A#initialize_12" -> "bb::A#initialize_1" [style="bold"];
    "bb::A#initialize_12" -> "bb::A#initialize_13" [style="tapered"];

    "bb::A#initialize_13" [
        label = "block[id=13](<blockReturnTemp>$9, <gotoDeadTemp>$14)\louterLoops: 1\l<blockReturnTemp>$16 = blockreturn<::A#initialize#<block>> <blockReturnTemp>$9 : <impossible>\l<unconditional>\l"
    ];

    "bb::A#initialize_13" -> "bb::A#initialize_2" [style="bold"];
}

}

