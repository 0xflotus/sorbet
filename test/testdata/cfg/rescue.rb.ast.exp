class <emptyTree><<C <U <root>>>> < ()
  def <U main><<C <U <todo sym>>>>(&<U <blk>>)
    self(<C <U <todo sym>>>).<U a>()
  rescue => <D <U <rescueTemp>> $2>
    self(<C <U <todo sym>>>).<U b>()
  else
    self(<C <U <todo sym>>>).<U c>()
  ensure
    self(<C <U <todo sym>>>).<U d>()
  end

  def <U a><<C <U <todo sym>>>>(&<U <blk>>)
    <emptyTree>
  end

  def <U b><<C <U <todo sym>>>>(&<U <blk>>)
    <emptyTree>
  end

  def <U c><<C <U <todo sym>>>>(&<U <blk>>)
    <emptyTree>
  end

  def <U d><<C <U <todo sym>>>>(&<U <blk>>)
    <emptyTree>
  end

  self(<C <U <todo sym>>>).<U puts>(self(<C <U <todo sym>>>).<U foo>())
end
