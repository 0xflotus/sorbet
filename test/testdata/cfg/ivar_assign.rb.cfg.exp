digraph "ivar_assign.rb" {
subgraph "cluster_::TestIVar#initialize" {
    label = "::TestIVar#initialize";
    color = blue;
    "bb::TestIVar#initialize_0" [shape = invhouse];
    "bb::TestIVar#initialize_1" [shape = parallelogram];

    "bb::TestIVar#initialize_0" [
        label = "block[id=0]()\l@foo$4 = alias @foo : Integer\l<castTemp$5 = 0 : Integer(0)\l@foo$4 = cast(<castTemp$5, Integer); : Integer\l<returnMethodTemp>$2 = @foo$4 : Integer\l<finalReturn> = return <returnMethodTemp>$2 : <impossible>\l<unconditional>\l"
    ];

    "bb::TestIVar#initialize_0" -> "bb::TestIVar#initialize_1" [style="bold"];
    "bb::TestIVar#initialize_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::TestIVar#initialize_1" -> "bb::TestIVar#initialize_1" [style="bold"];
}

subgraph "cluster_::TestIVar#test" {
    label = "::TestIVar#test";
    color = blue;
    "bb::TestIVar#test_0" [shape = invhouse];
    "bb::TestIVar#test_1" [shape = parallelogram];

    "bb::TestIVar#test_0" [
        label = "block[id=0]()\l@foo$4 = alias @foo : Integer\l@foo$4 = nil : Integer\l<returnMethodTemp>$2 = @foo$4 : Integer\l<finalReturn> = return <returnMethodTemp>$2 : <impossible>\l<unconditional>\l"
    ];

    "bb::TestIVar#test_0" -> "bb::TestIVar#test_1" [style="bold"];
    "bb::TestIVar#test_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::TestIVar#test_1" -> "bb::TestIVar#test_1" [style="bold"];
}

}

