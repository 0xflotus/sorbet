class <C <U <root>>> < <C <U Object>> () @ (Loc {file=test/testdata/namer/module_function.rb start=2:1 end=33:4}, Loc {file=https://git.corp.stripe.com/stripe-internal/sorbet/tree/master/bazel-out/host/genfiles/rbi/procs.rbi start=1:1 end=252:4}, Loc {file=https://git.corp.stripe.com/stripe-internal/sorbet/tree/master/rbi/test_bootstrap.rbi start=1:1 end=3365:4})
  method <N <U <static-init>> $3> (<blk>) @ Loc {file=test/testdata/namer/module_function.rb start=2:1 end=33:4}
    argument <N <U <static-init>> $3><blk><block> @ Loc {file=test/testdata/namer/module_function.rb start=??? end=???}
  class <C <U C>> < <C <U Object>> (<C <U Funcs>>) @ Loc {file=test/testdata/namer/module_function.rb start=19:1 end=19:8}
    method <C <U C>><U test_calls> (<blk>) @ Loc {file=test/testdata/namer/module_function.rb start=22:3 end=22:17}
      argument <C <U C>><U test_calls><blk><block> @ Loc {file=test/testdata/namer/module_function.rb start=??? end=???}
  class <S <C <U C>> $1> < <S <C <U Object>> $1> () @ Loc {file=test/testdata/namer/module_function.rb start=19:7 end=19:8}
    method <S <C <U C>> $1><U <static-init>> (<blk>) @ Loc {file=test/testdata/namer/module_function.rb start=??? end=???}
      argument <S <C <U C>> $1><U <static-init>><blk><block> @ Loc {file=test/testdata/namer/module_function.rb start=??? end=???}
  class <C <U Funcs>> < <C <U RubyTyper>><C <U ImplicitModuleSuperclass>> () @ Loc {file=test/testdata/namer/module_function.rb start=2:1 end=2:13}
    method <C <U Funcs>><U f> (x, <blk>) -> Integer @ Loc {file=test/testdata/namer/module_function.rb start=6:3 end=6:11}
      argument <C <U Funcs>><U f>x<> -> Integer @ Loc {file=test/testdata/namer/module_function.rb start=5:15 end=5:16}
      argument <C <U Funcs>><U f><blk><block> -> T.untyped @ Loc {file=test/testdata/namer/module_function.rb start=??? end=???}
    method <C <U Funcs>><U g> (s, <blk>) -> Symbol @ Loc {file=test/testdata/namer/module_function.rb start=11:19 end=11:27}
      argument <C <U Funcs>><U g>s<> -> Symbol @ Loc {file=test/testdata/namer/module_function.rb start=10:15 end=10:16}
      argument <C <U Funcs>><U g><blk><block> -> T.untyped @ Loc {file=test/testdata/namer/module_function.rb start=??? end=???}
    method <C <U Funcs>><U h> (s, <blk>) -> String @ Loc {file=test/testdata/namer/module_function.rb start=16:3 end=16:11}
      argument <C <U Funcs>><U h>s<> -> String @ Loc {file=test/testdata/namer/module_function.rb start=15:15 end=15:16}
      argument <C <U Funcs>><U h><blk><block> -> T.untyped @ Loc {file=test/testdata/namer/module_function.rb start=??? end=???}
  class <S <C <U Funcs>> $1> < <C <U Module>> (<C <U Sig>>) @ Loc {file=test/testdata/namer/module_function.rb start=2:8 end=2:13}
    method <S <C <U Funcs>> $1><N <U <block>> $2> () @ Loc {file=test/testdata/namer/module_function.rb start=5:3 end=5:44}
    method <S <C <U Funcs>> $1><N <U <block>> $3> () @ Loc {file=test/testdata/namer/module_function.rb start=10:3 end=10:42}
    method <S <C <U Funcs>> $1><N <U <block>> $4> () @ Loc {file=test/testdata/namer/module_function.rb start=15:3 end=15:42}
    method <S <C <U Funcs>> $1><U <static-init>> (<blk>) @ Loc {file=test/testdata/namer/module_function.rb start=2:1 end=2:13}
      argument <S <C <U Funcs>> $1><U <static-init>><blk><block> @ Loc {file=test/testdata/namer/module_function.rb start=??? end=???}
    method <S <C <U Funcs>> $1><U f> () -> AliasType { symbol = <C <U Funcs>><U f> } @ Loc {file=test/testdata/namer/module_function.rb start=6:3 end=6:11}
    method <S <C <U Funcs>> $1><U g> () -> AliasType { symbol = <C <U Funcs>><U g> } @ Loc {file=test/testdata/namer/module_function.rb start=11:19 end=11:27}
    method <S <C <U Funcs>> $1><U h> () -> AliasType { symbol = <C <U Funcs>><U h> } @ Loc {file=test/testdata/namer/module_function.rb start=16:3 end=16:11}

