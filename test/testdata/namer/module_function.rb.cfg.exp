digraph "module_function.rb" {
subgraph "cluster_#<static-init>" {
    label = "#<static-init>";
    color = blue;
    "bb#<static-init>_0" [shape = invhouse];
    "bb#<static-init>_1" [shape = parallelogram];

    "bb#<static-init>_0" [
        label = "block[id=0]()\l<constant:RubyTyper>$7 = alias <constant:RubyTyper> : <Class:RubyTyper>\l<constant:Funcs>$9 = alias <constant:Funcs> : <Class:Funcs>\l<constant:C>$14 = alias <constant:C> : <Class:C>\l<statTemp>$5 = <constant:RubyTyper>$7.keep_for_ide(<constant:Funcs>$9) : T.untyped\l<statTemp>$11 = <constant:RubyTyper>$7.keep_for_ide(<constant:C>$14) : T.untyped\l<finalReturn> = return <returnMethodTemp>$2 : <impossible>\l<unconditional>\l"
    ];

    "bb#<static-init>_0" -> "bb#<static-init>_1" [style="bold"];
    "bb#<static-init>_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb#<static-init>_1" -> "bb#<static-init>_1" [style="bold"];
}

subgraph "cluster_::Funcs#f" {
    label = "::Funcs#f";
    color = blue;
    "bb::Funcs#f_0" [shape = invhouse];
    "bb::Funcs#f_1" [shape = parallelogram];

    "bb::Funcs#f_0" [
        label = "block[id=0]()\l<selfMethodTemp>$3 = self : Funcs\lx = load_arg(<selfMethodTemp>$3#f, 0) : Integer\l<returnMethodTemp>$2 = x : Integer\l<finalReturn> = return <returnMethodTemp>$2 : <impossible>\l<unconditional>\l"
    ];

    "bb::Funcs#f_0" -> "bb::Funcs#f_1" [style="bold"];
    "bb::Funcs#f_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Funcs#f_1" -> "bb::Funcs#f_1" [style="bold"];
}

subgraph "cluster_::Funcs#g" {
    label = "::Funcs#g";
    color = blue;
    "bb::Funcs#g_0" [shape = invhouse];
    "bb::Funcs#g_1" [shape = parallelogram];

    "bb::Funcs#g_0" [
        label = "block[id=0]()\l<selfMethodTemp>$3 = self : Funcs\ls = load_arg(<selfMethodTemp>$3#g, 0) : Symbol\l<returnMethodTemp>$2 = s : Symbol\l<finalReturn> = return <returnMethodTemp>$2 : <impossible>\l<unconditional>\l"
    ];

    "bb::Funcs#g_0" -> "bb::Funcs#g_1" [style="bold"];
    "bb::Funcs#g_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Funcs#g_1" -> "bb::Funcs#g_1" [style="bold"];
}

subgraph "cluster_::Funcs#h" {
    label = "::Funcs#h";
    color = blue;
    "bb::Funcs#h_0" [shape = invhouse];
    "bb::Funcs#h_1" [shape = parallelogram];

    "bb::Funcs#h_0" [
        label = "block[id=0]()\l<selfMethodTemp>$3 = self : Funcs\ls = load_arg(<selfMethodTemp>$3#h, 0) : String\l<returnMethodTemp>$2 = s : String\l<finalReturn> = return <returnMethodTemp>$2 : <impossible>\l<unconditional>\l"
    ];

    "bb::Funcs#h_0" -> "bb::Funcs#h_1" [style="bold"];
    "bb::Funcs#h_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Funcs#h_1" -> "bb::Funcs#h_1" [style="bold"];
}

subgraph "cluster_::Funcs#<static-init>" {
    label = "::Funcs#<static-init>";
    color = blue;
    "bb::Funcs#<static-init>_0" [shape = invhouse];
    "bb::Funcs#<static-init>_1" [shape = parallelogram];

    "bb::Funcs#<static-init>_0" [
        label = "block[id=0]()\l<constant:Integer>$10 = alias <constant:Integer> : <Class:Integer>\l<constant:String>$32 = alias <constant:String> : <Class:String>\l<constant:Symbol>$22 = alias <constant:Symbol> : <Class:Symbol>\l<constant:<Magic>>$11 = alias <constant:<Magic>> : <Magic>\l<statTemp>$6 = self : <Class:Funcs>\l<hashTemp>$8 = :\"x\" : Symbol(:\"x\")\l<statTemp>$7 = <constant:<Magic>>$11.<build-hash>(<hashTemp>$8, <constant:Integer>$10) : ShapeType {\l  Symbol(:\"x\") => <Class:Integer>\l}\l<statTemp>$5 = <statTemp>$6.sig(<statTemp>$7) : T.untyped\l<statTemp>$4 = <statTemp>$5.returns(<constant:Integer>$10) : T.untyped\l<statTemp>$14 = self : <Class:Funcs>\l<statTemp>$15 = :\"f\" : Symbol(:\"f\")\l<statTemp>$13 = <statTemp>$14.module_function(<statTemp>$15) : <Class:Funcs>\l<statTemp>$18 = self : <Class:Funcs>\l<hashTemp>$20 = :\"s\" : Symbol(:\"s\")\l<statTemp>$19 = <constant:<Magic>>$11.<build-hash>(<hashTemp>$20, <constant:Symbol>$22) : ShapeType {\l  Symbol(:\"s\") => <Class:Symbol>\l}\l<statTemp>$17 = <statTemp>$18.sig(<statTemp>$19) : T.untyped\l<statTemp>$16 = <statTemp>$17.returns(<constant:Symbol>$22) : T.untyped\l<statTemp>$25 = self : <Class:Funcs>\l<statTemp>$24 = <statTemp>$25.module_function() : <Class:Funcs>\l<statTemp>$28 = self : <Class:Funcs>\l<hashTemp>$30 = :\"s\" : Symbol(:\"s\")\l<statTemp>$29 = <constant:<Magic>>$11.<build-hash>(<hashTemp>$30, <constant:String>$32) : ShapeType {\l  Symbol(:\"s\") => <Class:String>\l}\l<statTemp>$27 = <statTemp>$28.sig(<statTemp>$29) : T.untyped\l<statTemp>$26 = <statTemp>$27.returns(<constant:String>$32) : T.untyped\l<finalReturn> = return <returnMethodTemp>$2 : <impossible>\l<unconditional>\l"
    ];

    "bb::Funcs#<static-init>_0" -> "bb::Funcs#<static-init>_1" [style="bold"];
    "bb::Funcs#<static-init>_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Funcs#<static-init>_1" -> "bb::Funcs#<static-init>_1" [style="bold"];
}

subgraph "cluster_::C#test_calls" {
    label = "::C#test_calls";
    color = blue;
    "bb::C#test_calls_0" [shape = invhouse];
    "bb::C#test_calls_1" [shape = parallelogram];

    "bb::C#test_calls_0" [
        label = "block[id=0]()\l<constant:Funcs>$9 = alias <constant:Funcs> : <Class:Funcs>\l<constant:C>$24 = alias <constant:C> : <Class:C>\l<statTemp>$5 = self : C\l<statTemp>$6 = 0 : Integer(0)\l<statTemp>$4 = <statTemp>$5.f(<statTemp>$6) : Integer\l<statTemp>$10 = 0 : Integer(0)\l<statTemp>$7 = <constant:Funcs>$9.f(<statTemp>$10) : Integer\l<statTemp>$12 = self : C\l<statTemp>$13 = :\"f\" : Symbol(:\"f\")\l<statTemp>$11 = <statTemp>$12.g(<statTemp>$13) : Symbol\l<statTemp>$16 = :\"f\" : Symbol(:\"f\")\l<statTemp>$14 = <constant:Funcs>$9.g(<statTemp>$16) : Symbol\l<statTemp>$18 = self : C\l<statTemp>$19 = \"hello\" : String(\"hello\")\l<statTemp>$17 = <statTemp>$18.h(<statTemp>$19) : String\l<statTemp>$22 = \"world\" : String(\"world\")\l<statTemp>$20 = <constant:Funcs>$9.h(<statTemp>$22) : String\l<returnMethodTemp>$2 = <constant:C>$24.f() : T.untyped\l<finalReturn> = return <returnMethodTemp>$2 : <impossible>\l<unconditional>\l"
    ];

    "bb::C#test_calls_0" -> "bb::C#test_calls_1" [style="bold"];
    "bb::C#test_calls_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::C#test_calls_1" -> "bb::C#test_calls_1" [style="bold"];
}

subgraph "cluster_::C#<static-init>" {
    label = "::C#<static-init>";
    color = blue;
    "bb::C#<static-init>_0" [shape = invhouse];
    "bb::C#<static-init>_1" [shape = parallelogram];

    "bb::C#<static-init>_0" [
        label = "block[id=0]()\l<constant:RubyTyper>$5 = alias <constant:RubyTyper> : <Class:RubyTyper>\l<constant:Funcs>$7 = alias <constant:Funcs> : <Class:Funcs>\l<returnMethodTemp>$2 = <constant:RubyTyper>$5.keep_for_ide(<constant:Funcs>$7) : T.untyped\l<finalReturn> = return <returnMethodTemp>$2 : <impossible>\l<unconditional>\l"
    ];

    "bb::C#<static-init>_0" -> "bb::C#<static-init>_1" [style="bold"];
    "bb::C#<static-init>_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::C#<static-init>_1" -> "bb::C#<static-init>_1" [style="bold"];
}

}

