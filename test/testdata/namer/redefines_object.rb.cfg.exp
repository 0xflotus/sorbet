digraph "redefines_object.rb" {
subgraph "cluster_#<static-init>" {
    label = "#<static-init>";
    color = blue;
    "bb#<static-init>_0" [shape = invhouse];
    "bb#<static-init>_1" [shape = parallelogram];

    "bb#<static-init>_0" [
        label = "block[id=0]()\l<statTemp>$6: <Class:RubyTyper> = alias <constant:RubyTyper>\l<statTemp>$7: <Class:Object> = alias <constant:Object>\l<statTemp>$5: RubyTyper::Void = <statTemp>$6: <Class:RubyTyper>.keep_for_ide(<statTemp>$7: <Class:Object>)\l<statTemp>$10: <Class:RubyTyper> = alias <constant:RubyTyper>\l<statTemp>$11: <Class:Trigger> = alias <constant:Trigger>\l<statTemp>$9: RubyTyper::Void = <statTemp>$10: <Class:RubyTyper>.keep_for_ide(<statTemp>$11: <Class:Trigger>)\l<statTemp>$14: <Class:RubyTyper> = alias <constant:RubyTyper>\l<statTemp>$15: <Class:Foo> = alias <constant:Foo>\l<statTemp>$13: RubyTyper::Void = <statTemp>$14: <Class:RubyTyper>.keep_for_ide(<statTemp>$15: <Class:Foo>)\l<statTemp>$17: <Class:RubyTyper> = alias <constant:RubyTyper>\l<statTemp>$18: <Class:Bar> = alias <constant:Bar>\l<statTemp>$16: RubyTyper::Void = <statTemp>$17: <Class:RubyTyper>.keep_for_ide(<statTemp>$18: <Class:Bar>)\l<statTemp>$21: <Class:RubyTyper> = alias <constant:RubyTyper>\l<statTemp>$22: <Class:Bar> = alias <constant:Bar>\l<statTemp>$20: RubyTyper::Void = <statTemp>$21: <Class:RubyTyper>.keep_for_ide(<statTemp>$22: <Class:Bar>)\l<statTemp>$24: <Class:RubyTyper> = alias <constant:RubyTyper>\l<statTemp>$25: <Class:Foo> = alias <constant:Foo>\l<statTemp>$23: RubyTyper::Void = <statTemp>$24: <Class:RubyTyper>.keep_for_ide(<statTemp>$25: <Class:Foo>)\l<finalReturn>: <impossible> = return <returnMethodTemp>$2: NilClass\l<unconditional>\l"
    ];

    "bb#<static-init>_0" -> "bb#<static-init>_1" [style="bold"];
    "bb#<static-init>_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb#<static-init>_1" -> "bb#<static-init>_1" [style="bold"];
}

subgraph "cluster_::Trigger#trigger" {
    label = "::Trigger#trigger";
    color = blue;
    "bb::Trigger#trigger_0" [shape = invhouse];
    "bb::Trigger#trigger_1" [shape = parallelogram];

    "bb::Trigger#trigger_0" [
        label = "block[id=0]()\l@__fake_logger$4: T.untyped = alias @__fake_logger\l<returnMethodTemp>$2: T.untyped = @__fake_logger$4\l<finalReturn>: <impossible> = return <returnMethodTemp>$2: T.untyped\l<unconditional>\l"
    ];

    "bb::Trigger#trigger_0" -> "bb::Trigger#trigger_1" [style="bold"];
    "bb::Trigger#trigger_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Trigger#trigger_1" -> "bb::Trigger#trigger_1" [style="bold"];
}

}

