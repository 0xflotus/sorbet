digraph "yield.rb"{
subgraph "cluster_::<constant:Main>#yielder" {
    label = "::<constant:Main>#yielder";
    color = blue;
    "bb::<constant:Main>#yielder_0" [shape = invhouse];
    "bb::<constant:Main>#yielder_1" [shape = parallelogram];

    "bb::<constant:Main>#yielder_0" [label = "block[id=0]()
selfMethodTemp$2 = self : Main
<blk> = load_arg(selfMethodTemp$2#yielder, 0) : untyped
statTemp$5 = 1 : Integer(1)
a = <blk>.call(statTemp$5) : untyped
returnMethodTemp$1 = <blk>.call(a) : untyped
returnMethodTemp$8 = return returnMethodTemp$1 : <bottom>
<unconditional>"];

    "bb::<constant:Main>#yielder_0" -> "bb::<constant:Main>#yielder_1" [style="bold"];
    "bb::<constant:Main>#yielder_1" [label = "block[id=1]()
<unconditional>"];

    "bb::<constant:Main>#yielder_1" -> "bb::<constant:Main>#yielder_1" [style="bold"];
}

subgraph "cluster_::<constant:Main>#blockpass" {
    label = "::<constant:Main>#blockpass";
    color = blue;
    "bb::<constant:Main>#blockpass_0" [shape = invhouse];
    "bb::<constant:Main>#blockpass_1" [shape = parallelogram];

    "bb::<constant:Main>#blockpass_0" [label = "block[id=0]()
selfMethodTemp$2 = self : Main
blk = load_arg(selfMethodTemp$2#blockpass, 0) : untyped
statTemp$5 = 1 : Integer(1)
a = blk.call(statTemp$5) : untyped
returnMethodTemp$1 = blk.call(a) : untyped
returnMethodTemp$8 = return returnMethodTemp$1 : <bottom>
<unconditional>"];

    "bb::<constant:Main>#blockpass_0" -> "bb::<constant:Main>#blockpass_1" [style="bold"];
    "bb::<constant:Main>#blockpass_1" [label = "block[id=1]()
<unconditional>"];

    "bb::<constant:Main>#blockpass_1" -> "bb::<constant:Main>#blockpass_1" [style="bold"];
}

subgraph "cluster_::<constant:Main>#mixed" {
    label = "::<constant:Main>#mixed";
    color = blue;
    "bb::<constant:Main>#mixed_0" [shape = invhouse];
    "bb::<constant:Main>#mixed_1" [shape = parallelogram];

    "bb::<constant:Main>#mixed_0" [label = "block[id=0]()
selfMethodTemp$2 = self : Main
blk = load_arg(selfMethodTemp$2#mixed, 0) : untyped
statTemp$5 = 1 : Integer(1)
a = blk.call(statTemp$5) : untyped
returnMethodTemp$1 = blk.call(a) : untyped
returnMethodTemp$8 = return returnMethodTemp$1 : <bottom>
<unconditional>"];

    "bb::<constant:Main>#mixed_0" -> "bb::<constant:Main>#mixed_1" [style="bold"];
    "bb::<constant:Main>#mixed_1" [label = "block[id=1]()
<unconditional>"];

    "bb::<constant:Main>#mixed_1" -> "bb::<constant:Main>#mixed_1" [style="bold"];
}

subgraph "cluster_::<constant:Main>#blockyield" {
    label = "::<constant:Main>#blockyield";
    color = blue;
    "bb::<constant:Main>#blockyield_0" [shape = invhouse];
    "bb::<constant:Main>#blockyield_1" [shape = parallelogram];

    "bb::<constant:Main>#blockyield_0" [label = "block[id=0](statTemp$3)
statTemp$3 = self : Main
<unconditional>"];

    "bb::<constant:Main>#blockyield_0" -> "bb::<constant:Main>#blockyield_2" [style="bold"];
    "bb::<constant:Main>#blockyield_1" [label = "block[id=1]()
<unconditional>"];

    "bb::<constant:Main>#blockyield_1" -> "bb::<constant:Main>#blockyield_1" [style="bold"];
    "bb::<constant:Main>#blockyield_2" [label = "block[id=2](statTemp$3)
outerLoops: 1
<block-call>"];

    "bb::<constant:Main>#blockyield_2" -> "bb::<constant:Main>#blockyield_4" [style="bold"];
    "bb::<constant:Main>#blockyield_2" -> "bb::<constant:Main>#blockyield_3" [style="tapered"];

    "bb::<constant:Main>#blockyield_3" [label = "block[id=3](statTemp$3)
returnMethodTemp$1 = statTemp$3.yielder() : untyped
returnMethodTemp$7 = return returnMethodTemp$1 : <bottom>
<unconditional>"];

    "bb::<constant:Main>#blockyield_3" -> "bb::<constant:Main>#blockyield_1" [style="bold"];
    "bb::<constant:Main>#blockyield_4" [label = "block[id=4](statTemp$3)
outerLoops: 1
<block-nested: i> = load_arg(statTemp$3#yielder, 0) : untyped
<block-nested: <blk>> = load_arg(statTemp$3#yielder, 1) : untyped
blockReturnTemp$4 = <block-nested: <blk>>.call(<block-nested: i>) : untyped
<unconditional>"];

    "bb::<constant:Main>#blockyield_4" -> "bb::<constant:Main>#blockyield_2" [style="bold"];
}

subgraph "cluster_::<constant:Main>#main" {
    label = "::<constant:Main>#main";
    color = blue;
    "bb::<constant:Main>#main_0" [shape = invhouse];
    "bb::<constant:Main>#main_1" [shape = parallelogram];

    "bb::<constant:Main>#main_0" [label = "block[id=0](statTemp$4, <constant:<Magic>>$16)
<constant:<Magic>>$16 = alias <constant:<Magic>> : <Magic>
statTemp$4 = self : Main
<unconditional>"];

    "bb::<constant:Main>#main_0" -> "bb::<constant:Main>#main_2" [style="bold"];
    "bb::<constant:Main>#main_1" [label = "block[id=1]()
<unconditional>"];

    "bb::<constant:Main>#main_1" -> "bb::<constant:Main>#main_1" [style="bold"];
    "bb::<constant:Main>#main_2" [label = "block[id=2](statTemp$4, <constant:<Magic>>$16)
outerLoops: 1
<block-call>"];

    "bb::<constant:Main>#main_2" -> "bb::<constant:Main>#main_4" [style="bold"];
    "bb::<constant:Main>#main_2" -> "bb::<constant:Main>#main_3" [style="tapered"];

    "bb::<constant:Main>#main_3" [label = "block[id=3](l, statTemp$4, statTemp$10, <constant:<Magic>>$16)
l = statTemp$4.lambda() : untyped
statTemp$10 = self : Main
<unconditional>"];

    "bb::<constant:Main>#main_3" -> "bb::<constant:Main>#main_5" [style="bold"];
    "bb::<constant:Main>#main_4" [label = "block[id=4](statTemp$4, <constant:<Magic>>$16)
outerLoops: 1
<block-nested: x> = load_arg(statTemp$4#lambda, 0) : untyped
statTemp$7 = self : Main
statTemp$6 = statTemp$7.puts(<block-nested: x>) : NilClass
<unconditional>"];

    "bb::<constant:Main>#main_4" -> "bb::<constant:Main>#main_2" [style="bold"];
    "bb::<constant:Main>#main_5" [label = "block[id=5](l, statTemp$10, <constant:<Magic>>$16)
outerLoops: 1
<block-call>"];

    "bb::<constant:Main>#main_5" -> "bb::<constant:Main>#main_7" [style="bold"];
    "bb::<constant:Main>#main_5" -> "bb::<constant:Main>#main_6" [style="tapered"];

    "bb::<constant:Main>#main_6" [label = "block[id=6](l, statTemp$10, <constant:<Magic>>$16, statTemp$20)
statTemp$9 = statTemp$10.yielder() : untyped
statTemp$20 = self : Main
<unconditional>"];

    "bb::<constant:Main>#main_6" -> "bb::<constant:Main>#main_8" [style="bold"];
    "bb::<constant:Main>#main_7" [label = "block[id=7](l, statTemp$10, <constant:<Magic>>$16)
outerLoops: 1
<block-nested: <block-pass>$10000> = load_arg(statTemp$10#yielder, 0) : untyped
statTemp$12 = l.to_proc() : untyped
statTemp$17 = <block-nested: <block-pass>$10000>.to_a() : untyped
statTemp$14 = <constant:<Magic>>$16.<splat>(statTemp$17) : untyped
blockReturnTemp$11 = statTemp$12.call(statTemp$14) : untyped
<unconditional>"];

    "bb::<constant:Main>#main_7" -> "bb::<constant:Main>#main_5" [style="bold"];
    "bb::<constant:Main>#main_8" [label = "block[id=8](l, <constant:<Magic>>$16, statTemp$20)
outerLoops: 1
<block-call>"];

    "bb::<constant:Main>#main_8" -> "bb::<constant:Main>#main_10" [style="bold"];
    "bb::<constant:Main>#main_8" -> "bb::<constant:Main>#main_9" [style="tapered"];

    "bb::<constant:Main>#main_9" [label = "block[id=9](l, <constant:<Magic>>$16, statTemp$20, statTemp$29)
statTemp$19 = statTemp$20.blockpass() : untyped
statTemp$29 = self : Main
<unconditional>"];

    "bb::<constant:Main>#main_9" -> "bb::<constant:Main>#main_11" [style="bold"];
    "bb::<constant:Main>#main_10" [label = "block[id=10](l, <constant:<Magic>>$16, statTemp$20)
outerLoops: 1
<block-nested: <block-pass>$10001> = load_arg(statTemp$20#blockpass, 0) : untyped
statTemp$22 = l.to_proc() : untyped
statTemp$26 = <block-nested: <block-pass>$10001>.to_a() : untyped
statTemp$24 = <constant:<Magic>>$16.<splat>(statTemp$26) : untyped
blockReturnTemp$21 = statTemp$22.call(statTemp$24) : untyped
<unconditional>"];

    "bb::<constant:Main>#main_10" -> "bb::<constant:Main>#main_8" [style="bold"];
    "bb::<constant:Main>#main_11" [label = "block[id=11](l, <constant:<Magic>>$16, statTemp$29)
outerLoops: 1
<block-call>"];

    "bb::<constant:Main>#main_11" -> "bb::<constant:Main>#main_13" [style="bold"];
    "bb::<constant:Main>#main_11" -> "bb::<constant:Main>#main_12" [style="tapered"];

    "bb::<constant:Main>#main_12" [label = "block[id=12](l, <constant:<Magic>>$16, statTemp$29, statTemp$37)
statTemp$28 = statTemp$29.mixed() : untyped
statTemp$37 = self : Main
<unconditional>"];

    "bb::<constant:Main>#main_12" -> "bb::<constant:Main>#main_14" [style="bold"];
    "bb::<constant:Main>#main_13" [label = "block[id=13](l, <constant:<Magic>>$16, statTemp$29)
outerLoops: 1
<block-nested: <block-pass>$10002> = load_arg(statTemp$29#mixed, 0) : untyped
statTemp$31 = l.to_proc() : untyped
statTemp$35 = <block-nested: <block-pass>$10002>.to_a() : untyped
statTemp$33 = <constant:<Magic>>$16.<splat>(statTemp$35) : untyped
blockReturnTemp$30 = statTemp$31.call(statTemp$33) : untyped
<unconditional>"];

    "bb::<constant:Main>#main_13" -> "bb::<constant:Main>#main_11" [style="bold"];
    "bb::<constant:Main>#main_14" [label = "block[id=14](l, <constant:<Magic>>$16, statTemp$37)
outerLoops: 1
<block-call>"];

    "bb::<constant:Main>#main_14" -> "bb::<constant:Main>#main_16" [style="bold"];
    "bb::<constant:Main>#main_14" -> "bb::<constant:Main>#main_15" [style="tapered"];

    "bb::<constant:Main>#main_15" [label = "block[id=15](statTemp$37)
returnMethodTemp$1 = statTemp$37.blockyield() : untyped
returnMethodTemp$45 = return returnMethodTemp$1 : <bottom>
<unconditional>"];

    "bb::<constant:Main>#main_15" -> "bb::<constant:Main>#main_1" [style="bold"];
    "bb::<constant:Main>#main_16" [label = "block[id=16](l, <constant:<Magic>>$16, statTemp$37)
outerLoops: 1
<block-nested: <block-pass>$10003> = load_arg(statTemp$37#blockyield, 0) : untyped
statTemp$39 = l.to_proc() : untyped
statTemp$43 = <block-nested: <block-pass>$10003>.to_a() : untyped
statTemp$41 = <constant:<Magic>>$16.<splat>(statTemp$43) : untyped
blockReturnTemp$38 = statTemp$39.call(statTemp$41) : untyped
<unconditional>"];

    "bb::<constant:Main>#main_16" -> "bb::<constant:Main>#main_14" [style="bold"];
}

}

