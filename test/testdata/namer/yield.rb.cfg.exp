digraph "yield.rb" {
subgraph "cluster_#<static-init>" {
    label = "#<static-init>";
    color = blue;
    "bb#<static-init>_0" [shape = invhouse];
    "bb#<static-init>_1" [shape = parallelogram];

    "bb#<static-init>_0" [
        label = "block[id=0]()\l<statTemp>$5: T.class_of(RubyTyper) = alias <constant:RubyTyper>\l<statTemp>$6: T.class_of(Main) = alias <constant:Main>\l<statTemp>$4: RubyTyper::Void = <statTemp>$5: T.class_of(RubyTyper).keep_for_ide(<statTemp>$6: T.class_of(Main))\l<statTemp>$9: T.class_of(Main) = alias <constant:Main>\l<statTemp>$8: Main = <statTemp>$9: T.class_of(Main).new()\l<statTemp>$7: T.untyped = <statTemp>$8: Main.main()\l<finalReturn>: T.noreturn = return <returnMethodTemp>$2: NilClass\l<unconditional>\l"
    ];

    "bb#<static-init>_0" -> "bb#<static-init>_1" [style="bold"];
    "bb#<static-init>_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb#<static-init>_1" -> "bb#<static-init>_1" [style="bold"];
}

subgraph "cluster_::Main#yielder" {
    label = "::Main#yielder";
    color = blue;
    "bb::Main#yielder_0" [shape = invhouse];
    "bb::Main#yielder_1" [shape = parallelogram];

    "bb::Main#yielder_0" [
        label = "block[id=0]()\l<blk>: T.untyped = load_arg(Main#yielder#<blk>)\l<statTemp>$5: Integer(1) = 1\la: T.untyped = <blk>: T.untyped.call(<statTemp>$5: Integer(1))\l<returnMethodTemp>$2: T.untyped = <blk>: T.untyped.call(a: T.untyped)\l<finalReturn>: T.noreturn = return <returnMethodTemp>$2: T.untyped\l<unconditional>\l"
    ];

    "bb::Main#yielder_0" -> "bb::Main#yielder_1" [style="bold"];
    "bb::Main#yielder_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Main#yielder_1" -> "bb::Main#yielder_1" [style="bold"];
}

subgraph "cluster_::Main#blockpass" {
    label = "::Main#blockpass";
    color = blue;
    "bb::Main#blockpass_0" [shape = invhouse];
    "bb::Main#blockpass_1" [shape = parallelogram];

    "bb::Main#blockpass_0" [
        label = "block[id=0]()\lblk: T.untyped = load_arg(Main#blockpass#&blk)\l<statTemp>$5: Integer(1) = 1\la: T.untyped = blk: T.untyped.call(<statTemp>$5: Integer(1))\l<returnMethodTemp>$2: T.untyped = blk: T.untyped.call(a: T.untyped)\l<finalReturn>: T.noreturn = return <returnMethodTemp>$2: T.untyped\l<unconditional>\l"
    ];

    "bb::Main#blockpass_0" -> "bb::Main#blockpass_1" [style="bold"];
    "bb::Main#blockpass_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Main#blockpass_1" -> "bb::Main#blockpass_1" [style="bold"];
}

subgraph "cluster_::Main#mixed" {
    label = "::Main#mixed";
    color = blue;
    "bb::Main#mixed_0" [shape = invhouse];
    "bb::Main#mixed_1" [shape = parallelogram];

    "bb::Main#mixed_0" [
        label = "block[id=0]()\lblk: T.untyped = load_arg(Main#mixed#&blk)\l<statTemp>$5: Integer(1) = 1\la: T.untyped = blk: T.untyped.call(<statTemp>$5: Integer(1))\l<returnMethodTemp>$2: T.untyped = blk: T.untyped.call(a: T.untyped)\l<finalReturn>: T.noreturn = return <returnMethodTemp>$2: T.untyped\l<unconditional>\l"
    ];

    "bb::Main#mixed_0" -> "bb::Main#mixed_1" [style="bold"];
    "bb::Main#mixed_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Main#mixed_1" -> "bb::Main#mixed_1" [style="bold"];
}

subgraph "cluster_::Main#blockyield" {
    label = "::Main#blockyield";
    color = blue;
    "bb::Main#blockyield_0" [shape = invhouse];
    "bb::Main#blockyield_1" [shape = parallelogram];

    "bb::Main#blockyield_0" [
        label = "block[id=0]()\l<blk>: T.untyped = load_arg(Main#blockyield#<blk>)\l<statTemp>$3: Main = self\l<block-pre-call-temp>$4: T.untyped = <statTemp>$3: Main.yielder()\l<unconditional>\l"
    ];

    "bb::Main#blockyield_0" -> "bb::Main#blockyield_2" [style="bold"];
    "bb::Main#blockyield_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Main#blockyield_1" -> "bb::Main#blockyield_1" [style="bold"];
    "bb::Main#blockyield_2" [
        label = "block[id=2](<blk>: T.untyped)\louterLoops: 1\l<block-call>: NilClass\l"
    ];

    "bb::Main#blockyield_2" -> "bb::Main#blockyield_4" [style="bold"];
    "bb::Main#blockyield_2" -> "bb::Main#blockyield_3" [style="tapered"];

    "bb::Main#blockyield_3" [
        label = "block[id=3]()\l<returnMethodTemp>$2: T.untyped = Solve<::Main#blockyield#<block>>\l<finalReturn>: T.noreturn = return <returnMethodTemp>$2: T.untyped\l<unconditional>\l"
    ];

    "bb::Main#blockyield_3" -> "bb::Main#blockyield_1" [style="bold"];
    "bb::Main#blockyield_4" [
        label = "block[id=4](<blk>: T.untyped)\louterLoops: 1\l<blk>$5: T.untyped = load_yield_params(::Main#blockyield#<block>, Main#blockyield#<block>)\l<blk>$6: Integer(0) = 0\li$5: T.untyped = <blk>$5: T.untyped.[](<blk>$6: Integer(0))\l<blockReturnTemp>$7: T.untyped = <blk>: T.untyped.call(i$5: T.untyped)\l<blockReturnTemp>$10: T.noreturn = blockreturn<::Main#blockyield#<block>> <blockReturnTemp>$7: T.untyped\l<unconditional>\l"
    ];

    "bb::Main#blockyield_4" -> "bb::Main#blockyield_2" [style="bold"];
}

subgraph "cluster_::Main#main" {
    label = "::Main#main";
    color = blue;
    "bb::Main#main_0" [shape = invhouse];
    "bb::Main#main_1" [shape = parallelogram];

    "bb::Main#main_0" [
        label = "block[id=0]()\l<statTemp>$4: Main = self\l<block-pre-call-temp>$5: T.proc.params(arg0: T.untyped).returns(T.untyped) = <statTemp>$4: Main.lambda()\l<unconditional>\l"
    ];

    "bb::Main#main_0" -> "bb::Main#main_2" [style="bold"];
    "bb::Main#main_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Main#main_1" -> "bb::Main#main_1" [style="bold"];
    "bb::Main#main_2" [
        label = "block[id=2]()\louterLoops: 1\l<block-call>: NilClass\l"
    ];

    "bb::Main#main_2" -> "bb::Main#main_4" [style="bold"];
    "bb::Main#main_2" -> "bb::Main#main_3" [style="tapered"];

    "bb::Main#main_3" [
        label = "block[id=3]()\ll: T.proc.params(arg0: T.untyped).returns(T.untyped) = Solve<::Main#main#<block>>\l<statTemp>$14: Main = self\l<block-pre-call-temp>$15: T.untyped = <statTemp>$14: Main.yielder()\l<unconditional>\l"
    ];

    "bb::Main#main_3" -> "bb::Main#main_5" [style="bold"];
    "bb::Main#main_4" [
        label = "block[id=4]()\louterLoops: 1\l<blk>$6: T.untyped = load_yield_params(::Main#main#<block>, Main#main#<block>)\l<blk>$7: Integer(0) = 0\lx$7: T.untyped = <blk>$6: T.untyped.[](<blk>$7: Integer(0))\l<statTemp>$10: Main = self\l<statTemp>$9: NilClass = <statTemp>$10: Main.puts(x$7: T.untyped)\l<blockReturnTemp>$8: Integer(3) = 3\l<blockReturnTemp>$12: T.noreturn = blockreturn<::Main#main#<block>> <blockReturnTemp>$8: Integer(3)\l<unconditional>\l"
    ];

    "bb::Main#main_4" -> "bb::Main#main_2" [style="bold"];
    "bb::Main#main_5" [
        label = "block[id=5](l: T.proc.params(arg0: T.untyped).returns(T.untyped))\louterLoops: 1\l<block-call>: NilClass\l"
    ];

    "bb::Main#main_5" -> "bb::Main#main_7" [style="bold"];
    "bb::Main#main_5" -> "bb::Main#main_6" [style="tapered"];

    "bb::Main#main_6" [
        label = "block[id=6](l: T.proc.params(arg0: T.untyped).returns(T.untyped))\l<statTemp>$13: T.untyped = Solve<::Main#main#<block>>\l<statTemp>$26: Main = self\l<block-pre-call-temp>$27: T.untyped = <statTemp>$26: Main.blockpass()\l<unconditional>\l"
    ];

    "bb::Main#main_6" -> "bb::Main#main_8" [style="bold"];
    "bb::Main#main_7" [
        label = "block[id=7](l: T.proc.params(arg0: T.untyped).returns(T.untyped))\louterLoops: 1\l<blk>$16: T.untyped = load_yield_params(::Main#main#<block>, Main#main#<block>)\l<statTemp>$19: <Magic> = alias <constant:<Magic>>\l<statTemp>$20: T.proc.params(arg0: T.untyped).returns(T.untyped) = l: T.proc.params(arg0: T.untyped).returns(T.untyped).to_proc()\l<statTemp>$22: Symbol(:\"call\") = :\"call\"\l<blockReturnTemp>$18: T.untyped = <statTemp>$19: <Magic>.<call-with-splat>(<statTemp>$20: T.proc.params(arg0: T.untyped).returns(T.untyped), <statTemp>$22: Symbol(:\"call\"), <blk>$16: T.untyped)\l<blockReturnTemp>$24: T.noreturn = blockreturn<::Main#main#<block>> <blockReturnTemp>$18: T.untyped\l<unconditional>\l"
    ];

    "bb::Main#main_7" -> "bb::Main#main_5" [style="bold"];
    "bb::Main#main_8" [
        label = "block[id=8](l: T.proc.params(arg0: T.untyped).returns(T.untyped))\louterLoops: 1\l<block-call>: NilClass\l"
    ];

    "bb::Main#main_8" -> "bb::Main#main_10" [style="bold"];
    "bb::Main#main_8" -> "bb::Main#main_9" [style="tapered"];

    "bb::Main#main_9" [
        label = "block[id=9](l: T.proc.params(arg0: T.untyped).returns(T.untyped))\l<statTemp>$25: T.untyped = Solve<::Main#main#<block>>\l<statTemp>$38: Main = self\l<block-pre-call-temp>$39: T.untyped = <statTemp>$38: Main.mixed()\l<unconditional>\l"
    ];

    "bb::Main#main_9" -> "bb::Main#main_11" [style="bold"];
    "bb::Main#main_10" [
        label = "block[id=10](l: T.proc.params(arg0: T.untyped).returns(T.untyped))\louterLoops: 1\l<blk>$28: T.untyped = load_yield_params(::Main#main#<block>, Main#main#<block>)\l<statTemp>$31: <Magic> = alias <constant:<Magic>>\l<statTemp>$32: T.proc.params(arg0: T.untyped).returns(T.untyped) = l: T.proc.params(arg0: T.untyped).returns(T.untyped).to_proc()\l<statTemp>$34: Symbol(:\"call\") = :\"call\"\l<blockReturnTemp>$30: T.untyped = <statTemp>$31: <Magic>.<call-with-splat>(<statTemp>$32: T.proc.params(arg0: T.untyped).returns(T.untyped), <statTemp>$34: Symbol(:\"call\"), <blk>$28: T.untyped)\l<blockReturnTemp>$36: T.noreturn = blockreturn<::Main#main#<block>> <blockReturnTemp>$30: T.untyped\l<unconditional>\l"
    ];

    "bb::Main#main_10" -> "bb::Main#main_8" [style="bold"];
    "bb::Main#main_11" [
        label = "block[id=11](l: T.proc.params(arg0: T.untyped).returns(T.untyped))\louterLoops: 1\l<block-call>: NilClass\l"
    ];

    "bb::Main#main_11" -> "bb::Main#main_13" [style="bold"];
    "bb::Main#main_11" -> "bb::Main#main_12" [style="tapered"];

    "bb::Main#main_12" [
        label = "block[id=12](l: T.proc.params(arg0: T.untyped).returns(T.untyped))\l<statTemp>$37: T.untyped = Solve<::Main#main#<block>>\l<statTemp>$49: Main = self\l<block-pre-call-temp>$50: T.untyped = <statTemp>$49: Main.blockyield()\l<unconditional>\l"
    ];

    "bb::Main#main_12" -> "bb::Main#main_14" [style="bold"];
    "bb::Main#main_13" [
        label = "block[id=13](l: T.proc.params(arg0: T.untyped).returns(T.untyped))\louterLoops: 1\l<blk>$40: T.untyped = load_yield_params(::Main#main#<block>, Main#main#<block>)\l<statTemp>$43: <Magic> = alias <constant:<Magic>>\l<statTemp>$44: T.proc.params(arg0: T.untyped).returns(T.untyped) = l: T.proc.params(arg0: T.untyped).returns(T.untyped).to_proc()\l<statTemp>$46: Symbol(:\"call\") = :\"call\"\l<blockReturnTemp>$42: T.untyped = <statTemp>$43: <Magic>.<call-with-splat>(<statTemp>$44: T.proc.params(arg0: T.untyped).returns(T.untyped), <statTemp>$46: Symbol(:\"call\"), <blk>$40: T.untyped)\l<blockReturnTemp>$48: T.noreturn = blockreturn<::Main#main#<block>> <blockReturnTemp>$42: T.untyped\l<unconditional>\l"
    ];

    "bb::Main#main_13" -> "bb::Main#main_11" [style="bold"];
    "bb::Main#main_14" [
        label = "block[id=14](l: T.proc.params(arg0: T.untyped).returns(T.untyped))\louterLoops: 1\l<block-call>: NilClass\l"
    ];

    "bb::Main#main_14" -> "bb::Main#main_16" [style="bold"];
    "bb::Main#main_14" -> "bb::Main#main_15" [style="tapered"];

    "bb::Main#main_15" [
        label = "block[id=15]()\l<returnMethodTemp>$2: T.untyped = Solve<::Main#main#<block>>\l<finalReturn>: T.noreturn = return <returnMethodTemp>$2: T.untyped\l<unconditional>\l"
    ];

    "bb::Main#main_15" -> "bb::Main#main_1" [style="bold"];
    "bb::Main#main_16" [
        label = "block[id=16](l: T.proc.params(arg0: T.untyped).returns(T.untyped))\louterLoops: 1\l<blk>$51: T.untyped = load_yield_params(::Main#main#<block>, Main#main#<block>)\l<statTemp>$54: <Magic> = alias <constant:<Magic>>\l<statTemp>$55: T.proc.params(arg0: T.untyped).returns(T.untyped) = l: T.proc.params(arg0: T.untyped).returns(T.untyped).to_proc()\l<statTemp>$57: Symbol(:\"call\") = :\"call\"\l<blockReturnTemp>$53: T.untyped = <statTemp>$54: <Magic>.<call-with-splat>(<statTemp>$55: T.proc.params(arg0: T.untyped).returns(T.untyped), <statTemp>$57: Symbol(:\"call\"), <blk>$51: T.untyped)\l<blockReturnTemp>$59: T.noreturn = blockreturn<::Main#main#<block>> <blockReturnTemp>$53: T.untyped\l<unconditional>\l"
    ];

    "bb::Main#main_16" -> "bb::Main#main_14" [style="bold"];
}

}

