class <constant:<root>> < ::Object () @ test/testdata/namer/yield.rb:2
  class <constant:Main> < ::Object () @ test/testdata/namer/yield.rb:2
    method blockpass (blk) @ test/testdata/namer/yield.rb:7
      argument blk<block> @ test/testdata/namer/yield.rb:7
    method blockyield () @ test/testdata/namer/yield.rb:15
      method <block>$2 (i, <blk>) @ test/testdata/namer/yield.rb:16
        argument <blk><block> -> T.untyped @ test/testdata/namer/yield.rb:16
        argument i<> @ test/testdata/namer/yield.rb:16
    method main () @ test/testdata/namer/yield.rb:19
      method <block>$2 (x) @ test/testdata/namer/yield.rb:20
        argument x<> @ test/testdata/namer/yield.rb:20
      method <block>$3 (<block-pass>$2) @ test/testdata/namer/yield.rb:21
        argument <block-pass>$2<repeated> @ test/testdata/namer/yield.rb:21
      method <block>$4 (<block-pass>$3) @ test/testdata/namer/yield.rb:22
        argument <block-pass>$3<repeated> @ test/testdata/namer/yield.rb:22
      method <block>$5 (<block-pass>$4) @ test/testdata/namer/yield.rb:23
        argument <block-pass>$4<repeated> @ test/testdata/namer/yield.rb:23
      method <block>$6 (<block-pass>$5) @ test/testdata/namer/yield.rb:24
        argument <block-pass>$5<repeated> @ test/testdata/namer/yield.rb:24
    method mixed (blk) @ test/testdata/namer/yield.rb:11
      argument blk<block> @ test/testdata/namer/yield.rb:11
    method yielder (<blk>) @ test/testdata/namer/yield.rb:3
      argument <blk><block> -> T.untyped @ test/testdata/namer/yield.rb:4
  class <singleton class:<constant:Main>> < ::<Class:Object> () @ test/testdata/namer/yield.rb:2
  method <static-init>$11 () @ test/testdata/namer/yield.rb:2

