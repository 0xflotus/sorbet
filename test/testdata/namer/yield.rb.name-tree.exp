begin
  class <emptyTree><<constant:<root>>> < ()
    def self.<static-init><<static-init>$6>()
      begin
        <emptyTree>
        ::<constant:Main>.new().main()
      end
    end
  end
  class <emptyTree>::<constant:Main><<constant:Main>> < (::<constant:<todo sym>>)
    <emptyTree>

    <emptyTree>

    <emptyTree>

    <emptyTree>

    <emptyTree>

    def yielder<yielder>(<blk>)
      begin
        a = <blk>.call(1)
        <blk>.call(a)
      end
    end

    def blockpass<blockpass>(blk)
      begin
        a = blk.call(1)
        blk.call(a)
      end
    end

    def mixed<mixed>(blk)
      begin
        a = blk.call(1)
        blk.call(a)
      end
    end

    def blockyield<blockyield>()
      self(<constant:Main>).yielder() do |i$6076, <blk>$6076|
        <blk>$6076.call(i$6076)
      end
    end

    def main<main>()
      begin
        l = self(<constant:Main>).lambda() do |x$6080|
          begin
            self(<constant:Main>).puts(x$6080)
            3
          end
        end
        self(<constant:Main>).yielder() do |<block-pass>$2$6082|
          l.to_proc().call(::<constant:<Magic>>.<splat>(<block-pass>$2$6082.to_a()))
        end
        self(<constant:Main>).blockpass() do |<block-pass>$3$6084|
          l.to_proc().call(::<constant:<Magic>>.<splat>(<block-pass>$3$6084.to_a()))
        end
        self(<constant:Main>).mixed() do |<block-pass>$4$6086|
          l.to_proc().call(::<constant:<Magic>>.<splat>(<block-pass>$4$6086.to_a()))
        end
        self(<constant:Main>).blockyield() do |<block-pass>$5$6088|
          l.to_proc().call(::<constant:<Magic>>.<splat>(<block-pass>$5$6088.to_a()))
        end
      end
    end
  end
  <emptyTree>
end
