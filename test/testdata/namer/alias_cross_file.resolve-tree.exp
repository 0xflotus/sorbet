begin
  ::RubyTyper.<U keep_for_ide>(::TestSig)
  class ::TestSig<<C <U TestSig>>> < (::<todo sym>)
    <emptyTree>

    <emptyTree>

    def <U test_resolve><<U test_resolve>>(<blk>)
      <emptyTree>
    end

    def self.<U <static-init>><<U <static-init>>>(<blk>)
      self(<S <C <U TestSig>> $1>).<U sig>() do ||
        self(<C <U Builder>>).<U returns>(::T2)
      end
    end
  end
  <emptyTree>
end
begin
  class <emptyTree><<C <U <root>>>> < ()
    def self.<U <static-init>><<N <U <static-init>> $87>>(<blk>)
      begin
        begin
          ::RubyTyper.<U keep_for_ide>(::T1)
          <emptyTree>
        end
        ::T2 = ::T1
        <emptyTree>
      end
    end
  end
  class ::T1<<C <U T1>>> < (::<todo sym>)  end
  <emptyTree>
end
