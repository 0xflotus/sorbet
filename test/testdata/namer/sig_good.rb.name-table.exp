class <constant:<root>> < ::Object () @ test/testdata/namer/sig_good.rb:2
  class <constant:A> < ::Object () @ test/testdata/namer/sig_good.rb:7
    method good (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) -> T2 @ test/testdata/namer/sig_good.rb:31
      argument a<> -> TupleType {
        0 = T1
        1 = T2
      } @ test/testdata/namer/sig_good.rb:9
      argument b<> -> T1 @ test/testdata/namer/sig_good.rb:10
      argument c<> -> T1 | NilClass @ test/testdata/namer/sig_good.rb:11
      argument d<> -> T1 | T2 @ test/testdata/namer/sig_good.rb:12
      argument e<> -> T.untyped @ test/testdata/namer/sig_good.rb:13
      argument f<> -> AppliedType {
        klass = ::Array
        targs = [
          <constant:Elem> = T1
        ]
      } @ test/testdata/namer/sig_good.rb:14
      argument g<> -> AppliedType {
        klass = ::Hash
        targs = [
          <constant:K> = T1
          <constant:V> = T2
          <constant:Elem> = TupleType {
              0 = T1
              1 = T2
            }
        ]
      } @ test/testdata/namer/sig_good.rb:15
      argument h<> -> FalseClass | Integer | Float | String | Symbol @ test/testdata/namer/sig_good.rb:16
      argument i<> -> T1 @ test/testdata/namer/sig_good.rb:17
      argument j<> -> <Class:T1> @ test/testdata/namer/sig_good.rb:18
      argument k<> -> <Class:T1> @ test/testdata/namer/sig_good.rb:19
      argument l<> -> <Class:T1> @ test/testdata/namer/sig_good.rb:20
      argument m<> -> <Class:T1> @ test/testdata/namer/sig_good.rb:21
      argument n<> -> <Class:M1> @ test/testdata/namer/sig_good.rb:22
      argument o<> -> ShapeType {
        Symbol(:"foo") => String
        Symbol(:"bar") => Integer | NilClass
      } @ test/testdata/namer/sig_good.rb:23
      argument p<> -> ShapeType {
      } @ test/testdata/namer/sig_good.rb:27
      argument q<> -> ShapeType {
        String("hi") => String
        Symbol(:"bye") => String
      } @ test/testdata/namer/sig_good.rb:28
  class <constant:M1> (<constant:BasicObject>) @ test/testdata/namer/sig_good.rb:4
  class <constant:T1> < ::Object () @ test/testdata/namer/sig_good.rb:2
  class <constant:T2> < ::Object () @ test/testdata/namer/sig_good.rb:3
  class <singleton class:<constant:A>> < ::<Class:Object> () @ test/testdata/namer/sig_good.rb:7
  class <singleton class:<constant:M1>> < ::Module () @ test/testdata/namer/sig_good.rb:4
  class <singleton class:<constant:T1>> < ::<Class:Object> () @ test/testdata/namer/sig_good.rb:2
  class <singleton class:<constant:T2>> < ::<Class:Object> () @ test/testdata/namer/sig_good.rb:3
  method <static-init>$12 () @ test/testdata/namer/sig_good.rb:2
  static-field <constant:A1> -> AliasType { symbol = ::T1 } @ test/testdata/namer/sig_good.rb:5

