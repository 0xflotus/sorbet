class <constant:<root>> < ::<constant:Object> () -> <Class:<root>> @ -e:1
  class <constant:A> (<constant:BasicObject>) -> <Class:A> @ test/testdata/namer/type_alias.rb:2
    class <constant:C1> < ::<constant:Object> () -> <Class:A::C1> @ test/testdata/namer/type_alias.rb:3
    class <singleton class:<constant:C1>> < ::<singleton class:<constant:Object>> () @ test/testdata/namer/type_alias.rb:3
    method f (x) -> NilClass @ test/testdata/namer/type_alias.rb:7
      argument x<> -> A::C1 @ test/testdata/namer/type_alias.rb:6
    static-field <constant:C2> -> AliasType { symbol = ::<constant:A>::<constant:C1> } @ test/testdata/namer/type_alias.rb:4
  class <singleton class:<constant:A>> < ::<constant:Module> () @ test/testdata/namer/type_alias.rb:2

