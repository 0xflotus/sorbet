digraph "casts.rb" {
subgraph "cluster_::TestCasts#untyped" {
    label = "::TestCasts#untyped";
    color = blue;
    "bb::TestCasts#untyped_0" [shape = invhouse];
    "bb::TestCasts#untyped_1" [shape = parallelogram];

    "bb::TestCasts#untyped_0" [
        label = "block[id=0]()\l<finalReturn> = return <returnMethodTemp>$2 : <impossible>\l<unconditional>\l"
    ];

    "bb::TestCasts#untyped_0" -> "bb::TestCasts#untyped_1" [style="bold"];
    "bb::TestCasts#untyped_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::TestCasts#untyped_1" -> "bb::TestCasts#untyped_1" [style="bold"];
}

subgraph "cluster_::TestCasts#test_casts" {
    label = "::TestCasts#test_casts";
    color = blue;
    "bb::TestCasts#test_casts_0" [shape = invhouse];
    "bb::TestCasts#test_casts_1" [shape = parallelogram];

    "bb::TestCasts#test_casts_0" [
        label = "block[id=0]()\l<statTemp>$6 = self : TestCasts\l<castTemp$5 = <statTemp>$6.untyped() : untyped\lt = cast(<castTemp$5, Integer); : Integer\l<statTemp>$9 = 4 : Integer(4)\l<statTemp>$7 = t.+(<statTemp>$9) : Integer\l<castTemp$11 = \"hi\" : String(\"hi\")\lt1 = cast(<castTemp$11, Integer); : Integer\l<statTemp>$14 = 1 : Integer(1)\l<statTemp>$12 = t1.+(<statTemp>$14) : Integer\l<statTemp>$17 = self : TestCasts\l<castTemp$16 = <statTemp>$17.untyped() : untyped\ls = cast(<castTemp$16, String); : String\l<statTemp>$20 = \"hi\" : String(\"hi\")\l<statTemp>$18 = s.+(<statTemp>$20) : String\l<castTemp$22 = 6 : Integer(6)\ls = cast(<castTemp$22, String); : String\l<statTemp>$25 = \"hi\" : String(\"hi\")\l<statTemp>$23 = s.+(<statTemp>$25) : String\l<statTemp>$28 = 3 : Integer(3)\l<statTemp>$26 = s.+(<statTemp>$28) : String\l<castTemp$30 = 6 : Integer(6)\ls = cast(<castTemp$30, untyped); : untyped\l<statTemp>$33 = \"hi\" : String(\"hi\")\l<statTemp>$31 = s.+(<statTemp>$33) : untyped\l<statTemp>$35 = 3 : Integer(3)\l<returnMethodTemp>$2 = s.+(<statTemp>$35) : untyped\l<finalReturn> = return <returnMethodTemp>$2 : <impossible>\l<unconditional>\l"
    ];

    "bb::TestCasts#test_casts_0" -> "bb::TestCasts#test_casts_1" [style="bold"];
    "bb::TestCasts#test_casts_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::TestCasts#test_casts_1" -> "bb::TestCasts#test_casts_1" [style="bold"];
}

}

