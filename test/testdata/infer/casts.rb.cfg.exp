digraph "casts.rb" {
subgraph "cluster_::TestCasts#untyped" {
    label = "::TestCasts#untyped";
    color = blue;
    "bb::TestCasts#untyped_0" [shape = invhouse];
    "bb::TestCasts#untyped_1" [shape = parallelogram];

    "bb::TestCasts#untyped_0" [
        label = "block[id=0]()\l<finalReturn> = return <returnMethodTemp>$2 : <impossible>\l<unconditional>\l"
    ];

    "bb::TestCasts#untyped_0" -> "bb::TestCasts#untyped_1" [style="bold"];
    "bb::TestCasts#untyped_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::TestCasts#untyped_1" -> "bb::TestCasts#untyped_1" [style="bold"];
}

subgraph "cluster_::TestCasts#test_casts" {
    label = "::TestCasts#test_casts";
    color = blue;
    "bb::TestCasts#test_casts_0" [shape = invhouse];
    "bb::TestCasts#test_casts_1" [shape = parallelogram];

    "bb::TestCasts#test_casts_0" [
        label = "block[id=0]()\l<statTemp>$6 = alias <constant:RubyTyper> : <Class:RubyTyper>\l<statTemp>$7 = alias <constant:Integer> : <Class:Integer>\l<statTemp>$5 = <statTemp>$6.keep_for_typechecking(<statTemp>$7) : T.untyped\l<statTemp>$9 = self : TestCasts\l<castTemp>$8 = <statTemp>$9.untyped() : T.untyped\lt = cast(<castTemp>$8, Integer); : Integer\l<statTemp>$12 = 4 : Integer(4)\l<statTemp>$10 = t.+(<statTemp>$12) : Integer\l<statTemp>$15 = alias <constant:RubyTyper> : <Class:RubyTyper>\l<statTemp>$16 = alias <constant:Integer> : <Class:Integer>\l<statTemp>$14 = <statTemp>$15.keep_for_typechecking(<statTemp>$16) : T.untyped\l<castTemp>$17 = \"hi\" : String(\"hi\")\lt1 = cast(<castTemp>$17, Integer); : Integer\l<statTemp>$20 = 1 : Integer(1)\l<statTemp>$18 = t1.+(<statTemp>$20) : Integer\l<statTemp>$23 = alias <constant:RubyTyper> : <Class:RubyTyper>\l<statTemp>$24 = alias <constant:String> : <Class:String>\l<statTemp>$22 = <statTemp>$23.keep_for_typechecking(<statTemp>$24) : T.untyped\l<statTemp>$26 = self : TestCasts\l<castTemp>$25 = <statTemp>$26.untyped() : T.untyped\ls = cast(<castTemp>$25, String); : String\l<statTemp>$29 = \"hi\" : String(\"hi\")\l<statTemp>$27 = s.+(<statTemp>$29) : String\l<statTemp>$32 = alias <constant:RubyTyper> : <Class:RubyTyper>\l<statTemp>$33 = alias <constant:String> : <Class:String>\l<statTemp>$31 = <statTemp>$32.keep_for_typechecking(<statTemp>$33) : T.untyped\l<castTemp>$34 = 6 : Integer(6)\ls = cast(<castTemp>$34, String); : String\l<statTemp>$37 = \"hi\" : String(\"hi\")\l<statTemp>$35 = s.+(<statTemp>$37) : String\l<statTemp>$40 = 3 : Integer(3)\l<statTemp>$38 = s.+(<statTemp>$40) : String\l<statTemp>$43 = alias <constant:RubyTyper> : <Class:RubyTyper>\l<statTemp>$44 = alias <constant:Integer> : <Class:Integer>\l<statTemp>$42 = <statTemp>$43.keep_for_typechecking(<statTemp>$44) : T.untyped\l<castTemp>$45 = 6 : Integer(6)\ls = cast(<castTemp>$45, Integer); : Integer\l<statTemp>$48 = alias <constant:RubyTyper> : <Class:RubyTyper>\l<statTemp>$50 = alias <constant:T> : <Class:T>\l<statTemp>$49 = <statTemp>$50.untyped() : T.untyped\l<statTemp>$47 = <statTemp>$48.keep_for_typechecking(<statTemp>$49) : T.untyped\l<castTemp>$51 = 6 : Integer(6)\ls = cast(<castTemp>$51, T.untyped); : T.untyped\l<statTemp>$54 = alias <constant:RubyTyper> : <Class:RubyTyper>\l<statTemp>$55 = 7 : Integer(7)\l<statTemp>$53 = <statTemp>$54.keep_for_typechecking(<statTemp>$55) : T.untyped\l<castTemp>$56 = 6 : Integer(6)\ls = cast(<castTemp>$56, T.untyped); : T.untyped\l<statTemp>$59 = \"hi\" : String(\"hi\")\l<statTemp>$57 = s.+(<statTemp>$59) : T.untyped\l<statTemp>$61 = 3 : Integer(3)\l<returnMethodTemp>$2 = s.+(<statTemp>$61) : T.untyped\l<finalReturn> = return <returnMethodTemp>$2 : <impossible>\l<unconditional>\l"
    ];

    "bb::TestCasts#test_casts_0" -> "bb::TestCasts#test_casts_1" [style="bold"];
    "bb::TestCasts#test_casts_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::TestCasts#test_casts_1" -> "bb::TestCasts#test_casts_1" [style="bold"];
}

}

