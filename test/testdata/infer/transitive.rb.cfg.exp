digraph "transitive.rb" {
subgraph "cluster_#<static-init>" {
    label = "#<static-init>";
    color = blue;
    "bb#<static-init>_0" [shape = invhouse];
    "bb#<static-init>_1" [shape = parallelogram];

    "bb#<static-init>_0" [
        label = "block[id=0]()\l<constant:RubyTyper>$7 = alias <constant:RubyTyper> : <Class:RubyTyper>\l<constant:A>$9 = alias <constant:A> : <Class:A>\l<constant:Bar>$14 = alias <constant:Bar> : <Class:Bar>\l<statTemp>$5 = <constant:RubyTyper>$7.keep_for_ide(<constant:A>$9) : T.untyped\l<statTemp>$11 = <constant:RubyTyper>$7.keep_for_ide(<constant:Bar>$14) : T.untyped\l<statTemp>$15 = <constant:RubyTyper>$7.keep_for_ide(<constant:A>$9) : T.untyped\l<finalReturn> = return <returnMethodTemp>$2 : <impossible>\l<unconditional>\l"
    ];

    "bb#<static-init>_0" -> "bb#<static-init>_1" [style="bold"];
    "bb#<static-init>_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb#<static-init>_1" -> "bb#<static-init>_1" [style="bold"];
}

subgraph "cluster_::A#foo" {
    label = "::A#foo";
    color = blue;
    "bb::A#foo_0" [shape = invhouse];
    "bb::A#foo_1" [shape = parallelogram];

    "bb::A#foo_0" [
        label = "block[id=0]()\l<finalReturn> = return <returnMethodTemp>$2 : <impossible>\l<unconditional>\l"
    ];

    "bb::A#foo_0" -> "bb::A#foo_1" [style="bold"];
    "bb::A#foo_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::A#foo_1" -> "bb::A#foo_1" [style="bold"];
}

subgraph "cluster_::A#<static-init>" {
    label = "::A#<static-init>";
    color = blue;
    "bb::A#<static-init>_0" [shape = invhouse];
    "bb::A#<static-init>_1" [shape = parallelogram];

    "bb::A#<static-init>_0" [
        label = "block[id=0]()\l<constant:Integer>$7 = alias <constant:Integer> : <Class:Integer>\l<statTemp>$5 = self : <Class:A>\l<statTemp>$4 = <statTemp>$5.sig() : T.untyped\l<returnMethodTemp>$2 = <statTemp>$4.returns(<constant:Integer>$7) : T.untyped\l<finalReturn> = return <returnMethodTemp>$2 : <impossible>\l<unconditional>\l"
    ];

    "bb::A#<static-init>_0" -> "bb::A#<static-init>_1" [style="bold"];
    "bb::A#<static-init>_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::A#<static-init>_1" -> "bb::A#<static-init>_1" [style="bold"];
}

subgraph "cluster_::Bar#baz" {
    label = "::Bar#baz";
    color = blue;
    "bb::Bar#baz_0" [shape = invhouse];
    "bb::Bar#baz_1" [shape = parallelogram];

    "bb::Bar#baz_0" [
        label = "block[id=0]()\l<selfMethodTemp>$3 = self : Bar\l<statTemp>$4 = self : Bar\l<returnMethodTemp>$2 = <statTemp>$4.foo() : Integer\l<finalReturn> = return <returnMethodTemp>$2 : <impossible>\l<unconditional>\l"
    ];

    "bb::Bar#baz_0" -> "bb::Bar#baz_1" [style="bold"];
    "bb::Bar#baz_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Bar#baz_1" -> "bb::Bar#baz_1" [style="bold"];
}

subgraph "cluster_::Bar#<static-init>" {
    label = "::Bar#<static-init>";
    color = blue;
    "bb::Bar#<static-init>_0" [shape = invhouse];
    "bb::Bar#<static-init>_1" [shape = parallelogram];

    "bb::Bar#<static-init>_0" [
        label = "block[id=0]()\l<constant:Integer>$9 = alias <constant:Integer> : <Class:Integer>\l<constant:<Magic>>$10 = alias <constant:<Magic>> : <Magic>\l<statTemp>$5 = self : <Class:Bar>\l<hashTemp>$7 = :\"arg\" : Symbol(:\"arg\")\l<statTemp>$6 = <constant:<Magic>>$10.<build-hash>(<hashTemp>$7, <constant:Integer>$9) : ShapeType {\l  Symbol(:\"arg\") => <Class:Integer>\l}\l<statTemp>$4 = <statTemp>$5.sig(<statTemp>$6) : T.untyped\l<returnMethodTemp>$2 = <statTemp>$4.returns(<constant:Integer>$9) : T.untyped\l<finalReturn> = return <returnMethodTemp>$2 : <impossible>\l<unconditional>\l"
    ];

    "bb::Bar#<static-init>_0" -> "bb::Bar#<static-init>_1" [style="bold"];
    "bb::Bar#<static-init>_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Bar#<static-init>_1" -> "bb::Bar#<static-init>_1" [style="bold"];
}

}

