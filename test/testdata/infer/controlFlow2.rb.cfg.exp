digraph "controlFlow2.rb"{
subgraph "cluster_::<constant:Test>::<constant:Baz>#foo" {
    label = "::<constant:Test>::<constant:Baz>#foo";
    color = blue;
    "bb::<constant:Test>::<constant:Baz>#foo_0" [shape = invhouse];
    "bb::<constant:Test>::<constant:Baz>#foo_1" [shape = parallelogram];

    "bb::<constant:Test>::<constant:Baz>#foo_0" [label = "block[id=0]()
finalReturn = return returnMethodTemp$2 : <bottom>
<unconditional>"];

    "bb::<constant:Test>::<constant:Baz>#foo_0" -> "bb::<constant:Test>::<constant:Baz>#foo_1" [style="bold"];
    "bb::<constant:Test>::<constant:Baz>#foo_1" [label = "block[id=1]()
<unconditional>"];

    "bb::<constant:Test>::<constant:Baz>#foo_1" -> "bb::<constant:Test>::<constant:Baz>#foo_1" [style="bold"];
}

subgraph "cluster_::<constant:Test>::<constant:Diff>#parse" {
    label = "::<constant:Test>::<constant:Diff>#parse";
    color = blue;
    "bb::<constant:Test>::<constant:Diff>#parse_0" [shape = invhouse];
    "bb::<constant:Test>::<constant:Diff>#parse_1" [shape = parallelogram];

    "bb::<constant:Test>::<constant:Diff>#parse_0" [label = "block[id=0](b_name, statTemp$7, <constant:Baz>$13)
<constant:nil>$6 = alias <constant:nil> : NilClass
<constant:Baz>$13 = alias <constant:Baz> : <class:Baz>
selfMethodTemp$4 = self : Diff
b_name = <constant:nil>$6 : NilClass
statTemp$7 = self : Diff
<unconditional>"];

    "bb::<constant:Test>::<constant:Diff>#parse_0" -> "bb::<constant:Test>::<constant:Diff>#parse_2" [style="bold"];
    "bb::<constant:Test>::<constant:Diff>#parse_1" [label = "block[id=1]()
<unconditional>"];

    "bb::<constant:Test>::<constant:Diff>#parse_1" -> "bb::<constant:Test>::<constant:Diff>#parse_1" [style="bold"];
    "bb::<constant:Test>::<constant:Diff>#parse_2" [label = "block[id=2](b_name, statTemp$7, ifTemp$9, <constant:Baz>$13)
outerLoops: 1
<block-call>"];

    "bb::<constant:Test>::<constant:Diff>#parse_2" -> "bb::<constant:Test>::<constant:Diff>#parse_4" [style="bold"];
    "bb::<constant:Test>::<constant:Diff>#parse_2" -> "bb::<constant:Test>::<constant:Diff>#parse_3" [style="tapered"];

    "bb::<constant:Test>::<constant:Diff>#parse_3" [label = "block[id=3](statTemp$7)
returnMethodTemp$3 = statTemp$7.each() : untyped
finalReturn = return returnMethodTemp$3 : <bottom>
<unconditional>"];

    "bb::<constant:Test>::<constant:Diff>#parse_3" -> "bb::<constant:Test>::<constant:Diff>#parse_1" [style="bold"];
    "bb::<constant:Test>::<constant:Diff>#parse_4" [label = "block[id=4](b_name, statTemp$7, ifTemp$9, <constant:Baz>$13)
outerLoops: 1
b_name"];

    "bb::<constant:Test>::<constant:Diff>#parse_4" -> "bb::<constant:Test>::<constant:Diff>#parse_5" [style="bold"];
    "bb::<constant:Test>::<constant:Diff>#parse_4" -> "bb::<constant:Test>::<constant:Diff>#parse_6" [style="tapered"];

    "bb::<constant:Test>::<constant:Diff>#parse_5" [label = "block[id=5](b_name, statTemp$7, ifTemp$9, <constant:Baz>$13)
outerLoops: 1
ifTemp$9 = b_name.foo() : untyped
ifTemp$9"];

    "bb::<constant:Test>::<constant:Diff>#parse_5" -> "bb::<constant:Test>::<constant:Diff>#parse_8" [style="bold"];
    "bb::<constant:Test>::<constant:Diff>#parse_5" -> "bb::<constant:Test>::<constant:Diff>#parse_2" [style="tapered"];

    "bb::<constant:Test>::<constant:Diff>#parse_6" [label = "block[id=6](b_name, statTemp$7, ifTemp$9, <constant:Baz>$13)
outerLoops: 1
ifTemp$9 = b_name : NilClass
ifTemp$9"];

    "bb::<constant:Test>::<constant:Diff>#parse_6" -> "bb::<constant:Test>::<constant:Diff>#parse_8" [style="bold"];
    "bb::<constant:Test>::<constant:Diff>#parse_6" -> "bb::<constant:Test>::<constant:Diff>#parse_2" [style="tapered"];

    "bb::<constant:Test>::<constant:Diff>#parse_8" [label = "block[id=8](b_name, statTemp$7, ifTemp$9, <constant:Baz>$13)
outerLoops: 1
b_name = <constant:Baz>$13.new() : untyped
<unconditional>"];

    "bb::<constant:Test>::<constant:Diff>#parse_8" -> "bb::<constant:Test>::<constant:Diff>#parse_2" [style="bold"];
}

}

