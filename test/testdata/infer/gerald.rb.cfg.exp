digraph "gerald.rb" {
subgraph "cluster_#<static-init>" {
    label = "#<static-init>";
    color = blue;
    "bb#<static-init>_0" [shape = invhouse];
    "bb#<static-init>_1" [shape = parallelogram];

    "bb#<static-init>_0" [
        label = "block[id=0]()\l<constant:AutogenLoader>$9 = alias <constant:AutogenLoader> : T.untyped\l<statTemp>$5 = self : <Class:<root>>\l<statTemp>$6 = \"../../../extn\" : String(\"../../../extn\")\l<statTemp>$4 = <statTemp>$5.require_relative(<statTemp>$6) : TrueClass | FalseClass\l<statTemp>$10 = \"__FILE__\" : String(\"__FILE__\")\l<statTemp>$7 = <constant:AutogenLoader>$9.init(<statTemp>$10) : T.untyped\l<finalReturn> = return <returnMethodTemp>$2 : <impossible>\l<unconditional>\l"
    ];

    "bb#<static-init>_0" -> "bb#<static-init>_1" [style="bold"];
    "bb#<static-init>_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb#<static-init>_1" -> "bb#<static-init>_1" [style="bold"];
}

subgraph "cluster_::Opus::CIBot::Gerald::MatchTimeout#rule_token" {
    label = "::Opus::CIBot::Gerald::MatchTimeout#rule_token";
    color = blue;
    "bb::Opus::CIBot::Gerald::MatchTimeout#rule_token_0" [shape = invhouse];
    "bb::Opus::CIBot::Gerald::MatchTimeout#rule_token_1" [shape = parallelogram];

    "bb::Opus::CIBot::Gerald::MatchTimeout#rule_token_0" [
        label = "block[id=0]()\l@rule_token$4 = alias @rule_token : T.untyped\l<finalReturn> = return @rule_token$4 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchTimeout#rule_token_0" -> "bb::Opus::CIBot::Gerald::MatchTimeout#rule_token_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::MatchTimeout#rule_token_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchTimeout#rule_token_1" -> "bb::Opus::CIBot::Gerald::MatchTimeout#rule_token_1" [style="bold"];
}

subgraph "cluster_::Opus::CIBot::Gerald::MatchTimeout#initialize" {
    label = "::Opus::CIBot::Gerald::MatchTimeout#initialize";
    color = blue;
    "bb::Opus::CIBot::Gerald::MatchTimeout#initialize_0" [shape = invhouse];
    "bb::Opus::CIBot::Gerald::MatchTimeout#initialize_1" [shape = parallelogram];

    "bb::Opus::CIBot::Gerald::MatchTimeout#initialize_0" [
        label = "block[id=0]()\l@rule_token$7 = alias @rule_token : T.untyped\l<selfMethodTemp>$3 = self : Opus::CIBot::Gerald::MatchTimeout\lmessage = load_arg(<selfMethodTemp>$3#initialize, 0) : T.untyped\lrule_token = load_arg(<selfMethodTemp>$3#initialize, 1) : T.untyped\l<statTemp>$5 = self : Opus::CIBot::Gerald::MatchTimeout\l<statTemp>$4 = <statTemp>$5.super(message) : T.untyped\l@rule_token$7 = rule_token : T.untyped\l<finalReturn> = return @rule_token$7 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchTimeout#initialize_0" -> "bb::Opus::CIBot::Gerald::MatchTimeout#initialize_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::MatchTimeout#initialize_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchTimeout#initialize_1" -> "bb::Opus::CIBot::Gerald::MatchTimeout#initialize_1" [style="bold"];
}

subgraph "cluster_::Opus::CIBot::Gerald::Matcher#initialize" {
    label = "::Opus::CIBot::Gerald::Matcher#initialize";
    color = blue;
    "bb::Opus::CIBot::Gerald::Matcher#initialize_0" [shape = invhouse];
    "bb::Opus::CIBot::Gerald::Matcher#initialize_1" [shape = parallelogram];

    "bb::Opus::CIBot::Gerald::Matcher#initialize_0" [
        label = "block[id=0]()\l<constant:<Magic>>$9 = alias <constant:<Magic>> : <Magic>\l@rules$26 = alias @rules : T.untyped\l<constant:GeraldRule>$14 = alias <constant:GeraldRule> : T.untyped\l<statTemp>$8 = <constant:<Magic>>$9 : <Magic>\l<statTemp>$15 = :\"deleted_at_is_nil\" : Symbol(:\"deleted_at_is_nil\")\l<statTemp>$12 = <constant:GeraldRule>$14.query_by(<statTemp>$15) : T.untyped\l<statTemp>$16 = <constant:<Magic>>$9.<build-hash>() : ShapeType {\l}\l<statTemp>$11 = <statTemp>$12.load_all(<statTemp>$16) : T.untyped\l<block-pre-call-temp>$17 = <statTemp>$11.partition() : T.untyped\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Matcher#initialize_0" -> "bb::Opus::CIBot::Gerald::Matcher#initialize_2" [style="bold"];
    "bb::Opus::CIBot::Gerald::Matcher#initialize_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Matcher#initialize_1" -> "bb::Opus::CIBot::Gerald::Matcher#initialize_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::Matcher#initialize_2" [
        label = "block[id=2](<statTemp>$8, @rules$26)\louterLoops: 1\l<block-call>\l"
    ];

    "bb::Opus::CIBot::Gerald::Matcher#initialize_2" -> "bb::Opus::CIBot::Gerald::Matcher#initialize_4" [style="bold"];
    "bb::Opus::CIBot::Gerald::Matcher#initialize_2" -> "bb::Opus::CIBot::Gerald::Matcher#initialize_3" [style="tapered"];

    "bb::Opus::CIBot::Gerald::Matcher#initialize_3" [
        label = "block[id=3](<statTemp>$8, @rules$26)\l<statTemp>$10 = Solve<::Opus::CIBot::Gerald::Matcher#initialize#<block>> : T.untyped\l<statTemp>$23 = 2 : Integer(2)\l<statTemp>$24 = 0 : Integer(0)\l<assignTemp$3 = <statTemp>$8.<expand-splat>(<statTemp>$10, <statTemp>$23, <statTemp>$24) : T.untyped\l<statTemp>$28 = 0 : Integer(0)\l@rules$26 = <assignTemp$3.[](<statTemp>$28) : T.untyped\l<statTemp>$31 = 1 : Integer(1)\linvalid_rules = <assignTemp$3.[](<statTemp>$31) : T.untyped\l<statTemp>$33 = invalid_rules.empty?() : T.untyped\l<ifTemp>$32 = <statTemp>$33.!() : T.untyped\l<ifTemp>$32\l"
    ];

    "bb::Opus::CIBot::Gerald::Matcher#initialize_3" -> "bb::Opus::CIBot::Gerald::Matcher#initialize_5" [style="bold"];
    "bb::Opus::CIBot::Gerald::Matcher#initialize_3" -> "bb::Opus::CIBot::Gerald::Matcher#initialize_10" [style="tapered"];

    "bb::Opus::CIBot::Gerald::Matcher#initialize_4" [
        label = "block[id=4](<statTemp>$8, @rules$26)\louterLoops: 1\l<blk>$18 = load_yield_params(::Opus::CIBot::Gerald::Matcher#initialize#<block>, Opus::CIBot::Gerald::Matcher#initialize#<block>) : TupleType {\l  0 = T.untyped\l}\l<blk>$19 = 0 : Integer(0)\l<block-pass>$2$2 = <blk>$18.[](<blk>$19) : T.untyped\l<blockReturnTemp>$20 = <block-pass>$2$2.valid?() : T.untyped\l<blockReturnTemp>$22 = blockreturn<::Opus::CIBot::Gerald::Matcher#initialize#<block>> <blockReturnTemp>$20 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Matcher#initialize_4" -> "bb::Opus::CIBot::Gerald::Matcher#initialize_2" [style="bold"];
    "bb::Opus::CIBot::Gerald::Matcher#initialize_5" [
        label = "block[id=5](invalid_rules)\l<block-pre-call-temp>$38 = invalid_rules.map() : T.untyped\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Matcher#initialize_5" -> "bb::Opus::CIBot::Gerald::Matcher#initialize_7" [style="bold"];
    "bb::Opus::CIBot::Gerald::Matcher#initialize_7" [
        label = "block[id=7]()\louterLoops: 1\l<block-call>\l"
    ];

    "bb::Opus::CIBot::Gerald::Matcher#initialize_7" -> "bb::Opus::CIBot::Gerald::Matcher#initialize_9" [style="bold"];
    "bb::Opus::CIBot::Gerald::Matcher#initialize_7" -> "bb::Opus::CIBot::Gerald::Matcher#initialize_8" [style="tapered"];

    "bb::Opus::CIBot::Gerald::Matcher#initialize_8" [
        label = "block[id=8]()\l<statTemp>$36 = Solve<::Opus::CIBot::Gerald::Matcher#initialize#<block>> : T.untyped\l<statTemp>$44 = \",\" : String(\",\")\linvalid_rule_ids = <statTemp>$36.join(<statTemp>$44) : T.untyped\l<statTemp>$46 = self : Opus::CIBot::Gerald::Matcher\l<statTemp>$45 = <statTemp>$46.log() : T.untyped\l<statTemp>$48 = \"Gerald skipping invalid rules: \" : String(\"Gerald skipping invalid rules: \")\l<statTemp>$47 = <statTemp>$48.+(invalid_rule_ids) : String\l<returnMethodTemp>$4 = <statTemp>$45.warn(<statTemp>$47) : T.untyped\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Matcher#initialize_8" -> "bb::Opus::CIBot::Gerald::Matcher#initialize_10" [style="bold"];
    "bb::Opus::CIBot::Gerald::Matcher#initialize_9" [
        label = "block[id=9]()\louterLoops: 1\l<blk>$39 = load_yield_params(::Opus::CIBot::Gerald::Matcher#initialize#<block>, Opus::CIBot::Gerald::Matcher#initialize#<block>) : TupleType {\l  0 = T.untyped\l}\l<blk>$40 = 0 : Integer(0)\l<block-pass>$4$3 = <blk>$39.[](<blk>$40) : T.untyped\l<blockReturnTemp>$41 = <block-pass>$4$3.token() : T.untyped\l<blockReturnTemp>$43 = blockreturn<::Opus::CIBot::Gerald::Matcher#initialize#<block>> <blockReturnTemp>$41 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Matcher#initialize_9" -> "bb::Opus::CIBot::Gerald::Matcher#initialize_7" [style="bold"];
    "bb::Opus::CIBot::Gerald::Matcher#initialize_10" [
        label = "block[id=10](<returnMethodTemp>$4)\l<finalReturn> = return <returnMethodTemp>$4 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Matcher#initialize_10" -> "bb::Opus::CIBot::Gerald::Matcher#initialize_1" [style="bold"];
}

subgraph "cluster_::Opus::CIBot::Gerald::Matcher#match" {
    label = "::Opus::CIBot::Gerald::Matcher#match";
    color = blue;
    "bb::Opus::CIBot::Gerald::Matcher#match_0" [shape = invhouse];
    "bb::Opus::CIBot::Gerald::Matcher#match_1" [shape = parallelogram];

    "bb::Opus::CIBot::Gerald::Matcher#match_0" [
        label = "block[id=0]()\l<constant:<Magic>>$28 = alias <constant:<Magic>> : <Magic>\l<constant:MAX_AFFECTED_FILES>$12 = alias <constant:MAX_AFFECTED_FILES> : Integer(100)\l@rules$33 = alias @rules : T.untyped\l<constant:MatchTimeBudget>$31 = alias <constant:MatchTimeBudget> : <Class:Opus::CIBot::Gerald::MatchTimeBudget>\l<selfMethodTemp>$4 = self : Opus::CIBot::Gerald::Matcher\lmatch_context = load_arg(<selfMethodTemp>$4#match, 0) : T.untyped\l<statTemp>$9 = match_context.diff() : T.untyped\l<statTemp>$8 = <statTemp>$9.affected_files() : T.untyped\l<statTemp>$7 = <statTemp>$8.count() : T.untyped\l<ifTemp>$6 = <statTemp>$7.>(<constant:MAX_AFFECTED_FILES>$12) : T.untyped\l<ifTemp>$6\l"
    ];

    "bb::Opus::CIBot::Gerald::Matcher#match_0" -> "bb::Opus::CIBot::Gerald::Matcher#match_2" [style="bold"];
    "bb::Opus::CIBot::Gerald::Matcher#match_0" -> "bb::Opus::CIBot::Gerald::Matcher#match_3" [style="tapered"];

    "bb::Opus::CIBot::Gerald::Matcher#match_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Matcher#match_1" -> "bb::Opus::CIBot::Gerald::Matcher#match_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::Matcher#match_2" [
        label = "block[id=2](<constant:<Magic>>$28, match_context)\l<statTemp>$15 = self : Opus::CIBot::Gerald::Matcher\l<statTemp>$14 = <statTemp>$15.log() : T.untyped\l<statTemp>$19 = \"Gerald skipping large PR with \" : String(\"Gerald skipping large PR with \")\l<statTemp>$23 = match_context.diff() : T.untyped\l<statTemp>$22 = <statTemp>$23.affected_files() : T.untyped\l<statTemp>$21 = <statTemp>$22.count() : T.untyped\l<statTemp>$20 = <statTemp>$21.to_s() : T.untyped\l<statTemp>$18 = <statTemp>$19.concat(<statTemp>$20) : String\l<statTemp>$26 = \" affected files\" : String(\" affected files\")\l<statTemp>$25 = <statTemp>$26.to_s() : String\l<statTemp>$17 = <statTemp>$18.concat(<statTemp>$25) : String\l<statTemp>$16 = <statTemp>$17.to_s() : String\l<statTemp>$13 = <statTemp>$14.warn(<statTemp>$16) : T.untyped\l<returnTemp>$27 = <constant:<Magic>>$28.<build-array>() : AppliedType {\l  klass = ::Array\l  targs = [\l    <constant:Elem> = T.untyped\l  ]\l}\l<statTemp>$5 = return <returnTemp>$27 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Matcher#match_2" -> "bb::Opus::CIBot::Gerald::Matcher#match_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::Matcher#match_3" [
        label = "block[id=3](@rules$33, match_context, <constant:MatchTimeBudget>$31)\lbudget = <constant:MatchTimeBudget>$31.new() : Opus::CIBot::Gerald::MatchTimeBudget\l<block-pre-call-temp>$34 = @rules$33.select() : T.untyped\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Matcher#match_3" -> "bb::Opus::CIBot::Gerald::Matcher#match_4" [style="bold"];
    "bb::Opus::CIBot::Gerald::Matcher#match_4" [
        label = "block[id=4](match_context, budget)\louterLoops: 1\l<block-call>\l"
    ];

    "bb::Opus::CIBot::Gerald::Matcher#match_4" -> "bb::Opus::CIBot::Gerald::Matcher#match_6" [style="bold"];
    "bb::Opus::CIBot::Gerald::Matcher#match_4" -> "bb::Opus::CIBot::Gerald::Matcher#match_5" [style="tapered"];

    "bb::Opus::CIBot::Gerald::Matcher#match_5" [
        label = "block[id=5]()\l<returnMethodTemp>$3 = Solve<::Opus::CIBot::Gerald::Matcher#match#<block>> : T.untyped\l<finalReturn> = return <returnMethodTemp>$3 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Matcher#match_5" -> "bb::Opus::CIBot::Gerald::Matcher#match_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::Matcher#match_6" [
        label = "block[id=6](match_context, budget)\louterLoops: 1\l<blk>$35 = load_yield_params(::Opus::CIBot::Gerald::Matcher#match#<block>, Opus::CIBot::Gerald::Matcher#match#<block>) : TupleType {\l  0 = T.untyped\l}\l<blk>$36 = 0 : Integer(0)\lr$5 = <blk>$35.[](<blk>$36) : T.untyped\l<block-pre-call-temp>$40 = budget.time_rule(r$5) : T.untyped\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Matcher#match_6" -> "bb::Opus::CIBot::Gerald::Matcher#match_7" [style="bold"];
    "bb::Opus::CIBot::Gerald::Matcher#match_7" [
        label = "block[id=7](match_context, budget, r$5)\louterLoops: 2\l<block-call>\l"
    ];

    "bb::Opus::CIBot::Gerald::Matcher#match_7" -> "bb::Opus::CIBot::Gerald::Matcher#match_9" [style="bold"];
    "bb::Opus::CIBot::Gerald::Matcher#match_7" -> "bb::Opus::CIBot::Gerald::Matcher#match_8" [style="tapered"];

    "bb::Opus::CIBot::Gerald::Matcher#match_8" [
        label = "block[id=8](match_context, budget)\louterLoops: 1\l<blockReturnTemp>$37 = Solve<::Opus::CIBot::Gerald::Matcher#match#<block>#<block>> : T.untyped\l<blockReturnTemp>$47 = blockreturn<::Opus::CIBot::Gerald::Matcher#match#<block>> <blockReturnTemp>$37 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Matcher#match_8" -> "bb::Opus::CIBot::Gerald::Matcher#match_4" [style="bold"];
    "bb::Opus::CIBot::Gerald::Matcher#match_9" [
        label = "block[id=9](match_context, budget, r$5)\louterLoops: 2\l<blockReturnTemp>$43 = r$5.matches?(match_context) : T.untyped\l<blockReturnTemp>$46 = blockreturn<::Opus::CIBot::Gerald::Matcher#match#<block>#<block>> <blockReturnTemp>$43 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Matcher#match_9" -> "bb::Opus::CIBot::Gerald::Matcher#match_7" [style="bold"];
}

subgraph "cluster_::Opus::CIBot::Gerald::MatchContext#repo" {
    label = "::Opus::CIBot::Gerald::MatchContext#repo";
    color = blue;
    "bb::Opus::CIBot::Gerald::MatchContext#repo_0" [shape = invhouse];
    "bb::Opus::CIBot::Gerald::MatchContext#repo_1" [shape = parallelogram];

    "bb::Opus::CIBot::Gerald::MatchContext#repo_0" [
        label = "block[id=0]()\l@repo$4 = alias @repo : T.untyped\l<finalReturn> = return @repo$4 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchContext#repo_0" -> "bb::Opus::CIBot::Gerald::MatchContext#repo_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::MatchContext#repo_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchContext#repo_1" -> "bb::Opus::CIBot::Gerald::MatchContext#repo_1" [style="bold"];
}

subgraph "cluster_::Opus::CIBot::Gerald::MatchContext#assignee" {
    label = "::Opus::CIBot::Gerald::MatchContext#assignee";
    color = blue;
    "bb::Opus::CIBot::Gerald::MatchContext#assignee_0" [shape = invhouse];
    "bb::Opus::CIBot::Gerald::MatchContext#assignee_1" [shape = parallelogram];

    "bb::Opus::CIBot::Gerald::MatchContext#assignee_0" [
        label = "block[id=0]()\l@assignee$4 = alias @assignee : T.untyped\l<finalReturn> = return @assignee$4 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchContext#assignee_0" -> "bb::Opus::CIBot::Gerald::MatchContext#assignee_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::MatchContext#assignee_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchContext#assignee_1" -> "bb::Opus::CIBot::Gerald::MatchContext#assignee_1" [style="bold"];
}

subgraph "cluster_::Opus::CIBot::Gerald::MatchContext#gh_user" {
    label = "::Opus::CIBot::Gerald::MatchContext#gh_user";
    color = blue;
    "bb::Opus::CIBot::Gerald::MatchContext#gh_user_0" [shape = invhouse];
    "bb::Opus::CIBot::Gerald::MatchContext#gh_user_1" [shape = parallelogram];

    "bb::Opus::CIBot::Gerald::MatchContext#gh_user_0" [
        label = "block[id=0]()\l@gh_user$4 = alias @gh_user : T.untyped\l<finalReturn> = return @gh_user$4 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchContext#gh_user_0" -> "bb::Opus::CIBot::Gerald::MatchContext#gh_user_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::MatchContext#gh_user_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchContext#gh_user_1" -> "bb::Opus::CIBot::Gerald::MatchContext#gh_user_1" [style="bold"];
}

subgraph "cluster_::Opus::CIBot::Gerald::MatchContext#merge_branch" {
    label = "::Opus::CIBot::Gerald::MatchContext#merge_branch";
    color = blue;
    "bb::Opus::CIBot::Gerald::MatchContext#merge_branch_0" [shape = invhouse];
    "bb::Opus::CIBot::Gerald::MatchContext#merge_branch_1" [shape = parallelogram];

    "bb::Opus::CIBot::Gerald::MatchContext#merge_branch_0" [
        label = "block[id=0]()\l@merge_branch$4 = alias @merge_branch : T.untyped\l<finalReturn> = return @merge_branch$4 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchContext#merge_branch_0" -> "bb::Opus::CIBot::Gerald::MatchContext#merge_branch_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::MatchContext#merge_branch_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchContext#merge_branch_1" -> "bb::Opus::CIBot::Gerald::MatchContext#merge_branch_1" [style="bold"];
}

subgraph "cluster_::Opus::CIBot::Gerald::MatchContext#body" {
    label = "::Opus::CIBot::Gerald::MatchContext#body";
    color = blue;
    "bb::Opus::CIBot::Gerald::MatchContext#body_0" [shape = invhouse];
    "bb::Opus::CIBot::Gerald::MatchContext#body_1" [shape = parallelogram];

    "bb::Opus::CIBot::Gerald::MatchContext#body_0" [
        label = "block[id=0]()\l@body$4 = alias @body : T.untyped\l<finalReturn> = return @body$4 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchContext#body_0" -> "bb::Opus::CIBot::Gerald::MatchContext#body_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::MatchContext#body_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchContext#body_1" -> "bb::Opus::CIBot::Gerald::MatchContext#body_1" [style="bold"];
}

subgraph "cluster_::Opus::CIBot::Gerald::MatchContext#title" {
    label = "::Opus::CIBot::Gerald::MatchContext#title";
    color = blue;
    "bb::Opus::CIBot::Gerald::MatchContext#title_0" [shape = invhouse];
    "bb::Opus::CIBot::Gerald::MatchContext#title_1" [shape = parallelogram];

    "bb::Opus::CIBot::Gerald::MatchContext#title_0" [
        label = "block[id=0]()\l@title$4 = alias @title : T.untyped\l<finalReturn> = return @title$4 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchContext#title_0" -> "bb::Opus::CIBot::Gerald::MatchContext#title_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::MatchContext#title_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchContext#title_1" -> "bb::Opus::CIBot::Gerald::MatchContext#title_1" [style="bold"];
}

subgraph "cluster_::Opus::CIBot::Gerald::MatchContext#diff" {
    label = "::Opus::CIBot::Gerald::MatchContext#diff";
    color = blue;
    "bb::Opus::CIBot::Gerald::MatchContext#diff_0" [shape = invhouse];
    "bb::Opus::CIBot::Gerald::MatchContext#diff_1" [shape = parallelogram];

    "bb::Opus::CIBot::Gerald::MatchContext#diff_0" [
        label = "block[id=0]()\l@diff$4 = alias @diff : T.untyped\l<finalReturn> = return @diff$4 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchContext#diff_0" -> "bb::Opus::CIBot::Gerald::MatchContext#diff_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::MatchContext#diff_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchContext#diff_1" -> "bb::Opus::CIBot::Gerald::MatchContext#diff_1" [style="bold"];
}

subgraph "cluster_::Opus::CIBot::Gerald::MatchContext#openapi_diff" {
    label = "::Opus::CIBot::Gerald::MatchContext#openapi_diff";
    color = blue;
    "bb::Opus::CIBot::Gerald::MatchContext#openapi_diff_0" [shape = invhouse];
    "bb::Opus::CIBot::Gerald::MatchContext#openapi_diff_1" [shape = parallelogram];

    "bb::Opus::CIBot::Gerald::MatchContext#openapi_diff_0" [
        label = "block[id=0]()\l@openapi_diff$4 = alias @openapi_diff : T.untyped\l<finalReturn> = return @openapi_diff$4 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchContext#openapi_diff_0" -> "bb::Opus::CIBot::Gerald::MatchContext#openapi_diff_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::MatchContext#openapi_diff_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchContext#openapi_diff_1" -> "bb::Opus::CIBot::Gerald::MatchContext#openapi_diff_1" [style="bold"];
}

subgraph "cluster_::Opus::CIBot::Gerald::MatchContext#initialize" {
    label = "::Opus::CIBot::Gerald::MatchContext#initialize";
    color = blue;
    "bb::Opus::CIBot::Gerald::MatchContext#initialize_0" [shape = invhouse];
    "bb::Opus::CIBot::Gerald::MatchContext#initialize_1" [shape = parallelogram];

    "bb::Opus::CIBot::Gerald::MatchContext#initialize_0" [
        label = "block[id=0]()\l@repo$5 = alias @repo : T.untyped\l@assignee$7 = alias @assignee : T.untyped\l@gh_user$9 = alias @gh_user : T.untyped\l@merge_branch$11 = alias @merge_branch : T.untyped\l@body$13 = alias @body : T.untyped\l@title$15 = alias @title : T.untyped\l@diff$17 = alias @diff : T.untyped\l@openapi_diff$18 = alias @openapi_diff : T.untyped\l<selfMethodTemp>$3 = self : Opus::CIBot::Gerald::MatchContext\lrepo = load_arg(<selfMethodTemp>$3#initialize, 0) : T.untyped\lassignee = load_arg(<selfMethodTemp>$3#initialize, 1) : T.untyped\lgh_user = load_arg(<selfMethodTemp>$3#initialize, 2) : T.untyped\lmerge_branch = load_arg(<selfMethodTemp>$3#initialize, 3) : T.untyped\lbody = load_arg(<selfMethodTemp>$3#initialize, 4) : T.untyped\ltitle = load_arg(<selfMethodTemp>$3#initialize, 5) : T.untyped\ldiff = load_arg(<selfMethodTemp>$3#initialize, 6) : T.untyped\lopenapi_diff = load_arg(<selfMethodTemp>$3#initialize, 7) : T.untyped\l@repo$5 = repo : T.untyped\l@assignee$7 = assignee : T.untyped\l@gh_user$9 = gh_user : T.untyped\l@merge_branch$11 = merge_branch : T.untyped\l@body$13 = body : T.untyped\l@title$15 = title : T.untyped\l@diff$17 = diff : T.untyped\l@openapi_diff$18 = openapi_diff : T.untyped\l<finalReturn> = return @openapi_diff$18 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchContext#initialize_0" -> "bb::Opus::CIBot::Gerald::MatchContext#initialize_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::MatchContext#initialize_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchContext#initialize_1" -> "bb::Opus::CIBot::Gerald::MatchContext#initialize_1" [style="bold"];
}

subgraph "cluster_::Opus::CIBot::Gerald::MatchContext#user_stripe_suffix?" {
    label = "::Opus::CIBot::Gerald::MatchContext#user_stripe_suffix?";
    color = blue;
    "bb::Opus::CIBot::Gerald::MatchContext#user_stripe_suffix?_0" [shape = invhouse];
    "bb::Opus::CIBot::Gerald::MatchContext#user_stripe_suffix?_1" [shape = parallelogram];

    "bb::Opus::CIBot::Gerald::MatchContext#user_stripe_suffix?_0" [
        label = "block[id=0]()\l@repo$6 = alias @repo : T.untyped\l<statTemp>$7 = \"stripe-internal/\" : String(\"stripe-internal/\")\l<statTemp>$4 = @repo$6.start_with?(<statTemp>$7) : T.untyped\l<returnMethodTemp>$2 = <statTemp>$4.!() : T.untyped\l<finalReturn> = return <returnMethodTemp>$2 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchContext#user_stripe_suffix?_0" -> "bb::Opus::CIBot::Gerald::MatchContext#user_stripe_suffix?_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::MatchContext#user_stripe_suffix?_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchContext#user_stripe_suffix?_1" -> "bb::Opus::CIBot::Gerald::MatchContext#user_stripe_suffix?_1" [style="bold"];
}

subgraph "cluster_::Opus::CIBot::Gerald::MatchTimeBudget#initialize" {
    label = "::Opus::CIBot::Gerald::MatchTimeBudget#initialize";
    color = blue;
    "bb::Opus::CIBot::Gerald::MatchTimeBudget#initialize_0" [shape = invhouse];
    "bb::Opus::CIBot::Gerald::MatchTimeBudget#initialize_1" [shape = parallelogram];

    "bb::Opus::CIBot::Gerald::MatchTimeBudget#initialize_0" [
        label = "block[id=0]()\l<constant:Time>$6 = alias <constant:Time> : <Class:Time>\l@start$4 = alias @start : T.untyped\l@start$4 = <constant:Time>$6.now() : Time\l<finalReturn> = return @start$4 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchTimeBudget#initialize_0" -> "bb::Opus::CIBot::Gerald::MatchTimeBudget#initialize_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::MatchTimeBudget#initialize_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchTimeBudget#initialize_1" -> "bb::Opus::CIBot::Gerald::MatchTimeBudget#initialize_1" [style="bold"];
}

subgraph "cluster_::Opus::CIBot::Gerald::MatchTimeBudget#check!" {
    label = "::Opus::CIBot::Gerald::MatchTimeBudget#check!";
    color = blue;
    "bb::Opus::CIBot::Gerald::MatchTimeBudget#check!_0" [shape = invhouse];
    "bb::Opus::CIBot::Gerald::MatchTimeBudget#check!_1" [shape = parallelogram];

    "bb::Opus::CIBot::Gerald::MatchTimeBudget#check!_0" [
        label = "block[id=0]()\l<constant:Time>$8 = alias <constant:Time> : <Class:Time>\l<constant:MatchTimeout>$19 = alias <constant:MatchTimeout> : <Class:Opus::CIBot::Gerald::MatchTimeout>\l<constant:TOTAL_TIME_MS>$15 = alias <constant:TOTAL_TIME_MS> : Integer(10000)\l@start$10 = alias @start : T.untyped\l<statTemp>$6 = <constant:Time>$8.now() : Time\l<statTemp>$5 = <statTemp>$6.-(@start$10) : Float\l<statTemp>$11 = 1000 : Integer(1000)\ldur_ms = <statTemp>$5.*(<statTemp>$11) : Float\l<ifTemp>$12 = dur_ms.>(<constant:TOTAL_TIME_MS>$15) : TrueClass | FalseClass\l<ifTemp>$12\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchTimeBudget#check!_0" -> "bb::Opus::CIBot::Gerald::MatchTimeBudget#check!_2" [style="bold"];
    "bb::Opus::CIBot::Gerald::MatchTimeBudget#check!_0" -> "bb::Opus::CIBot::Gerald::MatchTimeBudget#check!_4" [style="tapered"];

    "bb::Opus::CIBot::Gerald::MatchTimeBudget#check!_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchTimeBudget#check!_1" -> "bb::Opus::CIBot::Gerald::MatchTimeBudget#check!_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::MatchTimeBudget#check!_2" [
        label = "block[id=2](<constant:MatchTimeout>$19, <constant:TOTAL_TIME_MS>$15)\l<statTemp>$16 = self : Opus::CIBot::Gerald::MatchTimeBudget\l<statTemp>$23 = \"Gerald match time budged exceeded \" : String(\"Gerald match time budged exceeded \")\l<statTemp>$24 = <constant:TOTAL_TIME_MS>$15.to_s() : String\l<statTemp>$22 = <statTemp>$23.concat(<statTemp>$24) : String\l<statTemp>$27 = \"ms\" : String(\"ms\")\l<statTemp>$26 = <statTemp>$27.to_s() : String\l<statTemp>$21 = <statTemp>$22.concat(<statTemp>$26) : String\l<statTemp>$20 = <statTemp>$21.to_s() : String\l<statTemp>$17 = <constant:MatchTimeout>$19.new(<statTemp>$20) : Opus::CIBot::Gerald::MatchTimeout\l<returnMethodTemp>$2 = <statTemp>$16.raise(<statTemp>$17) : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchTimeBudget#check!_2" -> "bb::Opus::CIBot::Gerald::MatchTimeBudget#check!_4" [style="bold"];
    "bb::Opus::CIBot::Gerald::MatchTimeBudget#check!_4" [
        label = "block[id=4](<returnMethodTemp>$2)\l<finalReturn> = return <returnMethodTemp>$2 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchTimeBudget#check!_4" -> "bb::Opus::CIBot::Gerald::MatchTimeBudget#check!_1" [style="bold"];
}

subgraph "cluster_::Opus::CIBot::Gerald::MatchTimeBudget#time_rule" {
    label = "::Opus::CIBot::Gerald::MatchTimeBudget#time_rule";
    color = blue;
    "bb::Opus::CIBot::Gerald::MatchTimeBudget#time_rule_0" [shape = invhouse];
    "bb::Opus::CIBot::Gerald::MatchTimeBudget#time_rule_1" [shape = parallelogram];

    "bb::Opus::CIBot::Gerald::MatchTimeBudget#time_rule_0" [
        label = "block[id=0]()\l<constant:<Magic>>$51 = alias <constant:<Magic>> : <Magic>\l<constant:Time>$6 = alias <constant:Time> : <Class:Time>\l<constant:MatchTimeout>$24 = alias <constant:MatchTimeout> : <Class:Opus::CIBot::Gerald::MatchTimeout>\l<constant:PER_RULE_MS>$20 = alias <constant:PER_RULE_MS> : Integer(2000)\l<selfMethodTemp>$3 = self : Opus::CIBot::Gerald::MatchTimeBudget\lrule = load_arg(<selfMethodTemp>$3#time_rule, 0) : T.untyped\l<blk> = load_arg(<selfMethodTemp>$3#time_rule, 1) : T.untyped\lrule_start = <constant:Time>$6.now() : Time\lres = <blk>.call(<statTemp>$9) : T.untyped\l<statTemp>$12 = <constant:Time>$6.now() : Time\l<statTemp>$11 = <statTemp>$12.-(rule_start) : Float\l<statTemp>$15 = 1000 : Integer(1000)\ldur_ms = <statTemp>$11.*(<statTemp>$15) : Float\l<ifTemp>$17 = dur_ms.>(<constant:PER_RULE_MS>$20) : TrueClass | FalseClass\l<ifTemp>$17\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchTimeBudget#time_rule_0" -> "bb::Opus::CIBot::Gerald::MatchTimeBudget#time_rule_2" [style="bold"];
    "bb::Opus::CIBot::Gerald::MatchTimeBudget#time_rule_0" -> "bb::Opus::CIBot::Gerald::MatchTimeBudget#time_rule_4" [style="tapered"];

    "bb::Opus::CIBot::Gerald::MatchTimeBudget#time_rule_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchTimeBudget#time_rule_1" -> "bb::Opus::CIBot::Gerald::MatchTimeBudget#time_rule_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::MatchTimeBudget#time_rule_2" [
        label = "block[id=2](<constant:<Magic>>$51, <constant:MatchTimeout>$24, <constant:PER_RULE_MS>$20, dur_ms, rule, res)\l<statTemp>$21 = self : Opus::CIBot::Gerald::MatchTimeBudget\l<statTemp>$32 = \"Gerald rule \'\" : String(\"Gerald rule \'\")\l<statTemp>$34 = rule.token() : T.untyped\l<statTemp>$33 = <statTemp>$34.to_s() : T.untyped\l<statTemp>$31 = <statTemp>$32.concat(<statTemp>$33) : String\l<statTemp>$37 = \"\' exceeded per-rule time budget actual=\" : String(\"\' exceeded per-rule time budget actual=\")\l<statTemp>$36 = <statTemp>$37.to_s() : String\l<statTemp>$30 = <statTemp>$31.concat(<statTemp>$36) : String\l<statTemp>$39 = dur_ms.to_i() : Integer\l<statTemp>$38 = <statTemp>$39.to_s() : String\l<statTemp>$29 = <statTemp>$30.concat(<statTemp>$38) : String\l<statTemp>$42 = \"ms budget=\" : String(\"ms budget=\")\l<statTemp>$41 = <statTemp>$42.to_s() : String\l<statTemp>$28 = <statTemp>$29.concat(<statTemp>$41) : String\l<statTemp>$43 = <constant:PER_RULE_MS>$20.to_s() : String\l<statTemp>$27 = <statTemp>$28.concat(<statTemp>$43) : String\l<statTemp>$46 = \"ms\" : String(\"ms\")\l<statTemp>$45 = <statTemp>$46.to_s() : String\l<statTemp>$26 = <statTemp>$27.concat(<statTemp>$45) : String\l<statTemp>$25 = <statTemp>$26.to_s() : String\l<hashTemp>$48 = :\"rule_token\" : Symbol(:\"rule_token\")\l<hashTemp>$49 = rule.token() : T.untyped\l<statTemp>$47 = <constant:<Magic>>$51.<build-hash>(<hashTemp>$48, <hashTemp>$49) : ShapeType {\l  Symbol(:\"rule_token\") => T.untyped\l}\l<statTemp>$22 = <constant:MatchTimeout>$24.new(<statTemp>$25, <statTemp>$47) : Opus::CIBot::Gerald::MatchTimeout\l<statTemp>$16 = <statTemp>$21.raise(<statTemp>$22) : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchTimeBudget#time_rule_2" -> "bb::Opus::CIBot::Gerald::MatchTimeBudget#time_rule_4" [style="bold"];
    "bb::Opus::CIBot::Gerald::MatchTimeBudget#time_rule_4" [
        label = "block[id=4](res)\l<statTemp>$53 = self : Opus::CIBot::Gerald::MatchTimeBudget\l<statTemp>$52 = <statTemp>$53.check!() : T.untyped\l<finalReturn> = return res : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::MatchTimeBudget#time_rule_4" -> "bb::Opus::CIBot::Gerald::MatchTimeBudget#time_rule_1" [style="bold"];
}

subgraph "cluster_::Opus::CIBot::Gerald::Diff#initialize" {
    label = "::Opus::CIBot::Gerald::Diff#initialize";
    color = blue;
    "bb::Opus::CIBot::Gerald::Diff#initialize_0" [shape = invhouse];
    "bb::Opus::CIBot::Gerald::Diff#initialize_1" [shape = parallelogram];

    "bb::Opus::CIBot::Gerald::Diff#initialize_0" [
        label = "block[id=0]()\l@raw$5 = alias @raw : T.untyped\l@parsed$6 = alias @parsed : T.untyped\l<selfMethodTemp>$3 = self : Opus::CIBot::Gerald::Diff\lraw_diff = load_arg(<selfMethodTemp>$3#initialize, 0) : T.untyped\l@raw$5 = raw_diff : T.untyped\l<statTemp>$7 = self : Opus::CIBot::Gerald::Diff\l@parsed$6 = <statTemp>$7.parse(raw_diff) : T.untyped\l<finalReturn> = return @parsed$6 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#initialize_0" -> "bb::Opus::CIBot::Gerald::Diff#initialize_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#initialize_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#initialize_1" -> "bb::Opus::CIBot::Gerald::Diff#initialize_1" [style="bold"];
}

subgraph "cluster_::Opus::CIBot::Gerald::Diff#affected_files" {
    label = "::Opus::CIBot::Gerald::Diff#affected_files";
    color = blue;
    "bb::Opus::CIBot::Gerald::Diff#affected_files_0" [shape = invhouse];
    "bb::Opus::CIBot::Gerald::Diff#affected_files_1" [shape = parallelogram];

    "bb::Opus::CIBot::Gerald::Diff#affected_files_0" [
        label = "block[id=0]()\l<statTemp>$6 = self : Opus::CIBot::Gerald::Diff\l<statTemp>$5 = <statTemp>$6.added_files() : T.untyped\l<statTemp>$8 = self : Opus::CIBot::Gerald::Diff\l<statTemp>$7 = <statTemp>$8.deleted_files() : T.untyped\l<statTemp>$4 = <statTemp>$5.+(<statTemp>$7) : T.untyped\l<statTemp>$10 = self : Opus::CIBot::Gerald::Diff\l<statTemp>$9 = <statTemp>$10.changed_files() : T.untyped\l<returnMethodTemp>$2 = <statTemp>$4.+(<statTemp>$9) : T.untyped\l<finalReturn> = return <returnMethodTemp>$2 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#affected_files_0" -> "bb::Opus::CIBot::Gerald::Diff#affected_files_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#affected_files_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#affected_files_1" -> "bb::Opus::CIBot::Gerald::Diff#affected_files_1" [style="bold"];
}

subgraph "cluster_::Opus::CIBot::Gerald::Diff#added_files" {
    label = "::Opus::CIBot::Gerald::Diff#added_files";
    color = blue;
    "bb::Opus::CIBot::Gerald::Diff#added_files_0" [shape = invhouse];
    "bb::Opus::CIBot::Gerald::Diff#added_files_1" [shape = parallelogram];

    "bb::Opus::CIBot::Gerald::Diff#added_files_0" [
        label = "block[id=0]()\l@parsed$8 = alias @parsed : T.untyped\l<block-pre-call-temp>$9 = @parsed$8.select() : T.untyped\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#added_files_0" -> "bb::Opus::CIBot::Gerald::Diff#added_files_2" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#added_files_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#added_files_1" -> "bb::Opus::CIBot::Gerald::Diff#added_files_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#added_files_2" [
        label = "block[id=2]()\louterLoops: 1\l<block-call>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#added_files_2" -> "bb::Opus::CIBot::Gerald::Diff#added_files_4" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#added_files_2" -> "bb::Opus::CIBot::Gerald::Diff#added_files_3" [style="tapered"];

    "bb::Opus::CIBot::Gerald::Diff#added_files_3" [
        label = "block[id=3]()\l<statTemp>$6 = Solve<::Opus::CIBot::Gerald::Diff#added_files#<block>> : T.untyped\l<block-pre-call-temp>$18 = <statTemp>$6.map() : T.untyped\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#added_files_3" -> "bb::Opus::CIBot::Gerald::Diff#added_files_5" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#added_files_4" [
        label = "block[id=4]()\louterLoops: 1\l<blk>$10 = load_yield_params(::Opus::CIBot::Gerald::Diff#added_files#<block>, Opus::CIBot::Gerald::Diff#added_files#<block>) : TupleType {\l  0 = T.untyped\l}\l<blk>$11 = 0 : Integer(0)\lpart$4 = <blk>$10.[](<blk>$11) : T.untyped\l<statTemp>$15 = :\"a_name\" : Symbol(:\"a_name\")\l<statTemp>$13 = part$4.[](<statTemp>$15) : T.untyped\l<statTemp>$16 = \"/dev/null\" : String(\"/dev/null\")\l<blockReturnTemp>$12 = <statTemp>$13.==(<statTemp>$16) : T.untyped\l<blockReturnTemp>$17 = blockreturn<::Opus::CIBot::Gerald::Diff#added_files#<block>> <blockReturnTemp>$12 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#added_files_4" -> "bb::Opus::CIBot::Gerald::Diff#added_files_2" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#added_files_5" [
        label = "block[id=5]()\louterLoops: 1\l<block-call>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#added_files_5" -> "bb::Opus::CIBot::Gerald::Diff#added_files_7" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#added_files_5" -> "bb::Opus::CIBot::Gerald::Diff#added_files_6" [style="tapered"];

    "bb::Opus::CIBot::Gerald::Diff#added_files_6" [
        label = "block[id=6]()\l<returnMethodTemp>$4 = Solve<::Opus::CIBot::Gerald::Diff#added_files#<block>> : T.untyped\l<finalReturn> = return <returnMethodTemp>$4 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#added_files_6" -> "bb::Opus::CIBot::Gerald::Diff#added_files_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#added_files_7" [
        label = "block[id=7]()\louterLoops: 1\l<blk>$19 = load_yield_params(::Opus::CIBot::Gerald::Diff#added_files#<block>, Opus::CIBot::Gerald::Diff#added_files#<block>) : TupleType {\l  0 = T.untyped\l}\l<blk>$20 = 0 : Integer(0)\lpart$5 = <blk>$19.[](<blk>$20) : T.untyped\l<statTemp>$23 = :\"b_name\" : Symbol(:\"b_name\")\l<blockReturnTemp>$21 = part$5.[](<statTemp>$23) : T.untyped\l<blockReturnTemp>$24 = blockreturn<::Opus::CIBot::Gerald::Diff#added_files#<block>> <blockReturnTemp>$21 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#added_files_7" -> "bb::Opus::CIBot::Gerald::Diff#added_files_5" [style="bold"];
}

subgraph "cluster_::Opus::CIBot::Gerald::Diff#deleted_files" {
    label = "::Opus::CIBot::Gerald::Diff#deleted_files";
    color = blue;
    "bb::Opus::CIBot::Gerald::Diff#deleted_files_0" [shape = invhouse];
    "bb::Opus::CIBot::Gerald::Diff#deleted_files_1" [shape = parallelogram];

    "bb::Opus::CIBot::Gerald::Diff#deleted_files_0" [
        label = "block[id=0]()\l@parsed$8 = alias @parsed : T.untyped\l<block-pre-call-temp>$9 = @parsed$8.select() : T.untyped\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#deleted_files_0" -> "bb::Opus::CIBot::Gerald::Diff#deleted_files_2" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#deleted_files_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#deleted_files_1" -> "bb::Opus::CIBot::Gerald::Diff#deleted_files_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#deleted_files_2" [
        label = "block[id=2]()\louterLoops: 1\l<block-call>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#deleted_files_2" -> "bb::Opus::CIBot::Gerald::Diff#deleted_files_4" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#deleted_files_2" -> "bb::Opus::CIBot::Gerald::Diff#deleted_files_3" [style="tapered"];

    "bb::Opus::CIBot::Gerald::Diff#deleted_files_3" [
        label = "block[id=3]()\l<statTemp>$6 = Solve<::Opus::CIBot::Gerald::Diff#deleted_files#<block>> : T.untyped\l<block-pre-call-temp>$18 = <statTemp>$6.map() : T.untyped\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#deleted_files_3" -> "bb::Opus::CIBot::Gerald::Diff#deleted_files_5" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#deleted_files_4" [
        label = "block[id=4]()\louterLoops: 1\l<blk>$10 = load_yield_params(::Opus::CIBot::Gerald::Diff#deleted_files#<block>, Opus::CIBot::Gerald::Diff#deleted_files#<block>) : TupleType {\l  0 = T.untyped\l}\l<blk>$11 = 0 : Integer(0)\lpart$7 = <blk>$10.[](<blk>$11) : T.untyped\l<statTemp>$15 = :\"b_name\" : Symbol(:\"b_name\")\l<statTemp>$13 = part$7.[](<statTemp>$15) : T.untyped\l<statTemp>$16 = \"/dev/null\" : String(\"/dev/null\")\l<blockReturnTemp>$12 = <statTemp>$13.==(<statTemp>$16) : T.untyped\l<blockReturnTemp>$17 = blockreturn<::Opus::CIBot::Gerald::Diff#deleted_files#<block>> <blockReturnTemp>$12 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#deleted_files_4" -> "bb::Opus::CIBot::Gerald::Diff#deleted_files_2" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#deleted_files_5" [
        label = "block[id=5]()\louterLoops: 1\l<block-call>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#deleted_files_5" -> "bb::Opus::CIBot::Gerald::Diff#deleted_files_7" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#deleted_files_5" -> "bb::Opus::CIBot::Gerald::Diff#deleted_files_6" [style="tapered"];

    "bb::Opus::CIBot::Gerald::Diff#deleted_files_6" [
        label = "block[id=6]()\l<returnMethodTemp>$4 = Solve<::Opus::CIBot::Gerald::Diff#deleted_files#<block>> : T.untyped\l<finalReturn> = return <returnMethodTemp>$4 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#deleted_files_6" -> "bb::Opus::CIBot::Gerald::Diff#deleted_files_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#deleted_files_7" [
        label = "block[id=7]()\louterLoops: 1\l<blk>$19 = load_yield_params(::Opus::CIBot::Gerald::Diff#deleted_files#<block>, Opus::CIBot::Gerald::Diff#deleted_files#<block>) : TupleType {\l  0 = T.untyped\l}\l<blk>$20 = 0 : Integer(0)\lpart$8 = <blk>$19.[](<blk>$20) : T.untyped\l<statTemp>$23 = :\"a_name\" : Symbol(:\"a_name\")\l<blockReturnTemp>$21 = part$8.[](<statTemp>$23) : T.untyped\l<blockReturnTemp>$24 = blockreturn<::Opus::CIBot::Gerald::Diff#deleted_files#<block>> <blockReturnTemp>$21 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#deleted_files_7" -> "bb::Opus::CIBot::Gerald::Diff#deleted_files_5" [style="bold"];
}

subgraph "cluster_::Opus::CIBot::Gerald::Diff#changed_files" {
    label = "::Opus::CIBot::Gerald::Diff#changed_files";
    color = blue;
    "bb::Opus::CIBot::Gerald::Diff#changed_files_0" [shape = invhouse];
    "bb::Opus::CIBot::Gerald::Diff#changed_files_1" [shape = parallelogram];

    "bb::Opus::CIBot::Gerald::Diff#changed_files_0" [
        label = "block[id=0]()\l@parsed$8 = alias @parsed : T.untyped\l<block-pre-call-temp>$9 = @parsed$8.select() : T.untyped\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#changed_files_0" -> "bb::Opus::CIBot::Gerald::Diff#changed_files_2" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#changed_files_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#changed_files_1" -> "bb::Opus::CIBot::Gerald::Diff#changed_files_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#changed_files_2" [
        label = "block[id=2]()\louterLoops: 1\l<block-call>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#changed_files_2" -> "bb::Opus::CIBot::Gerald::Diff#changed_files_4" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#changed_files_2" -> "bb::Opus::CIBot::Gerald::Diff#changed_files_3" [style="tapered"];

    "bb::Opus::CIBot::Gerald::Diff#changed_files_3" [
        label = "block[id=3]()\l<statTemp>$6 = Solve<::Opus::CIBot::Gerald::Diff#changed_files#<block>> : T.untyped\l<block-pre-call-temp>$20 = <statTemp>$6.map() : T.untyped\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#changed_files_3" -> "bb::Opus::CIBot::Gerald::Diff#changed_files_5" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#changed_files_4" [
        label = "block[id=4]()\louterLoops: 1\l<blk>$10 = load_yield_params(::Opus::CIBot::Gerald::Diff#changed_files#<block>, Opus::CIBot::Gerald::Diff#changed_files#<block>) : TupleType {\l  0 = T.untyped\l}\l<blk>$11 = 0 : Integer(0)\lpart$10 = <blk>$10.[](<blk>$11) : T.untyped\l<statTemp>$15 = :\"a_name\" : Symbol(:\"a_name\")\l<statTemp>$13 = part$10.[](<statTemp>$15) : T.untyped\l<statTemp>$18 = :\"b_name\" : Symbol(:\"b_name\")\l<statTemp>$16 = part$10.[](<statTemp>$18) : T.untyped\l<blockReturnTemp>$12 = <statTemp>$13.==(<statTemp>$16) : T.untyped\l<blockReturnTemp>$19 = blockreturn<::Opus::CIBot::Gerald::Diff#changed_files#<block>> <blockReturnTemp>$12 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#changed_files_4" -> "bb::Opus::CIBot::Gerald::Diff#changed_files_2" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#changed_files_5" [
        label = "block[id=5]()\louterLoops: 1\l<block-call>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#changed_files_5" -> "bb::Opus::CIBot::Gerald::Diff#changed_files_7" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#changed_files_5" -> "bb::Opus::CIBot::Gerald::Diff#changed_files_6" [style="tapered"];

    "bb::Opus::CIBot::Gerald::Diff#changed_files_6" [
        label = "block[id=6]()\l<returnMethodTemp>$4 = Solve<::Opus::CIBot::Gerald::Diff#changed_files#<block>> : T.untyped\l<finalReturn> = return <returnMethodTemp>$4 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#changed_files_6" -> "bb::Opus::CIBot::Gerald::Diff#changed_files_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#changed_files_7" [
        label = "block[id=7]()\louterLoops: 1\l<blk>$21 = load_yield_params(::Opus::CIBot::Gerald::Diff#changed_files#<block>, Opus::CIBot::Gerald::Diff#changed_files#<block>) : TupleType {\l  0 = T.untyped\l}\l<blk>$22 = 0 : Integer(0)\lpart$11 = <blk>$21.[](<blk>$22) : T.untyped\l<statTemp>$25 = :\"b_name\" : Symbol(:\"b_name\")\l<blockReturnTemp>$23 = part$11.[](<statTemp>$25) : T.untyped\l<blockReturnTemp>$26 = blockreturn<::Opus::CIBot::Gerald::Diff#changed_files#<block>> <blockReturnTemp>$23 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#changed_files_7" -> "bb::Opus::CIBot::Gerald::Diff#changed_files_5" [style="bold"];
}

subgraph "cluster_::Opus::CIBot::Gerald::Diff#added_lines" {
    label = "::Opus::CIBot::Gerald::Diff#added_lines";
    color = blue;
    "bb::Opus::CIBot::Gerald::Diff#added_lines_0" [shape = invhouse];
    "bb::Opus::CIBot::Gerald::Diff#added_lines_1" [shape = parallelogram];

    "bb::Opus::CIBot::Gerald::Diff#added_lines_0" [
        label = "block[id=0]()\l@parsed$7 = alias @parsed : T.untyped\l<block-pre-call-temp>$8 = @parsed$7.map() : T.untyped\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#added_lines_0" -> "bb::Opus::CIBot::Gerald::Diff#added_lines_2" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#added_lines_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#added_lines_1" -> "bb::Opus::CIBot::Gerald::Diff#added_lines_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#added_lines_2" [
        label = "block[id=2]()\louterLoops: 1\l<block-call>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#added_lines_2" -> "bb::Opus::CIBot::Gerald::Diff#added_lines_4" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#added_lines_2" -> "bb::Opus::CIBot::Gerald::Diff#added_lines_3" [style="tapered"];

    "bb::Opus::CIBot::Gerald::Diff#added_lines_3" [
        label = "block[id=3]()\l<statTemp>$5 = Solve<::Opus::CIBot::Gerald::Diff#added_lines#<block>> : T.untyped\l<returnMethodTemp>$3 = <statTemp>$5.flatten() : T.untyped\l<finalReturn> = return <returnMethodTemp>$3 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#added_lines_3" -> "bb::Opus::CIBot::Gerald::Diff#added_lines_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#added_lines_4" [
        label = "block[id=4]()\louterLoops: 1\l<blk>$9 = load_yield_params(::Opus::CIBot::Gerald::Diff#added_lines#<block>, Opus::CIBot::Gerald::Diff#added_lines#<block>) : TupleType {\l  0 = T.untyped\l}\l<blk>$10 = 0 : Integer(0)\lpart$13 = <blk>$9.[](<blk>$10) : T.untyped\l<statTemp>$13 = :\"added_lines\" : Symbol(:\"added_lines\")\l<blockReturnTemp>$11 = part$13.[](<statTemp>$13) : T.untyped\l<blockReturnTemp>$14 = blockreturn<::Opus::CIBot::Gerald::Diff#added_lines#<block>> <blockReturnTemp>$11 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#added_lines_4" -> "bb::Opus::CIBot::Gerald::Diff#added_lines_2" [style="bold"];
}

subgraph "cluster_::Opus::CIBot::Gerald::Diff#removed_lines" {
    label = "::Opus::CIBot::Gerald::Diff#removed_lines";
    color = blue;
    "bb::Opus::CIBot::Gerald::Diff#removed_lines_0" [shape = invhouse];
    "bb::Opus::CIBot::Gerald::Diff#removed_lines_1" [shape = parallelogram];

    "bb::Opus::CIBot::Gerald::Diff#removed_lines_0" [
        label = "block[id=0]()\l@parsed$7 = alias @parsed : T.untyped\l<block-pre-call-temp>$8 = @parsed$7.map() : T.untyped\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#removed_lines_0" -> "bb::Opus::CIBot::Gerald::Diff#removed_lines_2" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#removed_lines_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#removed_lines_1" -> "bb::Opus::CIBot::Gerald::Diff#removed_lines_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#removed_lines_2" [
        label = "block[id=2]()\louterLoops: 1\l<block-call>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#removed_lines_2" -> "bb::Opus::CIBot::Gerald::Diff#removed_lines_4" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#removed_lines_2" -> "bb::Opus::CIBot::Gerald::Diff#removed_lines_3" [style="tapered"];

    "bb::Opus::CIBot::Gerald::Diff#removed_lines_3" [
        label = "block[id=3]()\l<statTemp>$5 = Solve<::Opus::CIBot::Gerald::Diff#removed_lines#<block>> : T.untyped\l<returnMethodTemp>$3 = <statTemp>$5.flatten() : T.untyped\l<finalReturn> = return <returnMethodTemp>$3 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#removed_lines_3" -> "bb::Opus::CIBot::Gerald::Diff#removed_lines_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#removed_lines_4" [
        label = "block[id=4]()\louterLoops: 1\l<blk>$9 = load_yield_params(::Opus::CIBot::Gerald::Diff#removed_lines#<block>, Opus::CIBot::Gerald::Diff#removed_lines#<block>) : TupleType {\l  0 = T.untyped\l}\l<blk>$10 = 0 : Integer(0)\lpart$15 = <blk>$9.[](<blk>$10) : T.untyped\l<statTemp>$13 = :\"removed_lines\" : Symbol(:\"removed_lines\")\l<blockReturnTemp>$11 = part$15.[](<statTemp>$13) : T.untyped\l<blockReturnTemp>$14 = blockreturn<::Opus::CIBot::Gerald::Diff#removed_lines#<block>> <blockReturnTemp>$11 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#removed_lines_4" -> "bb::Opus::CIBot::Gerald::Diff#removed_lines_2" [style="bold"];
}

subgraph "cluster_::Opus::CIBot::Gerald::Diff#changed_lines" {
    label = "::Opus::CIBot::Gerald::Diff#changed_lines";
    color = blue;
    "bb::Opus::CIBot::Gerald::Diff#changed_lines_0" [shape = invhouse];
    "bb::Opus::CIBot::Gerald::Diff#changed_lines_1" [shape = parallelogram];

    "bb::Opus::CIBot::Gerald::Diff#changed_lines_0" [
        label = "block[id=0]()\l<statTemp>$5 = self : Opus::CIBot::Gerald::Diff\l<statTemp>$4 = <statTemp>$5.added_lines() : T.untyped\l<statTemp>$7 = self : Opus::CIBot::Gerald::Diff\l<statTemp>$6 = <statTemp>$7.removed_lines() : T.untyped\l<returnMethodTemp>$2 = <statTemp>$4.+(<statTemp>$6) : T.untyped\l<finalReturn> = return <returnMethodTemp>$2 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#changed_lines_0" -> "bb::Opus::CIBot::Gerald::Diff#changed_lines_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#changed_lines_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#changed_lines_1" -> "bb::Opus::CIBot::Gerald::Diff#changed_lines_1" [style="bold"];
}

subgraph "cluster_::Opus::CIBot::Gerald::Diff#changed_openapi?" {
    label = "::Opus::CIBot::Gerald::Diff#changed_openapi?";
    color = blue;
    "bb::Opus::CIBot::Gerald::Diff#changed_openapi?_0" [shape = invhouse];
    "bb::Opus::CIBot::Gerald::Diff#changed_openapi?_1" [shape = parallelogram];

    "bb::Opus::CIBot::Gerald::Diff#changed_openapi?_0" [
        label = "block[id=0]()\l<constant:SPEC_PATH>$7 = alias <constant:SPEC_PATH> : T.untyped\l<statTemp>$5 = self : Opus::CIBot::Gerald::Diff\l<statTemp>$4 = <statTemp>$5.changed_files() : T.untyped\l<returnMethodTemp>$2 = <statTemp>$4.include?(<constant:SPEC_PATH>$7) : T.untyped\l<finalReturn> = return <returnMethodTemp>$2 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#changed_openapi?_0" -> "bb::Opus::CIBot::Gerald::Diff#changed_openapi?_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#changed_openapi?_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#changed_openapi?_1" -> "bb::Opus::CIBot::Gerald::Diff#changed_openapi?_1" [style="bold"];
}

subgraph "cluster_::Opus::CIBot::Gerald::Diff#parse" {
    label = "::Opus::CIBot::Gerald::Diff#parse";
    color = blue;
    "bb::Opus::CIBot::Gerald::Diff#parse_0" [shape = invhouse];
    "bb::Opus::CIBot::Gerald::Diff#parse_1" [shape = parallelogram];

    "bb::Opus::CIBot::Gerald::Diff#parse_0" [
        label = "block[id=0]()\l<constant:String>$43 = alias <constant:String> : <Class:String>\l<constant:Array>$41 = alias <constant:Array> : <Class:T::Array>\l<constant:T>$103 = alias <constant:T> : <Class:T>\l<constant:Range>$17 = alias <constant:Range> : <Class:Range>\l<constant:Regexp>$10 = alias <constant:Regexp> : <Class:Regexp>\l<constant:<Magic>>$22 = alias <constant:<Magic>> : <Magic>\l<selfMethodTemp>$4 = self : Opus::CIBot::Gerald::Diff\ldiff = load_arg(<selfMethodTemp>$4#parse, 0) : T.untyped\l<statTemp>$11 = \"^diff [^\\n]*\\n\" : String(\"^diff [^\\n]*\\n\")\l<statTemp>$13 = 0 : Integer(0)\l<statTemp>$14 = 4 : Integer(4)\l<statTemp>$12 = <statTemp>$13.|(<statTemp>$14) : Integer\l<statTemp>$8 = <constant:Regexp>$10.new(<statTemp>$11, <statTemp>$12) : Regexp\l<statTemp>$6 = diff.split(<statTemp>$8) : T.untyped\l<statTemp>$18 = 1 : Integer(1)\l<statTemp>$19 = -1 : Integer(-1)\l<statTemp>$15 = <constant:Range>$17.new(<statTemp>$18, <statTemp>$19) : AppliedType {\l  klass = ::Range\l  targs = [\l    <constant:Elem> = T.untyped\l  ]\l}\lparts = <statTemp>$6.[](<statTemp>$15) : T.untyped\lparts\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#parse_0" -> "bb::Opus::CIBot::Gerald::Diff#parse_4" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#parse_0" -> "bb::Opus::CIBot::Gerald::Diff#parse_3" [style="tapered"];

    "bb::Opus::CIBot::Gerald::Diff#parse_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#parse_1" -> "bb::Opus::CIBot::Gerald::Diff#parse_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#parse_3" [
        label = "block[id=3](<constant:String>$43, <constant:Array>$41, <constant:T>$103, <constant:Range>$17, <constant:<Magic>>$22)\lparts = <constant:<Magic>>$22.<build-array>() : AppliedType {\l  klass = ::Array\l  targs = [\l    <constant:Elem> = T.untyped\l  ]\l}\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#parse_3" -> "bb::Opus::CIBot::Gerald::Diff#parse_4" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#parse_4" [
        label = "block[id=4](<constant:String>$43, <constant:Array>$41, <constant:T>$103, <constant:Range>$17, <constant:<Magic>>$22, parts)\l<castTemp$24 = parts : T.untyped\lparts = cast(<castTemp$24, AppliedType {\l  klass = ::Array\l  targs = [\l    <constant:Elem> = String\l  ]\l}); : AppliedType {\l  klass = ::Array\l  targs = [\l    <constant:Elem> = String\l  ]\l}\l<block-pre-call-temp>$27 = parts.map() : AppliedType {\l  klass = ::Array\l  targs = [\l    <constant:Elem> = TypeVar(U$1)\l  ]\l}\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#parse_4" -> "bb::Opus::CIBot::Gerald::Diff#parse_5" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#parse_5" [
        label = "block[id=5](<blockReturnTemp>$53, <constant:String>$43, <constant:Array>$41, <constant:T>$103, <constant:Range>$17, <constant:<Magic>>$22, a_name$19, b_name$19)\louterLoops: 1\l<block-call>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#parse_5" -> "bb::Opus::CIBot::Gerald::Diff#parse_7" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#parse_5" -> "bb::Opus::CIBot::Gerald::Diff#parse_6" [style="tapered"];

    "bb::Opus::CIBot::Gerald::Diff#parse_6" [
        label = "block[id=6]()\l<statTemp>$25 = Solve<::Opus::CIBot::Gerald::Diff#parse#<block>> : AppliedType {\l  klass = ::Array\l  targs = [\l    <constant:Elem> = NilClass | ShapeType {\l            Symbol(:\"a_name\") => String\l            Symbol(:\"b_name\") => String | NilClass\l            Symbol(:\"added_lines\") => AppliedType {\l                klass = ::Array\l                targs = [\l                  <constant:Elem> = String\l                ]\l              }\l            Symbol(:\"removed_lines\") => AppliedType {\l                klass = ::Array\l                targs = [\l                  <constant:Elem> = String\l                ]\l              }\l          }\l  ]\l}\l<returnMethodTemp>$3 = <statTemp>$25.compact() : AppliedType {\l  klass = ::Array\l  targs = [\l    <constant:Elem> = ShapeType {\l        Symbol(:\"a_name\") => String\l        Symbol(:\"b_name\") => String | NilClass\l        Symbol(:\"added_lines\") => AppliedType {\l            klass = ::Array\l            targs = [\l              <constant:Elem> = String\l            ]\l          }\l        Symbol(:\"removed_lines\") => AppliedType {\l            klass = ::Array\l            targs = [\l              <constant:Elem> = String\l            ]\l          }\l      }\l  ]\l}\l<finalReturn> = return <returnMethodTemp>$3 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#parse_6" -> "bb::Opus::CIBot::Gerald::Diff#parse_1" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#parse_7" [
        label = "block[id=7](<blockReturnTemp>$53, <constant:String>$43, <constant:Array>$41, <constant:T>$103, <constant:Range>$17, <constant:<Magic>>$22, a_name$19, b_name$19)\louterLoops: 1\l<blk>$28 = load_yield_params(::Opus::CIBot::Gerald::Diff#parse#<block>, Opus::CIBot::Gerald::Diff#parse#<block>) : TupleType {\l  0 = String\l}\l<blk>$29 = 0 : Integer(0)\lpart$19 = <blk>$28.[](<blk>$29) : String\l<statTemp>$33 = \"\l\" : String(\"\l\")\llines$19 = part$19.split(<statTemp>$33) : AppliedType {\l  klass = ::Array\l  targs = [\l    <constant:Elem> = String\l  ]\l}\l<castTemp$35 = nil : NilClass\la_name$19 = cast(<castTemp$35, String | NilClass); : String | NilClass\l<castTemp$37 = nil : NilClass\lb_name$19 = cast(<castTemp$37, String | NilClass); : String | NilClass\l<statTemp>$39 = <constant:Array>$41.[](<constant:String>$43) : MetaType\ladded_lines$19 = <statTemp>$39.new() : AppliedType {\l  klass = ::Array\l  targs = [\l    <constant:Elem> = String\l  ]\l}\l<statTemp>$45 = <constant:Array>$41.[](<constant:String>$43) : MetaType\lremoved_lines$19 = <statTemp>$45.new() : AppliedType {\l  klass = ::Array\l  targs = [\l    <constant:Elem> = String\l  ]\l}\l<block-pre-call-temp>$50 = lines$19.each() : AppliedType {\l  klass = ::Array\l  targs = [\l    <constant:Elem> = String\l  ]\l}\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#parse_7" -> "bb::Opus::CIBot::Gerald::Diff#parse_8" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#parse_8" [
        label = "block[id=8](<blockReturnTemp>$53, <constant:String>$43, <constant:Array>$41, <constant:T>$103, <constant:Range>$17, <constant:<Magic>>$22, a_name$19, b_name$19, added_lines$19, removed_lines$19)\louterLoops: 2\l<block-call>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#parse_8" -> "bb::Opus::CIBot::Gerald::Diff#parse_10" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#parse_8" -> "bb::Opus::CIBot::Gerald::Diff#parse_9" [style="tapered"];

    "bb::Opus::CIBot::Gerald::Diff#parse_9" [
        label = "block[id=9](<blockReturnTemp>$53, <constant:String>$43, <constant:Array>$41, <constant:T>$103, <constant:Range>$17, <constant:<Magic>>$22, a_name$19, b_name$19, added_lines$19, removed_lines$19)\louterLoops: 1\l<statTemp>$48 = Solve<::Opus::CIBot::Gerald::Diff#parse#<block>#<block>> : AppliedType {\l  klass = ::Array\l  targs = [\l    <constant:Elem> = String\l  ]\l}\l<ifTemp>$124 = a_name$19.nil?() : TrueClass | FalseClass\l<ifTemp>$124\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#parse_9" -> "bb::Opus::CIBot::Gerald::Diff#parse_37" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#parse_9" -> "bb::Opus::CIBot::Gerald::Diff#parse_38" [style="tapered"];

    "bb::Opus::CIBot::Gerald::Diff#parse_10" [
        label = "block[id=10](<blockReturnTemp>$53, <constant:String>$43, <constant:Array>$41, <constant:T>$103, <constant:Range>$17, <constant:<Magic>>$22, a_name$19, b_name$19, added_lines$19, removed_lines$19)\louterLoops: 2\l<blk>$51 = load_yield_params(::Opus::CIBot::Gerald::Diff#parse#<block>#<block>, Opus::CIBot::Gerald::Diff#parse#<block>#<block>) : TupleType {\l  0 = String\l}\l<blk>$52 = 0 : Integer(0)\lline$20 = <blk>$51.[](<blk>$52) : String\l<statTemp>$56 = \"index \" : String(\"index \")\l<statTemp>$57 = \"@@\" : String(\"@@\")\l<statTemp>$58 = \"new file mode\" : String(\"new file mode\")\l<ifTemp>$54 = line$20.start_with?(<statTemp>$56, <statTemp>$57, <statTemp>$58) : TrueClass | FalseClass\l<ifTemp>$54\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#parse_10" -> "bb::Opus::CIBot::Gerald::Diff#parse_11" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#parse_10" -> "bb::Opus::CIBot::Gerald::Diff#parse_12" [style="tapered"];

    "bb::Opus::CIBot::Gerald::Diff#parse_11" [
        label = "block[id=11](<blockReturnTemp>$53, <constant:String>$43, <constant:Array>$41, <constant:T>$103, <constant:Range>$17, <constant:<Magic>>$22, a_name$19, b_name$19, added_lines$19, removed_lines$19)\louterLoops: 2\l<blockReturnTemp>$60 = blockreturn<::Opus::CIBot::Gerald::Diff#parse#<block>#<block>> <blockReturnTemp>$59 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#parse_11" -> "bb::Opus::CIBot::Gerald::Diff#parse_8" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#parse_12" [
        label = "block[id=12](<blockReturnTemp>$53, <constant:String>$43, <constant:Array>$41, <constant:T>$103, <constant:Range>$17, <constant:<Magic>>$22, a_name$19, b_name$19, added_lines$19, removed_lines$19, line$20)\louterLoops: 2\l<statTemp>$63 = \"---\" : String(\"---\")\l<ifTemp>$61 = line$20.start_with?(<statTemp>$63) : TrueClass | FalseClass\l<ifTemp>$61\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#parse_12" -> "bb::Opus::CIBot::Gerald::Diff#parse_13" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#parse_12" -> "bb::Opus::CIBot::Gerald::Diff#parse_14" [style="tapered"];

    "bb::Opus::CIBot::Gerald::Diff#parse_13" [
        label = "block[id=13](<blockReturnTemp>$53, <constant:String>$43, <constant:Array>$41, <constant:T>$103, <constant:Range>$17, <constant:<Magic>>$22, a_name$19, b_name$19, added_lines$19, removed_lines$19, line$20)\louterLoops: 2\l<statTemp>$68 = 4 : Integer(4)\l<statTemp>$69 = -1 : Integer(-1)\l<statTemp>$66 = <constant:Range>$17.new(<statTemp>$68, <statTemp>$69) : AppliedType {\l  klass = ::Range\l  targs = [\l    <constant:Elem> = T.untyped\l  ]\l}\la_name$19 = line$20.[](<statTemp>$66) : String | NilClass\la_name$19\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#parse_13" -> "bb::Opus::CIBot::Gerald::Diff#parse_15" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#parse_13" -> "bb::Opus::CIBot::Gerald::Diff#parse_16" [style="tapered"];

    "bb::Opus::CIBot::Gerald::Diff#parse_14" [
        label = "block[id=14](<blockReturnTemp>$53, <constant:String>$43, <constant:Array>$41, <constant:T>$103, <constant:Range>$17, <constant:<Magic>>$22, a_name$19, b_name$19, added_lines$19, removed_lines$19, line$20)\louterLoops: 2\l<statTemp>$81 = \"+++\" : String(\"+++\")\l<ifTemp>$79 = line$20.start_with?(<statTemp>$81) : TrueClass | FalseClass\l<ifTemp>$79\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#parse_14" -> "bb::Opus::CIBot::Gerald::Diff#parse_21" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#parse_14" -> "bb::Opus::CIBot::Gerald::Diff#parse_22" [style="tapered"];

    "bb::Opus::CIBot::Gerald::Diff#parse_15" [
        label = "block[id=15](<blockReturnTemp>$53, <constant:String>$43, <constant:Array>$41, <constant:T>$103, <constant:Range>$17, <constant:<Magic>>$22, a_name$19, b_name$19, added_lines$19, removed_lines$19)\louterLoops: 2\l<statTemp>$73 = \"a/\" : String(\"a/\")\l<ifTemp>$70 = a_name$19.start_with?(<statTemp>$73) : TrueClass | FalseClass\l<ifTemp>$70\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#parse_15" -> "bb::Opus::CIBot::Gerald::Diff#parse_18" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#parse_15" -> "bb::Opus::CIBot::Gerald::Diff#parse_36" [style="tapered"];

    "bb::Opus::CIBot::Gerald::Diff#parse_16" [
        label = "block[id=16](<blockReturnTemp>$53, <constant:String>$43, <constant:Array>$41, <constant:T>$103, <constant:Range>$17, <constant:<Magic>>$22, a_name$19, b_name$19, added_lines$19, removed_lines$19)\louterLoops: 2\l<ifTemp>$70 = a_name$19 : NilClass\l<ifTemp>$70\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#parse_16" -> "bb::Opus::CIBot::Gerald::Diff#parse_18" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#parse_16" -> "bb::Opus::CIBot::Gerald::Diff#parse_36" [style="tapered"];

    "bb::Opus::CIBot::Gerald::Diff#parse_18" [
        label = "block[id=18](<constant:String>$43, <constant:Array>$41, <constant:T>$103, <constant:Range>$17, <constant:<Magic>>$22, a_name$19, b_name$19, added_lines$19, removed_lines$19)\louterLoops: 2\l<statTemp>$74 = a_name$19 : String\l<statTemp>$77 = 2 : Integer(2)\l<statTemp>$78 = -1 : Integer(-1)\l<statTemp>$75 = <constant:Range>$17.new(<statTemp>$77, <statTemp>$78) : AppliedType {\l  klass = ::Range\l  targs = [\l    <constant:Elem> = T.untyped\l  ]\l}\la_name$19 = <statTemp>$74.[](<statTemp>$75) : String | NilClass\l<blockReturnTemp>$53 = a_name$19 : String | NilClass\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#parse_18" -> "bb::Opus::CIBot::Gerald::Diff#parse_36" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#parse_21" [
        label = "block[id=21](<blockReturnTemp>$53, <constant:String>$43, <constant:Array>$41, <constant:T>$103, <constant:Range>$17, <constant:<Magic>>$22, a_name$19, b_name$19, added_lines$19, removed_lines$19, line$20)\louterLoops: 2\l<statTemp>$86 = 4 : Integer(4)\l<statTemp>$87 = -1 : Integer(-1)\l<statTemp>$84 = <constant:Range>$17.new(<statTemp>$86, <statTemp>$87) : AppliedType {\l  klass = ::Range\l  targs = [\l    <constant:Elem> = T.untyped\l  ]\l}\lb_name$19 = line$20.[](<statTemp>$84) : String | NilClass\lb_name$19\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#parse_21" -> "bb::Opus::CIBot::Gerald::Diff#parse_23" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#parse_21" -> "bb::Opus::CIBot::Gerald::Diff#parse_24" [style="tapered"];

    "bb::Opus::CIBot::Gerald::Diff#parse_22" [
        label = "block[id=22](<blockReturnTemp>$53, <constant:String>$43, <constant:Array>$41, <constant:T>$103, <constant:Range>$17, <constant:<Magic>>$22, a_name$19, b_name$19, added_lines$19, removed_lines$19, line$20)\louterLoops: 2\l<statTemp>$99 = \"+\" : String(\"+\")\l<ifTemp>$97 = line$20.start_with?(<statTemp>$99) : TrueClass | FalseClass\l<ifTemp>$97\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#parse_22" -> "bb::Opus::CIBot::Gerald::Diff#parse_29" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#parse_22" -> "bb::Opus::CIBot::Gerald::Diff#parse_30" [style="tapered"];

    "bb::Opus::CIBot::Gerald::Diff#parse_23" [
        label = "block[id=23](<blockReturnTemp>$53, <constant:String>$43, <constant:Array>$41, <constant:T>$103, <constant:Range>$17, <constant:<Magic>>$22, a_name$19, b_name$19, added_lines$19, removed_lines$19)\louterLoops: 2\l<statTemp>$91 = \"b/\" : String(\"b/\")\l<ifTemp>$88 = b_name$19.start_with?(<statTemp>$91) : TrueClass | FalseClass\l<ifTemp>$88\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#parse_23" -> "bb::Opus::CIBot::Gerald::Diff#parse_26" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#parse_23" -> "bb::Opus::CIBot::Gerald::Diff#parse_36" [style="tapered"];

    "bb::Opus::CIBot::Gerald::Diff#parse_24" [
        label = "block[id=24](<blockReturnTemp>$53, <constant:String>$43, <constant:Array>$41, <constant:T>$103, <constant:Range>$17, <constant:<Magic>>$22, a_name$19, b_name$19, added_lines$19, removed_lines$19)\louterLoops: 2\l<ifTemp>$88 = b_name$19 : NilClass\l<ifTemp>$88\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#parse_24" -> "bb::Opus::CIBot::Gerald::Diff#parse_26" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#parse_24" -> "bb::Opus::CIBot::Gerald::Diff#parse_36" [style="tapered"];

    "bb::Opus::CIBot::Gerald::Diff#parse_26" [
        label = "block[id=26](<constant:String>$43, <constant:Array>$41, <constant:T>$103, <constant:Range>$17, <constant:<Magic>>$22, a_name$19, b_name$19, added_lines$19, removed_lines$19)\louterLoops: 2\l<statTemp>$92 = b_name$19 : String\l<statTemp>$95 = 2 : Integer(2)\l<statTemp>$96 = -1 : Integer(-1)\l<statTemp>$93 = <constant:Range>$17.new(<statTemp>$95, <statTemp>$96) : AppliedType {\l  klass = ::Range\l  targs = [\l    <constant:Elem> = T.untyped\l  ]\l}\lb_name$19 = <statTemp>$92.[](<statTemp>$93) : String | NilClass\l<blockReturnTemp>$53 = b_name$19 : String | NilClass\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#parse_26" -> "bb::Opus::CIBot::Gerald::Diff#parse_36" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#parse_29" [
        label = "block[id=29](<constant:String>$43, <constant:Array>$41, <constant:T>$103, <constant:Range>$17, <constant:<Magic>>$22, a_name$19, b_name$19, added_lines$19, removed_lines$19, line$20)\louterLoops: 2\l<statTemp>$108 = 1 : Integer(1)\l<statTemp>$109 = -1 : Integer(-1)\l<statTemp>$106 = <constant:Range>$17.new(<statTemp>$108, <statTemp>$109) : AppliedType {\l  klass = ::Range\l  targs = [\l    <constant:Elem> = T.untyped\l  ]\l}\l<statTemp>$104 = line$20.[](<statTemp>$106) : String | NilClass\l<statTemp>$101 = <constant:T>$103.must(<statTemp>$104) : String\l<blockReturnTemp>$53 = added_lines$19.<<(<statTemp>$101) : AppliedType {\l  klass = ::Array\l  targs = [\l    <constant:Elem> = String\l  ]\l}\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#parse_29" -> "bb::Opus::CIBot::Gerald::Diff#parse_36" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#parse_30" [
        label = "block[id=30](<blockReturnTemp>$53, <constant:String>$43, <constant:Array>$41, <constant:T>$103, <constant:Range>$17, <constant:<Magic>>$22, a_name$19, b_name$19, added_lines$19, removed_lines$19, line$20)\louterLoops: 2\l<statTemp>$112 = \"-\" : String(\"-\")\l<ifTemp>$110 = line$20.start_with?(<statTemp>$112) : TrueClass | FalseClass\l<ifTemp>$110\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#parse_30" -> "bb::Opus::CIBot::Gerald::Diff#parse_31" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#parse_30" -> "bb::Opus::CIBot::Gerald::Diff#parse_36" [style="tapered"];

    "bb::Opus::CIBot::Gerald::Diff#parse_31" [
        label = "block[id=31](<constant:String>$43, <constant:Array>$41, <constant:T>$103, <constant:Range>$17, <constant:<Magic>>$22, a_name$19, b_name$19, added_lines$19, removed_lines$19, line$20)\louterLoops: 2\l<statTemp>$120 = 1 : Integer(1)\l<statTemp>$121 = -1 : Integer(-1)\l<statTemp>$118 = <constant:Range>$17.new(<statTemp>$120, <statTemp>$121) : AppliedType {\l  klass = ::Range\l  targs = [\l    <constant:Elem> = T.untyped\l  ]\l}\l<statTemp>$116 = line$20.[](<statTemp>$118) : String | NilClass\l<statTemp>$114 = <constant:T>$103.must(<statTemp>$116) : String\l<blockReturnTemp>$53 = removed_lines$19.<<(<statTemp>$114) : AppliedType {\l  klass = ::Array\l  targs = [\l    <constant:Elem> = String\l  ]\l}\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#parse_31" -> "bb::Opus::CIBot::Gerald::Diff#parse_36" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#parse_36" [
        label = "block[id=36](<blockReturnTemp>$53, <constant:String>$43, <constant:Array>$41, <constant:T>$103, <constant:Range>$17, <constant:<Magic>>$22, a_name$19, b_name$19, added_lines$19, removed_lines$19)\louterLoops: 2\l<blockReturnTemp>$122 = blockreturn<::Opus::CIBot::Gerald::Diff#parse#<block>#<block>> <blockReturnTemp>$53 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#parse_36" -> "bb::Opus::CIBot::Gerald::Diff#parse_8" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#parse_37" [
        label = "block[id=37](<blockReturnTemp>$53, <constant:String>$43, <constant:Array>$41, <constant:T>$103, <constant:Range>$17, <constant:<Magic>>$22, a_name$19, b_name$19)\louterLoops: 1\l<blockReturnTemp>$127 = blockreturn<::Opus::CIBot::Gerald::Diff#parse#<block>> <blockReturnTemp>$126 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#parse_37" -> "bb::Opus::CIBot::Gerald::Diff#parse_5" [style="bold"];
    "bb::Opus::CIBot::Gerald::Diff#parse_38" [
        label = "block[id=38](<blockReturnTemp>$53, <constant:String>$43, <constant:Array>$41, <constant:T>$103, <constant:Range>$17, <constant:<Magic>>$22, a_name$19, b_name$19, added_lines$19, removed_lines$19)\louterLoops: 1\l<hashTemp>$128 = :\"a_name\" : Symbol(:\"a_name\")\l<hashTemp>$130 = :\"b_name\" : Symbol(:\"b_name\")\l<hashTemp>$132 = :\"added_lines\" : Symbol(:\"added_lines\")\l<hashTemp>$134 = :\"removed_lines\" : Symbol(:\"removed_lines\")\l<blockReturnTemp>$30 = <constant:<Magic>>$22.<build-hash>(<hashTemp>$128, a_name$19, <hashTemp>$130, b_name$19, <hashTemp>$132, added_lines$19, <hashTemp>$134, removed_lines$19) : ShapeType {\l  Symbol(:\"a_name\") => String\l  Symbol(:\"b_name\") => String | NilClass\l  Symbol(:\"added_lines\") => AppliedType {\l      klass = ::Array\l      targs = [\l        <constant:Elem> = String\l      ]\l    }\l  Symbol(:\"removed_lines\") => AppliedType {\l      klass = ::Array\l      targs = [\l        <constant:Elem> = String\l      ]\l    }\l}\l<blockReturnTemp>$136 = blockreturn<::Opus::CIBot::Gerald::Diff#parse#<block>> <blockReturnTemp>$30 : <impossible>\l<unconditional>\l"
    ];

    "bb::Opus::CIBot::Gerald::Diff#parse_38" -> "bb::Opus::CIBot::Gerald::Diff#parse_5" [style="bold"];
}

}

