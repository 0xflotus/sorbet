class <emptyTree><<C <U <root>>>> < ()
  <emptyTree>

  <emptyTree>

  <emptyTree>

  <emptyTree>

  <emptyTree>

  <emptyTree>

  <emptyTree>

  <emptyTree>

  def <U baz1><<U baz1>>(<blk>)
    begin
      <U a> = "foo"
      <U b> = <U a>.<U getbyte>(<U a>)
    end
  end

  def <U baz2><<U baz2>>(<blk>)
    begin
      <U a> = "foo"
      <U b> = <U a>.<U getbyte>("foo")
    end
  end

  def <U baz3><<U baz3>>(<blk>)
    <U b> = "foo".<U getbyte>("foo")
  end

  def <U baz4><<U baz4>>(<blk>)
    <U b> = <U <self>>.<U a>().<U getbyte>("foo")
  end

  def <U baz5><<U baz5>>(cond, <blk>)
    begin
      if <U cond>
        <U b> = 1
      else
        <U b> = "foo"
      end
      <U b> = <U b>.<U getbyte>(1)
    end
  end

  def <U baz6><<U baz6>>(cond, <blk>)
    begin
      if <U cond>
        <U b> = 1
      else
        <U b> = "foo"
      end
      <U b> = "foo".<U getbyte>(<U b>)
    end
  end

  def <U baz7><<U baz7>>(cond, <blk>)
    begin
      if <U cond>
        <U b> = 1
      else
        <emptyTree>
      end
      <U b> = "foo".<U getbyte>(<U b>)
    end
  end

  def <U baz8><<U baz8>>(<blk>)
    while true
      <U b> = 1
    end
  end
end
