digraph "loops.rb"{
subgraph "cluster_::<constant:HasLoops>#variable_only_inside_loop" {
    label = "::<constant:HasLoops>#variable_only_inside_loop";
    color = blue;
    bb101_0 [shape = invhouse];
    bb101_1 [shape = parallelogram];

    bb101_0 [label = "()\n<unconditional>"];
    bb101_0 -> bb101_2;
    bb101_1 [label = "()\n<unconditional>"];
    bb101_1 -> bb101_1;
    bb101_2 [label = "()\nouterLoops: 1\nwhileTmp$2 = true : TrueClass(true)\nwhileTmp$2"];
    bb101_2 -> bb101_3;
    bb101_2 -> bb101_4;

    bb101_3 [label = "()\nouterLoops: 1\na = 1 : Integer(1)\n<unconditional>"];
    bb101_3 -> bb101_2;
    bb101_4 [label = "()\n<ret>$0 = nil : NilClass\n<ret>$4 = return <ret>$0 : <bottom>\n<unconditional>"];
    bb101_4 -> bb101_1;
}

subgraph "cluster_::<constant:HasLoops>#incorrect_assignment" {
    label = "::<constant:HasLoops>#incorrect_assignment";
    color = blue;
    bb102_0 [shape = invhouse];
    bb102_1 [shape = parallelogram];

    bb102_0 [label = "(a)\na = s : String(\"s\")\n<unconditional>"];
    bb102_0 -> bb102_2;
    bb102_1 [label = "()\n<unconditional>"];
    bb102_1 -> bb102_1;
    bb102_2 [label = "(a)\nouterLoops: 1\nwhileTmp$3 = false : FalseClass(false)\nwhileTmp$3"];
    bb102_2 -> bb102_3;
    bb102_2 -> bb102_4;

    bb102_3 [label = "(a)\nouterLoops: 1\na = 1 : untyped\n<unconditional>"];
    bb102_3 -> bb102_2;
    bb102_4 [label = "()\n<ret>$1 = nil : NilClass\n<ret>$5 = return <ret>$1 : <bottom>\n<unconditional>"];
    bb102_4 -> bb102_1;
}

subgraph "cluster_::<constant:HasLoops>#correct_assignment" {
    label = "::<constant:HasLoops>#correct_assignment";
    color = blue;
    bb103_0 [shape = invhouse];
    bb103_1 [shape = parallelogram];

    bb103_0 [label = "(a)\na = s : String(\"s\")\n<unconditional>"];
    bb103_0 -> bb103_2;
    bb103_1 [label = "()\n<unconditional>"];
    bb103_1 -> bb103_1;
    bb103_2 [label = "(a)\nouterLoops: 1\nwhileTmp$3 = false : FalseClass(false)\nwhileTmp$3"];
    bb103_2 -> bb103_3;
    bb103_2 -> bb103_4;

    bb103_3 [label = "(a)\nouterLoops: 1\na = a : String(\"a\")\n<unconditional>"];
    bb103_3 -> bb103_2;
    bb103_4 [label = "()\n<ret>$2 = nil : NilClass\n<ret>$5 = return <ret>$2 : <bottom>\n<unconditional>"];
    bb103_4 -> bb103_1;
}

}

