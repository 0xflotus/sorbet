digraph "simple.rb" {
subgraph "cluster_::ControlFlow#orZero0" {
    label = "::ControlFlow#orZero0";
    color = blue;
    "bb::ControlFlow#orZero0_0" [shape = invhouse];
    "bb::ControlFlow#orZero0_1" [shape = parallelogram];

    "bb::ControlFlow#orZero0_0" [
        label = "block[id=0]()\l<selfMethodTemp>$3: ControlFlow = self\la: T.nilable(Integer) = load_arg(<selfMethodTemp>$3, ControlFlow#orZero0#a)\la: T.nilable(Integer)\l"
    ];

    "bb::ControlFlow#orZero0_0" -> "bb::ControlFlow#orZero0_2" [style="bold"];
    "bb::ControlFlow#orZero0_0" -> "bb::ControlFlow#orZero0_3" [style="tapered"];

    "bb::ControlFlow#orZero0_1" [
        label = "block[id=1](<returnMethodTemp>$2)\l<finalReturn> = return <returnMethodTemp>$2\l<unconditional>\l"
    ];

    "bb::ControlFlow#orZero0_1" -> "bb::ControlFlow#orZero0_1" [style="bold"];
    "bb::ControlFlow#orZero0_2" [
        label = "block[id=2](a: Integer)\l<returnMethodTemp>$2: <impossible> = return a: Integer\l<unconditional>\l"
    ];

    "bb::ControlFlow#orZero0_2" -> "bb::ControlFlow#orZero0_1" [style="bold"];
    "bb::ControlFlow#orZero0_3" [
        label = "block[id=3]()\l<returnTemp>$6: Integer(0) = 0\l<returnMethodTemp>$2: <impossible> = return <returnTemp>$6: Integer(0)\l<unconditional>\l"
    ];

    "bb::ControlFlow#orZero0_3" -> "bb::ControlFlow#orZero0_1" [style="bold"];
}

subgraph "cluster_::ControlFlow#orZero0a" {
    label = "::ControlFlow#orZero0a";
    color = blue;
    "bb::ControlFlow#orZero0a_0" [shape = invhouse];
    "bb::ControlFlow#orZero0a_1" [shape = parallelogram];

    "bb::ControlFlow#orZero0a_0" [
        label = "block[id=0]()\l<selfMethodTemp>$3: ControlFlow = self\la: Integer = load_arg(<selfMethodTemp>$3, ControlFlow#orZero0a#a)\la: Integer\l"
    ];

    "bb::ControlFlow#orZero0a_0" -> "bb::ControlFlow#orZero0a_2" [style="bold"];
    "bb::ControlFlow#orZero0a_0" -> "bb::ControlFlow#orZero0a_3" [style="tapered"];

    "bb::ControlFlow#orZero0a_1" [
        label = "block[id=1](<returnMethodTemp>$2)\l<finalReturn> = return <returnMethodTemp>$2\l<unconditional>\l"
    ];

    "bb::ControlFlow#orZero0a_1" -> "bb::ControlFlow#orZero0a_1" [style="bold"];
    "bb::ControlFlow#orZero0a_2" [
        label = "block[id=2](a: Integer)\l<returnMethodTemp>$2: <impossible> = return a: Integer\l<unconditional>\l"
    ];

    "bb::ControlFlow#orZero0a_2" -> "bb::ControlFlow#orZero0a_1" [style="bold"];
    "bb::ControlFlow#orZero0a_3" [
        label = "block[id=3]()\l<returnTemp>$6 = 0\l<returnMethodTemp>$2 = return <returnTemp>$6\l<unconditional>\l"
    ];

    "bb::ControlFlow#orZero0a_3" -> "bb::ControlFlow#orZero0a_1" [style="bold"];
}

subgraph "cluster_::ControlFlow#orZero0n" {
    label = "::ControlFlow#orZero0n";
    color = blue;
    "bb::ControlFlow#orZero0n_0" [shape = invhouse];
    "bb::ControlFlow#orZero0n_1" [shape = parallelogram];

    "bb::ControlFlow#orZero0n_0" [
        label = "block[id=0]()\l<selfMethodTemp>$3: ControlFlow = self\la: T.nilable(Integer) = load_arg(<selfMethodTemp>$3, ControlFlow#orZero0n#a)\lb: T.any(TrueClass, FalseClass) = a: T.nilable(Integer).!()\lb: T.any(TrueClass, FalseClass)\l"
    ];

    "bb::ControlFlow#orZero0n_0" -> "bb::ControlFlow#orZero0n_2" [style="bold"];
    "bb::ControlFlow#orZero0n_0" -> "bb::ControlFlow#orZero0n_3" [style="tapered"];

    "bb::ControlFlow#orZero0n_1" [
        label = "block[id=1](<returnMethodTemp>$2)\l<finalReturn> = return <returnMethodTemp>$2\l<unconditional>\l"
    ];

    "bb::ControlFlow#orZero0n_1" -> "bb::ControlFlow#orZero0n_1" [style="bold"];
    "bb::ControlFlow#orZero0n_2" [
        label = "block[id=2]()\l<returnTemp>$7: Integer(0) = 0\l<returnMethodTemp>$2: <impossible> = return <returnTemp>$7: Integer(0)\l<unconditional>\l"
    ];

    "bb::ControlFlow#orZero0n_2" -> "bb::ControlFlow#orZero0n_1" [style="bold"];
    "bb::ControlFlow#orZero0n_3" [
        label = "block[id=3](a: Integer)\l<returnMethodTemp>$2: <impossible> = return a: Integer\l<unconditional>\l"
    ];

    "bb::ControlFlow#orZero0n_3" -> "bb::ControlFlow#orZero0n_1" [style="bold"];
}

subgraph "cluster_::ControlFlow#orZero1n" {
    label = "::ControlFlow#orZero1n";
    color = blue;
    "bb::ControlFlow#orZero1n_0" [shape = invhouse];
    "bb::ControlFlow#orZero1n_1" [shape = parallelogram];

    "bb::ControlFlow#orZero1n_0" [
        label = "block[id=0]()\l<selfMethodTemp>$3: ControlFlow = self\la: T.nilable(Integer) = load_arg(<selfMethodTemp>$3, ControlFlow#orZero1n#a)\l<statTemp>$7: <Class:Integer> = alias <constant:Integer>\l<statTemp>$5: T.any(TrueClass, FalseClass) = a: T.nilable(Integer).is_a?(<statTemp>$7: <Class:Integer>)\lb: T.any(TrueClass, FalseClass) = <statTemp>$5: T.any(TrueClass, FalseClass).!()\lb: T.any(TrueClass, FalseClass)\l"
    ];

    "bb::ControlFlow#orZero1n_0" -> "bb::ControlFlow#orZero1n_2" [style="bold"];
    "bb::ControlFlow#orZero1n_0" -> "bb::ControlFlow#orZero1n_3" [style="tapered"];

    "bb::ControlFlow#orZero1n_1" [
        label = "block[id=1](<returnMethodTemp>$2)\l<finalReturn> = return <returnMethodTemp>$2\l<unconditional>\l"
    ];

    "bb::ControlFlow#orZero1n_1" -> "bb::ControlFlow#orZero1n_1" [style="bold"];
    "bb::ControlFlow#orZero1n_2" [
        label = "block[id=2]()\l<returnTemp>$9: Integer(0) = 0\l<returnMethodTemp>$2: <impossible> = return <returnTemp>$9: Integer(0)\l<unconditional>\l"
    ];

    "bb::ControlFlow#orZero1n_2" -> "bb::ControlFlow#orZero1n_1" [style="bold"];
    "bb::ControlFlow#orZero1n_3" [
        label = "block[id=3](a: Integer)\l<returnMethodTemp>$2: <impossible> = return a: Integer\l<unconditional>\l"
    ];

    "bb::ControlFlow#orZero1n_3" -> "bb::ControlFlow#orZero1n_1" [style="bold"];
}

subgraph "cluster_::ControlFlow#orZero2" {
    label = "::ControlFlow#orZero2";
    color = blue;
    "bb::ControlFlow#orZero2_0" [shape = invhouse];
    "bb::ControlFlow#orZero2_1" [shape = parallelogram];

    "bb::ControlFlow#orZero2_0" [
        label = "block[id=0]()\l<selfMethodTemp>$3: ControlFlow = self\la: T.nilable(Integer) = load_arg(<selfMethodTemp>$3, ControlFlow#orZero2#a)\la: T.nilable(Integer)\l"
    ];

    "bb::ControlFlow#orZero2_0" -> "bb::ControlFlow#orZero2_4" [style="bold"];
    "bb::ControlFlow#orZero2_0" -> "bb::ControlFlow#orZero2_3" [style="tapered"];

    "bb::ControlFlow#orZero2_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::ControlFlow#orZero2_1" -> "bb::ControlFlow#orZero2_1" [style="bold"];
    "bb::ControlFlow#orZero2_3" [
        label = "block[id=3]()\la: Integer(0) = 0\l<unconditional>\l"
    ];

    "bb::ControlFlow#orZero2_3" -> "bb::ControlFlow#orZero2_4" [style="bold"];
    "bb::ControlFlow#orZero2_4" [
        label = "block[id=4](a: Integer)\l<returnMethodTemp>$2: Integer = a\l<finalReturn>: <impossible> = return <returnMethodTemp>$2: Integer\l<unconditional>\l"
    ];

    "bb::ControlFlow#orZero2_4" -> "bb::ControlFlow#orZero2_1" [style="bold"];
}

subgraph "cluster_::ControlFlow#orZero3" {
    label = "::ControlFlow#orZero3";
    color = blue;
    "bb::ControlFlow#orZero3_0" [shape = invhouse];
    "bb::ControlFlow#orZero3_1" [shape = parallelogram];

    "bb::ControlFlow#orZero3_0" [
        label = "block[id=0]()\l<selfMethodTemp>$3: ControlFlow = self\la: T.nilable(Integer) = load_arg(<selfMethodTemp>$3, ControlFlow#orZero3#a)\la: T.nilable(Integer)\l"
    ];

    "bb::ControlFlow#orZero3_0" -> "bb::ControlFlow#orZero3_2" [style="bold"];
    "bb::ControlFlow#orZero3_0" -> "bb::ControlFlow#orZero3_3" [style="tapered"];

    "bb::ControlFlow#orZero3_1" [
        label = "block[id=1](<returnMethodTemp>$2)\l<finalReturn> = return <returnMethodTemp>$2\l<unconditional>\l"
    ];

    "bb::ControlFlow#orZero3_1" -> "bb::ControlFlow#orZero3_1" [style="bold"];
    "bb::ControlFlow#orZero3_2" [
        label = "block[id=2]()\l<statTemp>$6: Integer(1) = 1\l<statTemp>$7: Integer(2) = 2\l<ifTemp>$4: T.any(TrueClass, FalseClass) = <statTemp>$6: Integer(1).==(<statTemp>$7: Integer(2))\l<ifTemp>$4: T.any(TrueClass, FalseClass)\l"
    ];

    "bb::ControlFlow#orZero3_2" -> "bb::ControlFlow#orZero3_5" [style="bold"];
    "bb::ControlFlow#orZero3_2" -> "bb::ControlFlow#orZero3_6" [style="tapered"];

    "bb::ControlFlow#orZero3_3" [
        label = "block[id=3](a: NilClass)\l<ifTemp>$4: NilClass = a\l<ifTemp>$4: NilClass\l"
    ];

    "bb::ControlFlow#orZero3_3" -> "bb::ControlFlow#orZero3_5" [style="bold"];
    "bb::ControlFlow#orZero3_3" -> "bb::ControlFlow#orZero3_6" [style="tapered"];

    "bb::ControlFlow#orZero3_5" [
        label = "block[id=5]()\l<returnTemp>$8: Integer(1) = 1\l<returnMethodTemp>$2: <impossible> = return <returnTemp>$8: Integer(1)\l<unconditional>\l"
    ];

    "bb::ControlFlow#orZero3_5" -> "bb::ControlFlow#orZero3_1" [style="bold"];
    "bb::ControlFlow#orZero3_6" [
        label = "block[id=6]()\l<returnTemp>$9: Integer(0) = 0\l<returnMethodTemp>$2: <impossible> = return <returnTemp>$9: Integer(0)\l<unconditional>\l"
    ];

    "bb::ControlFlow#orZero3_6" -> "bb::ControlFlow#orZero3_1" [style="bold"];
}

subgraph "cluster_::ControlFlow#orZero3n" {
    label = "::ControlFlow#orZero3n";
    color = blue;
    "bb::ControlFlow#orZero3n_0" [shape = invhouse];
    "bb::ControlFlow#orZero3n_1" [shape = parallelogram];

    "bb::ControlFlow#orZero3n_0" [
        label = "block[id=0]()\l<selfMethodTemp>$3: ControlFlow = self\la: T.nilable(Integer) = load_arg(<selfMethodTemp>$3, ControlFlow#orZero3n#a)\la: T.nilable(Integer)\l"
    ];

    "bb::ControlFlow#orZero3n_0" -> "bb::ControlFlow#orZero3n_2" [style="bold"];
    "bb::ControlFlow#orZero3n_0" -> "bb::ControlFlow#orZero3n_3" [style="tapered"];

    "bb::ControlFlow#orZero3n_1" [
        label = "block[id=1](<returnMethodTemp>$2)\l<finalReturn> = return <returnMethodTemp>$2\l<unconditional>\l"
    ];

    "bb::ControlFlow#orZero3n_1" -> "bb::ControlFlow#orZero3n_1" [style="bold"];
    "bb::ControlFlow#orZero3n_2" [
        label = "block[id=2]()\l<statTemp>$7: Integer(1) = 1\l<statTemp>$8: Integer(2) = 2\l<statTemp>$5: T.any(TrueClass, FalseClass) = <statTemp>$7: Integer(1).==(<statTemp>$8: Integer(2))\l<unconditional>\l"
    ];

    "bb::ControlFlow#orZero3n_2" -> "bb::ControlFlow#orZero3n_4" [style="bold"];
    "bb::ControlFlow#orZero3n_3" [
        label = "block[id=3](a: NilClass)\l<statTemp>$5: NilClass = a\l<unconditional>\l"
    ];

    "bb::ControlFlow#orZero3n_3" -> "bb::ControlFlow#orZero3n_4" [style="bold"];
    "bb::ControlFlow#orZero3n_4" [
        label = "block[id=4](<statTemp>$5: T.nilable(T.any(TrueClass, FalseClass)))\lb: T.any(TrueClass, FalseClass) = <statTemp>$5: T.nilable(T.any(TrueClass, FalseClass)).!()\lb: T.any(TrueClass, FalseClass)\l"
    ];

    "bb::ControlFlow#orZero3n_4" -> "bb::ControlFlow#orZero3n_5" [style="bold"];
    "bb::ControlFlow#orZero3n_4" -> "bb::ControlFlow#orZero3n_6" [style="tapered"];

    "bb::ControlFlow#orZero3n_5" [
        label = "block[id=5]()\l<returnTemp>$10: Integer(0) = 0\l<returnMethodTemp>$2: <impossible> = return <returnTemp>$10: Integer(0)\l<unconditional>\l"
    ];

    "bb::ControlFlow#orZero3n_5" -> "bb::ControlFlow#orZero3n_1" [style="bold"];
    "bb::ControlFlow#orZero3n_6" [
        label = "block[id=6]()\l<returnTemp>$11: Integer(1) = 1\l<returnMethodTemp>$2: <impossible> = return <returnTemp>$11: Integer(1)\l<unconditional>\l"
    ];

    "bb::ControlFlow#orZero3n_6" -> "bb::ControlFlow#orZero3n_1" [style="bold"];
}

subgraph "cluster_::ControlFlow#orZero4" {
    label = "::ControlFlow#orZero4";
    color = blue;
    "bb::ControlFlow#orZero4_0" [shape = invhouse];
    "bb::ControlFlow#orZero4_1" [shape = parallelogram];

    "bb::ControlFlow#orZero4_0" [
        label = "block[id=0]()\l<selfMethodTemp>$3: ControlFlow = self\la: T.nilable(Integer) = load_arg(<selfMethodTemp>$3, ControlFlow#orZero4#a)\la: T.nilable(Integer)\l"
    ];

    "bb::ControlFlow#orZero4_0" -> "bb::ControlFlow#orZero4_2" [style="bold"];
    "bb::ControlFlow#orZero4_0" -> "bb::ControlFlow#orZero4_3" [style="tapered"];

    "bb::ControlFlow#orZero4_1" [
        label = "block[id=1](<returnMethodTemp>$2)\l<finalReturn> = return <returnMethodTemp>$2\l<unconditional>\l"
    ];

    "bb::ControlFlow#orZero4_1" -> "bb::ControlFlow#orZero4_1" [style="bold"];
    "bb::ControlFlow#orZero4_2" [
        label = "block[id=2](a: Integer)\l<ifTemp>$4: Integer = a\l<ifTemp>$4: Integer\l"
    ];

    "bb::ControlFlow#orZero4_2" -> "bb::ControlFlow#orZero4_5" [style="bold"];
    "bb::ControlFlow#orZero4_2" -> "bb::ControlFlow#orZero4_6" [style="tapered"];

    "bb::ControlFlow#orZero4_3" [
        label = "block[id=3](a: NilClass)\l<ifTemp>$4: TrueClass = true\l<ifTemp>$4: TrueClass\l"
    ];

    "bb::ControlFlow#orZero4_3" -> "bb::ControlFlow#orZero4_5" [style="bold"];
    "bb::ControlFlow#orZero4_3" -> "bb::ControlFlow#orZero4_6" [style="tapered"];

    "bb::ControlFlow#orZero4_5" [
        label = "block[id=5](a: T.nilable(Integer))\l<returnMethodTemp>$2: <impossible> = return a: T.nilable(Integer)\l<unconditional>\l"
    ];

    "bb::ControlFlow#orZero4_5" -> "bb::ControlFlow#orZero4_1" [style="bold"];
    "bb::ControlFlow#orZero4_6" [
        label = "block[id=6]()\l<returnTemp>$7 = 0\l<returnMethodTemp>$2 = return <returnTemp>$7\l<unconditional>\l"
    ];

    "bb::ControlFlow#orZero4_6" -> "bb::ControlFlow#orZero4_1" [style="bold"];
}

subgraph "cluster_::ControlFlow#orZero5" {
    label = "::ControlFlow#orZero5";
    color = blue;
    "bb::ControlFlow#orZero5_0" [shape = invhouse];
    "bb::ControlFlow#orZero5_1" [shape = parallelogram];

    "bb::ControlFlow#orZero5_0" [
        label = "block[id=0]()\l<selfMethodTemp>$3: ControlFlow = self\la: T.nilable(Integer) = load_arg(<selfMethodTemp>$3, ControlFlow#orZero5#a)\la: T.nilable(Integer)\l"
    ];

    "bb::ControlFlow#orZero5_0" -> "bb::ControlFlow#orZero5_2" [style="bold"];
    "bb::ControlFlow#orZero5_0" -> "bb::ControlFlow#orZero5_3" [style="tapered"];

    "bb::ControlFlow#orZero5_1" [
        label = "block[id=1](<returnMethodTemp>$2)\l<finalReturn> = return <returnMethodTemp>$2\l<unconditional>\l"
    ];

    "bb::ControlFlow#orZero5_1" -> "bb::ControlFlow#orZero5_1" [style="bold"];
    "bb::ControlFlow#orZero5_2" [
        label = "block[id=2](a: Integer)\l<ifTemp>$4: TrueClass = true\l<ifTemp>$4: TrueClass\l"
    ];

    "bb::ControlFlow#orZero5_2" -> "bb::ControlFlow#orZero5_5" [style="bold"];
    "bb::ControlFlow#orZero5_2" -> "bb::ControlFlow#orZero5_6" [style="tapered"];

    "bb::ControlFlow#orZero5_3" [
        label = "block[id=3](a: NilClass)\l<ifTemp>$4: NilClass = a\l<ifTemp>$4: NilClass\l"
    ];

    "bb::ControlFlow#orZero5_3" -> "bb::ControlFlow#orZero5_5" [style="bold"];
    "bb::ControlFlow#orZero5_3" -> "bb::ControlFlow#orZero5_6" [style="tapered"];

    "bb::ControlFlow#orZero5_5" [
        label = "block[id=5](a: Integer)\l<returnMethodTemp>$2: <impossible> = return a: Integer\l<unconditional>\l"
    ];

    "bb::ControlFlow#orZero5_5" -> "bb::ControlFlow#orZero5_1" [style="bold"];
    "bb::ControlFlow#orZero5_6" [
        label = "block[id=6]()\l<returnTemp>$7: Integer(0) = 0\l<returnMethodTemp>$2: <impossible> = return <returnTemp>$7: Integer(0)\l<unconditional>\l"
    ];

    "bb::ControlFlow#orZero5_6" -> "bb::ControlFlow#orZero5_1" [style="bold"];
}

subgraph "cluster_::ControlFlow#<static-init>" {
    label = "::ControlFlow#<static-init>";
    color = blue;
    "bb::ControlFlow#<static-init>_0" [shape = invhouse];
    "bb::ControlFlow#<static-init>_1" [shape = parallelogram];

    "bb::ControlFlow#<static-init>_0" [
        label = "block[id=0]()\l<statTemp>$6: <Class:ControlFlow> = self\l<hashTemp>$8: Symbol(:\"a\") = :\"a\"\l<statTemp>$10: <Class:T> = alias <constant:T>\l<statTemp>$11: <Class:Integer> = alias <constant:Integer>\l<statTemp>$12: <Class:NilClass> = alias <constant:NilClass>\l<hashTemp>$9: <Type: T.nilable(Integer)> = <statTemp>$10: <Class:T>.any(<statTemp>$11: <Class:Integer>, <statTemp>$12: <Class:NilClass>)\l<magic>$13: <Magic> = alias <constant:<Magic>>\l<statTemp>$7: {a: <Type: T.nilable(Integer)>} = <magic>$13: <Magic>.<build-hash>(<hashTemp>$8: Symbol(:\"a\"), <hashTemp>$9: <Type: T.nilable(Integer)>)\l<statTemp>$5: Sorbet::Private::Builder = <statTemp>$6: <Class:ControlFlow>.sig(<statTemp>$7: {a: <Type: T.nilable(Integer)>})\l<statTemp>$14: <Class:Integer> = alias <constant:Integer>\l<statTemp>$4: Sorbet::Private::Builder = <statTemp>$5: Sorbet::Private::Builder.returns(<statTemp>$14: <Class:Integer>)\l<statTemp>$17: <Class:ControlFlow> = self\l<hashTemp>$19: Symbol(:\"a\") = :\"a\"\l<hashTemp>$20: <Class:Integer> = alias <constant:Integer>\l<magic>$21: <Magic> = alias <constant:<Magic>>\l<statTemp>$18: {a: <Class:Integer>} = <magic>$21: <Magic>.<build-hash>(<hashTemp>$19: Symbol(:\"a\"), <hashTemp>$20: <Class:Integer>)\l<statTemp>$16: Sorbet::Private::Builder = <statTemp>$17: <Class:ControlFlow>.sig(<statTemp>$18: {a: <Class:Integer>})\l<statTemp>$22: <Class:Integer> = alias <constant:Integer>\l<statTemp>$15: Sorbet::Private::Builder = <statTemp>$16: Sorbet::Private::Builder.returns(<statTemp>$22: <Class:Integer>)\l<statTemp>$25: <Class:ControlFlow> = self\l<hashTemp>$27: Symbol(:\"a\") = :\"a\"\l<statTemp>$29: <Class:T> = alias <constant:T>\l<statTemp>$30: <Class:Integer> = alias <constant:Integer>\l<statTemp>$31: <Class:NilClass> = alias <constant:NilClass>\l<hashTemp>$28: <Type: T.nilable(Integer)> = <statTemp>$29: <Class:T>.any(<statTemp>$30: <Class:Integer>, <statTemp>$31: <Class:NilClass>)\l<magic>$32: <Magic> = alias <constant:<Magic>>\l<statTemp>$26: {a: <Type: T.nilable(Integer)>} = <magic>$32: <Magic>.<build-hash>(<hashTemp>$27: Symbol(:\"a\"), <hashTemp>$28: <Type: T.nilable(Integer)>)\l<statTemp>$24: Sorbet::Private::Builder = <statTemp>$25: <Class:ControlFlow>.sig(<statTemp>$26: {a: <Type: T.nilable(Integer)>})\l<statTemp>$33: <Class:Integer> = alias <constant:Integer>\l<statTemp>$23: Sorbet::Private::Builder = <statTemp>$24: Sorbet::Private::Builder.returns(<statTemp>$33: <Class:Integer>)\l<statTemp>$36: <Class:ControlFlow> = self\l<hashTemp>$38: Symbol(:\"a\") = :\"a\"\l<statTemp>$40: <Class:T> = alias <constant:T>\l<statTemp>$41: <Class:Integer> = alias <constant:Integer>\l<statTemp>$42: <Class:NilClass> = alias <constant:NilClass>\l<hashTemp>$39: <Type: T.nilable(Integer)> = <statTemp>$40: <Class:T>.any(<statTemp>$41: <Class:Integer>, <statTemp>$42: <Class:NilClass>)\l<magic>$43: <Magic> = alias <constant:<Magic>>\l<statTemp>$37: {a: <Type: T.nilable(Integer)>} = <magic>$43: <Magic>.<build-hash>(<hashTemp>$38: Symbol(:\"a\"), <hashTemp>$39: <Type: T.nilable(Integer)>)\l<statTemp>$35: Sorbet::Private::Builder = <statTemp>$36: <Class:ControlFlow>.sig(<statTemp>$37: {a: <Type: T.nilable(Integer)>})\l<statTemp>$44: <Class:Integer> = alias <constant:Integer>\l<statTemp>$34: Sorbet::Private::Builder = <statTemp>$35: Sorbet::Private::Builder.returns(<statTemp>$44: <Class:Integer>)\l<statTemp>$47: <Class:ControlFlow> = self\l<hashTemp>$49: Symbol(:\"a\") = :\"a\"\l<statTemp>$51: <Class:T> = alias <constant:T>\l<statTemp>$52: <Class:Integer> = alias <constant:Integer>\l<statTemp>$53: <Class:NilClass> = alias <constant:NilClass>\l<hashTemp>$50: <Type: T.nilable(Integer)> = <statTemp>$51: <Class:T>.any(<statTemp>$52: <Class:Integer>, <statTemp>$53: <Class:NilClass>)\l<magic>$54: <Magic> = alias <constant:<Magic>>\l<statTemp>$48: {a: <Type: T.nilable(Integer)>} = <magic>$54: <Magic>.<build-hash>(<hashTemp>$49: Symbol(:\"a\"), <hashTemp>$50: <Type: T.nilable(Integer)>)\l<statTemp>$46: Sorbet::Private::Builder = <statTemp>$47: <Class:ControlFlow>.sig(<statTemp>$48: {a: <Type: T.nilable(Integer)>})\l<statTemp>$55: <Class:Integer> = alias <constant:Integer>\l<statTemp>$45: Sorbet::Private::Builder = <statTemp>$46: Sorbet::Private::Builder.returns(<statTemp>$55: <Class:Integer>)\l<statTemp>$58: <Class:ControlFlow> = self\l<hashTemp>$60: Symbol(:\"a\") = :\"a\"\l<statTemp>$62: <Class:T> = alias <constant:T>\l<statTemp>$63: <Class:Integer> = alias <constant:Integer>\l<statTemp>$64: <Class:NilClass> = alias <constant:NilClass>\l<hashTemp>$61: <Type: T.nilable(Integer)> = <statTemp>$62: <Class:T>.any(<statTemp>$63: <Class:Integer>, <statTemp>$64: <Class:NilClass>)\l<magic>$65: <Magic> = alias <constant:<Magic>>\l<statTemp>$59: {a: <Type: T.nilable(Integer)>} = <magic>$65: <Magic>.<build-hash>(<hashTemp>$60: Symbol(:\"a\"), <hashTemp>$61: <Type: T.nilable(Integer)>)\l<statTemp>$57: Sorbet::Private::Builder = <statTemp>$58: <Class:ControlFlow>.sig(<statTemp>$59: {a: <Type: T.nilable(Integer)>})\l<statTemp>$66: <Class:Integer> = alias <constant:Integer>\l<statTemp>$56: Sorbet::Private::Builder = <statTemp>$57: Sorbet::Private::Builder.returns(<statTemp>$66: <Class:Integer>)\l<statTemp>$69: <Class:ControlFlow> = self\l<hashTemp>$71: Symbol(:\"a\") = :\"a\"\l<statTemp>$73: <Class:T> = alias <constant:T>\l<statTemp>$74: <Class:Integer> = alias <constant:Integer>\l<statTemp>$75: <Class:NilClass> = alias <constant:NilClass>\l<hashTemp>$72: <Type: T.nilable(Integer)> = <statTemp>$73: <Class:T>.any(<statTemp>$74: <Class:Integer>, <statTemp>$75: <Class:NilClass>)\l<magic>$76: <Magic> = alias <constant:<Magic>>\l<statTemp>$70: {a: <Type: T.nilable(Integer)>} = <magic>$76: <Magic>.<build-hash>(<hashTemp>$71: Symbol(:\"a\"), <hashTemp>$72: <Type: T.nilable(Integer)>)\l<statTemp>$68: Sorbet::Private::Builder = <statTemp>$69: <Class:ControlFlow>.sig(<statTemp>$70: {a: <Type: T.nilable(Integer)>})\l<statTemp>$77: <Class:Integer> = alias <constant:Integer>\l<statTemp>$67: Sorbet::Private::Builder = <statTemp>$68: Sorbet::Private::Builder.returns(<statTemp>$77: <Class:Integer>)\l<statTemp>$80: <Class:ControlFlow> = self\l<hashTemp>$82: Symbol(:\"a\") = :\"a\"\l<statTemp>$84: <Class:T> = alias <constant:T>\l<statTemp>$85: <Class:Integer> = alias <constant:Integer>\l<statTemp>$86: <Class:NilClass> = alias <constant:NilClass>\l<hashTemp>$83: <Type: T.nilable(Integer)> = <statTemp>$84: <Class:T>.any(<statTemp>$85: <Class:Integer>, <statTemp>$86: <Class:NilClass>)\l<magic>$87: <Magic> = alias <constant:<Magic>>\l<statTemp>$81: {a: <Type: T.nilable(Integer)>} = <magic>$87: <Magic>.<build-hash>(<hashTemp>$82: Symbol(:\"a\"), <hashTemp>$83: <Type: T.nilable(Integer)>)\l<statTemp>$79: Sorbet::Private::Builder = <statTemp>$80: <Class:ControlFlow>.sig(<statTemp>$81: {a: <Type: T.nilable(Integer)>})\l<statTemp>$88: <Class:Integer> = alias <constant:Integer>\l<statTemp>$78: Sorbet::Private::Builder = <statTemp>$79: Sorbet::Private::Builder.returns(<statTemp>$88: <Class:Integer>)\l<statTemp>$91: <Class:ControlFlow> = self\l<hashTemp>$93: Symbol(:\"a\") = :\"a\"\l<statTemp>$95: <Class:T> = alias <constant:T>\l<statTemp>$96: <Class:Integer> = alias <constant:Integer>\l<statTemp>$97: <Class:NilClass> = alias <constant:NilClass>\l<hashTemp>$94: <Type: T.nilable(Integer)> = <statTemp>$95: <Class:T>.any(<statTemp>$96: <Class:Integer>, <statTemp>$97: <Class:NilClass>)\l<magic>$98: <Magic> = alias <constant:<Magic>>\l<statTemp>$92: {a: <Type: T.nilable(Integer)>} = <magic>$98: <Magic>.<build-hash>(<hashTemp>$93: Symbol(:\"a\"), <hashTemp>$94: <Type: T.nilable(Integer)>)\l<statTemp>$90: Sorbet::Private::Builder = <statTemp>$91: <Class:ControlFlow>.sig(<statTemp>$92: {a: <Type: T.nilable(Integer)>})\l<statTemp>$99: <Class:Integer> = alias <constant:Integer>\l<statTemp>$89: Sorbet::Private::Builder = <statTemp>$90: Sorbet::Private::Builder.returns(<statTemp>$99: <Class:Integer>)\l<finalReturn>: <impossible> = return <returnMethodTemp>$2: NilClass\l<unconditional>\l"
    ];

    "bb::ControlFlow#<static-init>_0" -> "bb::ControlFlow#<static-init>_1" [style="bold"];
    "bb::ControlFlow#<static-init>_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::ControlFlow#<static-init>_1" -> "bb::ControlFlow#<static-init>_1" [style="bold"];
}

}

