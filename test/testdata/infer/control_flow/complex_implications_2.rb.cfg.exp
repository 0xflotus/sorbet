digraph "complex_implications_2.rb" {
subgraph "cluster_::Object#foo" {
    label = "::Object#foo";
    color = blue;
    "bb::Object#foo_0" [shape = invhouse];
    "bb::Object#foo_1" [shape = parallelogram];

    "bb::Object#foo_0" [
        label = "block[id=0]()\l<U foo>: T.untyped = load_arg(Object#foo#foo)\l<U foo>: T.untyped\l"
    ];

    "bb::Object#foo_0" -> "bb::Object#foo_2" [style="bold"];
    "bb::Object#foo_0" -> "bb::Object#foo_7" [style="tapered"];

    "bb::Object#foo_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Object#foo_1" -> "bb::Object#foo_1" [style="bold"];
    "bb::Object#foo_2" [
        label = "block[id=2](<U foo>: T.untyped)\l<U <statTemp>>$7: T.class_of(StandardError) = alias <C <U StandardError>>\l<U bar>: T.untyped = <U foo>: T.untyped.<U is_a?>(<U <statTemp>>$7: T.class_of(StandardError))\l<U bar>: T.untyped\l"
    ];

    "bb::Object#foo_2" -> "bb::Object#foo_4" [style="bold"];
    "bb::Object#foo_2" -> "bb::Object#foo_7" [style="tapered"];

    "bb::Object#foo_4" [
        label = "block[id=4](<U foo>: StandardError)\l<U e>: StandardError = <U foo>\l<U err>: StandardError = <U e>\l<unconditional>\l"
    ];

    "bb::Object#foo_4" -> "bb::Object#foo_7" [style="bold"];
    "bb::Object#foo_7" [
        label = "block[id=7](<U err>: T.nilable(StandardError))\l<U junk>: T.nilable(StandardError) = <U err>\l<U err>: T.nilable(StandardError)\l"
    ];

    "bb::Object#foo_7" -> "bb::Object#foo_8" [style="bold"];
    "bb::Object#foo_7" -> "bb::Object#foo_10" [style="tapered"];

    "bb::Object#foo_8" [
        label = "block[id=8]()\l<U <returnMethodTemp>>$2: Integer(1) = 1\l<unconditional>\l"
    ];

    "bb::Object#foo_8" -> "bb::Object#foo_10" [style="bold"];
    "bb::Object#foo_10" [
        label = "block[id=10](<U <returnMethodTemp>>$2: T.nilable(Integer))\l<U <finalReturn>>: T.noreturn = return <U <returnMethodTemp>>$2: T.nilable(Integer)\l<unconditional>\l"
    ];

    "bb::Object#foo_10" -> "bb::Object#foo_1" [style="bold"];
}

}

