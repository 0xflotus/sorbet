digraph "zsuper.rb" {
subgraph "cluster_#<static-init>" {
    label = "#<static-init>";
    color = blue;
    "bb#<static-init>_0" [shape = invhouse];
    "bb#<static-init>_1" [shape = parallelogram];

    "bb#<static-init>_0" [
        label = "block[id=0]()\l<U <statTemp>>$5: T.class_of(RubyTyper) = alias <C <U RubyTyper>>\l<U <statTemp>>$6: T.class_of(Foo) = alias <C <U Foo>>\l<U <statTemp>>$4: RubyTyper::Void = <U <statTemp>>$5: T.class_of(RubyTyper).<U keep_for_ide>(<U <statTemp>>$6: T.class_of(Foo))\l<U <statTemp>>$9: T.class_of(RubyTyper) = alias <C <U RubyTyper>>\l<U <statTemp>>$10: T.class_of(Bar) = alias <C <U Bar>>\l<U <statTemp>>$8: RubyTyper::Void = <U <statTemp>>$9: T.class_of(RubyTyper).<U keep_for_ide>(<U <statTemp>>$10: T.class_of(Bar))\l<U <statTemp>>$12: T.class_of(RubyTyper) = alias <C <U RubyTyper>>\l<U <statTemp>>$13: T.class_of(Foo) = alias <C <U Foo>>\l<U <statTemp>>$11: RubyTyper::Void = <U <statTemp>>$12: T.class_of(RubyTyper).<U keep_for_ide>(<U <statTemp>>$13: T.class_of(Foo))\l<U <finalReturn>>: T.noreturn = return <U <returnMethodTemp>>$2: NilClass\l<unconditional>\l"
    ];

    "bb#<static-init>_0" -> "bb#<static-init>_1" [style="bold"];
    "bb#<static-init>_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb#<static-init>_1" -> "bb#<static-init>_1" [style="bold"];
}

subgraph "cluster_::Foo#baz" {
    label = "::Foo#baz";
    color = blue;
    "bb::Foo#baz_0" [shape = invhouse];
    "bb::Foo#baz_1" [shape = parallelogram];

    "bb::Foo#baz_0" [
        label = "block[id=0]()\l<U a>: T.untyped = load_arg(Foo#baz#a)\l<U <statTemp>>$3: Foo = self\l<U <returnMethodTemp>>$2: NilClass = <U <statTemp>>$3: Foo.<U puts>(<U a>: T.untyped)\l<U <finalReturn>>: T.noreturn = return <U <returnMethodTemp>>$2: NilClass\l<unconditional>\l"
    ];

    "bb::Foo#baz_0" -> "bb::Foo#baz_1" [style="bold"];
    "bb::Foo#baz_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Foo#baz_1" -> "bb::Foo#baz_1" [style="bold"];
}

subgraph "cluster_::Bar#baz" {
    label = "::Bar#baz";
    color = blue;
    "bb::Bar#baz_0" [shape = invhouse];
    "bb::Bar#baz_1" [shape = parallelogram];

    "bb::Bar#baz_0" [
        label = "block[id=0]()\l<U b>: T.untyped = load_arg(Bar#baz#b)\l<U <blk>>: T.untyped = load_arg(Bar#baz#<blk>)\l<U <statTemp>>$3: Bar = self\l<U <block-pre-call-temp>>$6: T.untyped = <U <statTemp>>$3: Bar.<U super>(<U b>: T.untyped, <U <blk>>: T.untyped)\l<unconditional>\l"
    ];

    "bb::Bar#baz_0" -> "bb::Bar#baz_2" [style="bold"];
    "bb::Bar#baz_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Bar#baz_1" -> "bb::Bar#baz_1" [style="bold"];
    "bb::Bar#baz_2" [
        label = "block[id=2]()\louterLoops: 1\l<U <block-call>>: NilClass\l"
    ];

    "bb::Bar#baz_2" -> "bb::Bar#baz_4" [style="bold"];
    "bb::Bar#baz_2" -> "bb::Bar#baz_3" [style="tapered"];

    "bb::Bar#baz_3" [
        label = "block[id=3]()\l<U <returnMethodTemp>>$2: T.untyped = Solve<::Bar#baz#<block>>\l<U <finalReturn>>: T.noreturn = return <U <returnMethodTemp>>$2: T.untyped\l<unconditional>\l"
    ];

    "bb::Bar#baz_3" -> "bb::Bar#baz_1" [style="bold"];
    "bb::Bar#baz_4" [
        label = "block[id=4]()\louterLoops: 1\l<U <blk>>$7: T.untyped = load_yield_params(::Bar#baz#<block>, Bar#baz#<block>)\l<U <blk>>$8: Integer(0) = 0\l<U a>$2: T.untyped = <U <blk>>$7: T.untyped.<U []>(<U <blk>>$8: Integer(0))\l<U <statTemp>>$10: Bar = self\l<U <blockReturnTemp>>$9: NilClass = <U <statTemp>>$10: Bar.<U puts>(<U a>$2: T.untyped)\l<U <blockReturnTemp>>$12: T.noreturn = blockreturn<::Bar#baz#<block>> <U <blockReturnTemp>>$9: NilClass\l<unconditional>\l"
    ];

    "bb::Bar#baz_4" -> "bb::Bar#baz_2" [style="bold"];
}

}

