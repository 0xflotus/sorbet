begin
  class <emptyTree>::<constant:String><<constant:<todo sym>>> < (::<constant:<todo sym>>)
    self(<constant:<todo sym>>).standard_method({:i => <emptyTree>::<constant:Integer>}, {:returns => <emptyTree>::<constant:Opus>::<constant:Types>.any(<emptyTree>::<constant:Integer>, <emptyTree>::<constant:NilClass>)})

    def getbyte<<constant:<todo sym>>>(i)
      <emptyTree>

  end
  class <emptyTree>::<constant:Integer><<constant:<todo sym>>> < (::<constant:<todo sym>>)
    self(<constant:<todo sym>>).standard_method({:o => <emptyTree>::<constant:Integer>}, {:returns => <emptyTree>::<constant:Opus>::<constant:Types>.any(<emptyTree>::<constant:Integer>)})

    def +<<constant:<todo sym>>>(o)
      <emptyTree>

  end
  def baz1<<constant:<todo sym>>>()
    begin
      a = "foo"
      b = a.getbyte(a)
    end
  def baz2<<constant:<todo sym>>>()
    begin
      a = "foo"
      b = a.getbyte("foo")
    end
  def baz3<<constant:<todo sym>>>()
    b = "foo".getbyte("foo")
  def baz4<<constant:<todo sym>>>()
    b = self(<constant:<todo sym>>).a().getbyte("foo")
  def baz5<<constant:<todo sym>>>()
    begin
      if begin
          true
        end
        b = 1
      else
        b = "foo"
      end
      b = b.getbyte(1)
    end
  def baz6<<constant:<todo sym>>>()
    begin
      if begin
          true
        end
        b = 1
      else
        b = "foo"
      end
      b = "foo".getbyte(b)
    end
  def baz7<<constant:<todo sym>>>()
    begin
      if begin
          true
        end
        b = 1
      else
        <emptyTree>
      end
      b = "foo".getbyte(b)
    end
  def baz8<<constant:<todo sym>>>()
    while begin
        true
      end
      b = 1
    end
end
