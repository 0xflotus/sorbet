begin
  <Not Supported (Alias)>
  @iv = 1
  @@cv = 1
  $gv = 1
  begin
    #assignTmp$2 = [nil, nil]
    self(TODO).x().var=(#assignTmp$2.[](0))
    y = #assignTmp$2.[](1)
    #assignTmp$2
  end
  begin
    #assignTmp$3 = self(TODO).zaaaz()
    baaaar = #assignTmp$3.[](0)
    naaar = #assignTmp$3.[](1)
    #assignTmp$3
  end
  xaaaaz = [self(TODO).yayayaya(), self(TODO).tutututu()]
  <emptyTree>
  begin
    nil
  end
  begin
    self(TODO).a()
    self(TODO).b()
  end
  def foo<<todo sym>>(<Not Supported (Blockarg)>)
    <emptyTree>
  self(TODO).lambda() do ||
    <emptyTree>
  end
  <Not Supported (Case)>
  "x"
  1.+(<Not Supported (Complex)>)
  <Not Supported (Float)>
  <Not Supported (Complex)>
  def self.classmeth<<todo sym>>()
    <emptyTree>
  <Not Supported (SClass)>
  begin
    #||$4 = true
    if #||$4
      #||$4
    else
      false
    end
  end
  <Not Supported (For)>
  while 0.!=(1)
    <emptyTree>
  end
  x.[]=(0)
  break(<emptyTree>)
  break(1)
  break([1, 2])
  next(<emptyTree>)
  next(1)
  next([1, 2])
  <Not Supported (Defined)>
  <Not Supported (ZSuper)>
  def foo<<todo sym>>(x:, y: = 1, *z:)
    <emptyTree>
  x
  <Not Supported (LineLiteral)>
  while true
    nil
  end
  while true
    nil
  end
  while true.!()
    nil
  end
  while true.!()
    nil
  end
  begin
    #assignTmp$5 = 1
    a = #assignTmp$5.[](0)
    <Not Supported (Mlhs)>
    #assignTmp$5
  end
  <Not Supported (NthRef)>
  def foo<<todo sym>>(x = 1, *y)
    <emptyTree>
  {x => y, <Not Supported (DSymbol)> => 1}
  <Not Supported (Preexe)>
  <Not Supported (Postexe)>
  <Not Supported (Rational)>
  <Not Supported (Complex)>
  begin
    <Not Supported (Rescue)>
  end
  begin
    #assignTmp$6 = [<Not Supported (Splat)>]
    <Not Supported (SplatLhs)>
    #assignTmp$6
  end
  <Not Supported (DSymbol)>
  [:sym]
  if x
    1
  else
    7
  end
  <Not Supported (Undef)>
  ["a", "b"]
  ["a", "b"]
  <Not Supported (XString)>
  self(TODO).proc() do |x|
    <emptyTree>
  end
  break(self(TODO).foo(1) do ||
      <emptyTree>
    end)
  def foo<<todo sym>>(**$0)
    <emptyTree>
  def foo<<todo sym>>(***$1:)
    <emptyTree>
end
