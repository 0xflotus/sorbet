digraph "-e"{
subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeout>#initialize" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeout>#initialize";
    color = blue;
    bb105_0 [shape = invhouse];
    bb105_1 [shape = parallelogram];

    bb105_0 [label = "()\n@rule_token$5 = alias @rule_token : untyped\nselfMethodTemp$1 = self : MatchTimeout\nmessage = load_arg(selfMethodTemp$1#initialize, 0) : untyped\nrule_token = load_arg(selfMethodTemp$1#initialize, 1) : untyped\nstatTemp$3 = self : MatchTimeout\nstatTemp$2 = statTemp$3.super(message) : untyped\nreturnMethodTemp$6 = return rule_token : <bottom>\n<unconditional>"];
    bb105_0 -> bb105_1;
    bb105_1 [label = "()\n<unconditional>"];
    bb105_1 -> bb105_1;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize";
    color = blue;
    bb111_0 [shape = invhouse];
    bb111_1 [shape = parallelogram];

    bb111_0 [label = "(invalid_rules)\n<constant:untyped>$7 = alias <constant:untyped> : untyped\n@rules$12 = alias @rules : untyped\nstatTemp$8 = NotSupported() : untyped\nstatTemp$5 = <constant:untyped>$7.query_by(statTemp$8) : untyped\nstatTemp$9 = NotSupported() : untyped\nstatTemp$4 = statTemp$5.load_all(statTemp$9) : untyped\nstatTemp$10 = NotSupported() : untyped\nassignTemp$0 = statTemp$4.partition(statTemp$10) : untyped\nstatTemp$14 = 0 : Integer(0)\n@rules$12 = assignTemp$0.[](statTemp$14) : untyped\nstatTemp$17 = 1 : Integer(1)\ninvalid_rules = assignTemp$0.[](statTemp$17) : untyped\nstatTemp$19 = invalid_rules.empty?() : untyped\nifTemp$18 = statTemp$19.!() : untyped\nifTemp$18"];
    bb111_0 -> bb111_2;
    bb111_0 -> bb111_3;

    bb111_1 [label = "()\n<unconditional>"];
    bb111_1 -> bb111_1;
    bb111_2 [label = "(invalid_rules, returnMethodTemp$19)\nstatTemp$24 = NotSupported() : untyped\nstatTemp$22 = invalid_rules.map(statTemp$24) : untyped\nstatTemp$25 = , : String(\",\")\ninvalid_rule_ids = statTemp$22.join(statTemp$25) : untyped\nstatTemp$27 = self : Matcher\nstatTemp$26 = statTemp$27.log() : untyped\nstatTemp$29 = Gerald skipping invalid rules:  : String(\"Gerald skipping invalid rules: \")\nstatTemp$28 = statTemp$29.+(invalid_rule_ids) : untyped\nreturnMethodTemp$19 = statTemp$26.warn(statTemp$28) : untyped\n<unconditional>"];
    bb111_2 -> bb111_4;
    bb111_3 [label = "(returnMethodTemp$19)\nreturnMethodTemp$19 = NotSupported() : untyped\n<unconditional>"];
    bb111_3 -> bb111_4;
    bb111_4 [label = "(returnMethodTemp$19)\nreturnMethodTemp$31 = return returnMethodTemp$19 : <bottom>\n<unconditional>"];
    bb111_4 -> bb111_1;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match";
    color = blue;
    bb112_0 [shape = invhouse];
    bb112_1 [shape = parallelogram];

    bb112_0 [label = "(match_context, <constant:MatchTimeBudget>$26, @rules$28)\n<constant:MAX_AFFECTED_FILES>$9 = alias <constant:MAX_AFFECTED_FILES> : untyped\n<constant:MatchTimeBudget>$26 = alias <constant:MatchTimeBudget> : <class:MatchTimeBudget>\n@rules$28 = alias @rules : untyped\nselfMethodTemp$1 = self : Matcher\nmatch_context = load_arg(selfMethodTemp$1#match, 0) : untyped\nstatTemp$6 = match_context.diff() : untyped\nstatTemp$5 = statTemp$6.affected_files() : untyped\nstatTemp$4 = statTemp$5.count() : untyped\nifTemp$3 = statTemp$4.>(<constant:MAX_AFFECTED_FILES>$9) : untyped\nifTemp$3"];
    bb112_0 -> bb112_2;
    bb112_0 -> bb112_3;

    bb112_1 [label = "()\n<unconditional>"];
    bb112_1 -> bb112_1;
    bb112_2 [label = "(match_context)\nstatTemp$12 = self : Matcher\nstatTemp$11 = statTemp$12.log() : untyped\nstatTemp$16 = Gerald skipping large PR with  : String(\"Gerald skipping large PR with \")\nstatTemp$20 = match_context.diff() : untyped\nstatTemp$19 = statTemp$20.affected_files() : untyped\nstatTemp$18 = statTemp$19.count() : untyped\nstatTemp$17 = statTemp$18.to_s() : untyped\nstatTemp$15 = statTemp$16.concat(statTemp$17) : untyped\nstatTemp$22 =  affected files : String(\" affected files\")\nstatTemp$14 = statTemp$15.concat(statTemp$22) : untyped\nstatTemp$13 = statTemp$14.to_s() : untyped\nstatTemp$10 = statTemp$11.warn(statTemp$13) : untyped\nreturnTemp$23 = NotSupported() : untyped\nstatTemp$2 = return returnTemp$23 : <bottom>\n<unconditional>"];
    bb112_2 -> bb112_1;
    bb112_3 [label = "(match_context, budget, statTemp$27, <constant:MatchTimeBudget>$26, @rules$28)\nstatTemp$2 = NotSupported() : untyped\nbudget = <constant:MatchTimeBudget>$26.new() : MatchTimeBudget\nstatTemp$27 = @rules$28 : untyped\n<unconditional>"];
    bb112_3 -> bb112_4;
    bb112_4 [label = "(match_context, budget, <block-nested: r>, statTemp$27, @rules$28)\nouterLoops: 1\n<block-call>"];
    bb112_4 -> bb112_6;
    bb112_4 -> bb112_5;

    bb112_5 [label = "(@rules$28)\nreturnMethodTemp$20 = @rules$28.select() : untyped\nreturnMethodTemp$35 = return returnMethodTemp$20 : <bottom>\n<unconditional>"];
    bb112_5 -> bb112_1;
    bb112_6 [label = "(match_context, budget, <block-nested: r>, statTemp$27, @rules$28)\nouterLoops: 1\n<block-nested: r> = load_arg(statTemp$27#select, 0) : untyped\n<unconditional>"];
    bb112_6 -> bb112_7;
    bb112_7 [label = "(match_context, budget, <block-nested: r>, statTemp$27, @rules$28)\nouterLoops: 2\n<block-call>"];
    bb112_7 -> bb112_9;
    bb112_7 -> bb112_8;

    bb112_8 [label = "(match_context, budget, <block-nested: r>, statTemp$27, @rules$28)\nouterLoops: 1\nblockReturnTemp$29 = budget.time_rule(<block-nested: r>) : untyped\n<unconditional>"];
    bb112_8 -> bb112_4;
    bb112_9 [label = "(match_context, budget, <block-nested: r>, statTemp$27, @rules$28)\nouterLoops: 2\nblockReturnTemp$32 = <block-nested: r>.matches?(match_context) : untyped\n<unconditional>"];
    bb112_9 -> bb112_7;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchContext>#initialize" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchContext>#initialize";
    color = blue;
    bb119_0 [shape = invhouse];
    bb119_1 [shape = parallelogram];

    bb119_0 [label = "()\n@repo$3 = alias @repo : untyped\n@assignee$5 = alias @assignee : untyped\n@gh_user$7 = alias @gh_user : untyped\n@merge_branch$9 = alias @merge_branch : untyped\n@body$11 = alias @body : untyped\n@title$13 = alias @title : untyped\n@diff$15 = alias @diff : untyped\n@openapi_diff$16 = alias @openapi_diff : untyped\nselfMethodTemp$1 = self : MatchContext\nrepo = load_arg(selfMethodTemp$1#initialize, 0) : untyped\nassignee = load_arg(selfMethodTemp$1#initialize, 1) : untyped\ngh_user = load_arg(selfMethodTemp$1#initialize, 2) : untyped\nmerge_branch = load_arg(selfMethodTemp$1#initialize, 3) : untyped\nbody = load_arg(selfMethodTemp$1#initialize, 4) : untyped\ntitle = load_arg(selfMethodTemp$1#initialize, 5) : untyped\ndiff = load_arg(selfMethodTemp$1#initialize, 6) : untyped\nopenapi_diff = load_arg(selfMethodTemp$1#initialize, 7) : untyped\nreturnMethodTemp$17 = return openapi_diff : <bottom>\n<unconditional>"];
    bb119_0 -> bb119_1;
    bb119_1 [label = "()\n<unconditional>"];
    bb119_1 -> bb119_1;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchContext>#user_stripe_suffix?" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchContext>#user_stripe_suffix?";
    color = blue;
    bb128_0 [shape = invhouse];
    bb128_1 [shape = parallelogram];

    bb128_0 [label = "()\n@repo$4 = alias @repo : untyped\nstatTemp$5 = stripe-internal/ : String(\"stripe-internal/\")\nstatTemp$2 = @repo$4.start_with?(statTemp$5) : untyped\nreturnMethodTemp$23 = statTemp$2.!() : untyped\nreturnMethodTemp$6 = return returnMethodTemp$23 : <bottom>\n<unconditional>"];
    bb128_0 -> bb128_1;
    bb128_1 [label = "()\n<unconditional>"];
    bb128_1 -> bb128_1;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#initialize" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#initialize";
    color = blue;
    bb132_0 [shape = invhouse];
    bb132_1 [shape = parallelogram];

    bb132_0 [label = "()\n@start$2 = alias @start : untyped\n<constant:untyped>$4 = alias <constant:untyped> : untyped\n@start$2 = <constant:untyped>$4.now() : untyped\nreturnMethodTemp$5 = return @start$2 : <bottom>\n<unconditional>"];
    bb132_0 -> bb132_1;
    bb132_1 [label = "()\n<unconditional>"];
    bb132_1 -> bb132_1;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#check!" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#check!";
    color = blue;
    bb133_0 [shape = invhouse];
    bb133_1 [shape = parallelogram];

    bb133_0 [label = "(<constant:TOTAL_TIME_MS>$13, <constant:MatchTimeout>$17)\n<constant:untyped>$6 = alias <constant:untyped> : untyped\n@start$8 = alias @start : untyped\n<constant:TOTAL_TIME_MS>$13 = alias <constant:TOTAL_TIME_MS> : untyped\n<constant:MatchTimeout>$17 = alias <constant:MatchTimeout> : <class:MatchTimeout>\nstatTemp$4 = <constant:untyped>$6.now() : untyped\nstatTemp$3 = statTemp$4.-(@start$8) : untyped\nstatTemp$9 = 1000 : Integer(1000)\ndur_ms = statTemp$3.*(statTemp$9) : untyped\nifTemp$10 = dur_ms.>(<constant:TOTAL_TIME_MS>$13) : untyped\nifTemp$10"];
    bb133_0 -> bb133_2;
    bb133_0 -> bb133_3;

    bb133_1 [label = "()\n<unconditional>"];
    bb133_1 -> bb133_1;
    bb133_2 [label = "(returnMethodTemp$25, <constant:TOTAL_TIME_MS>$13, <constant:MatchTimeout>$17)\nstatTemp$14 = self : MatchTimeBudget\nstatTemp$21 = Gerald match time budged exceeded  : String(\"Gerald match time budged exceeded \")\nstatTemp$22 = <constant:TOTAL_TIME_MS>$13.to_s() : untyped\nstatTemp$20 = statTemp$21.concat(statTemp$22) : untyped\nstatTemp$24 = ms : String(\"ms\")\nstatTemp$19 = statTemp$20.concat(statTemp$24) : untyped\nstatTemp$18 = statTemp$19.to_s() : untyped\nstatTemp$15 = <constant:MatchTimeout>$17.new(statTemp$18) : MatchTimeout\nreturnMethodTemp$25 = statTemp$14.raise(statTemp$15) : untyped\n<unconditional>"];
    bb133_2 -> bb133_4;
    bb133_3 [label = "(returnMethodTemp$25)\nreturnMethodTemp$25 = NotSupported() : untyped\n<unconditional>"];
    bb133_3 -> bb133_4;
    bb133_4 [label = "(returnMethodTemp$25)\nreturnMethodTemp$25 = return returnMethodTemp$25 : <bottom>\n<unconditional>"];
    bb133_4 -> bb133_1;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#time_rule" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#time_rule";
    color = blue;
    bb134_0 [shape = invhouse];
    bb134_1 [shape = parallelogram];

    bb134_0 [label = "(dur_ms, rule, res, <constant:PER_RULE_MS>$16, <constant:MatchTimeout>$20)\n<constant:untyped>$4 = alias <constant:untyped> : untyped\n<constant:PER_RULE_MS>$16 = alias <constant:PER_RULE_MS> : untyped\n<constant:MatchTimeout>$20 = alias <constant:MatchTimeout> : <class:MatchTimeout>\nselfMethodTemp$1 = self : MatchTimeBudget\nrule = load_arg(selfMethodTemp$1#time_rule, 0) : untyped\nrule_start = <constant:untyped>$4.now() : untyped\nres = NotSupported() : untyped\nstatTemp$8 = <constant:untyped>$4.now() : untyped\nstatTemp$7 = statTemp$8.-(rule_start) : untyped\nstatTemp$11 = 1000 : Integer(1000)\ndur_ms = statTemp$7.*(statTemp$11) : untyped\nifTemp$13 = dur_ms.>(<constant:PER_RULE_MS>$16) : untyped\nifTemp$13"];
    bb134_0 -> bb134_2;
    bb134_0 -> bb134_3;

    bb134_1 [label = "()\n<unconditional>"];
    bb134_1 -> bb134_1;
    bb134_2 [label = "(dur_ms, rule, res, <constant:PER_RULE_MS>$16, <constant:MatchTimeout>$20)\nstatTemp$17 = self : MatchTimeBudget\nstatTemp$28 = Gerald rule ' : String(\"Gerald rule '\")\nstatTemp$30 = rule.token() : untyped\nstatTemp$29 = statTemp$30.to_s() : untyped\nstatTemp$27 = statTemp$28.concat(statTemp$29) : untyped\nstatTemp$32 = ' exceeded per-rule time budget actual= : String(\"' exceeded per-rule time budget actual=\")\nstatTemp$26 = statTemp$27.concat(statTemp$32) : untyped\nstatTemp$34 = dur_ms.to_i() : untyped\nstatTemp$33 = statTemp$34.to_s() : untyped\nstatTemp$25 = statTemp$26.concat(statTemp$33) : untyped\nstatTemp$36 = ms budget= : String(\"ms budget=\")\nstatTemp$24 = statTemp$25.concat(statTemp$36) : untyped\nstatTemp$37 = <constant:PER_RULE_MS>$16.to_s() : untyped\nstatTemp$23 = statTemp$24.concat(statTemp$37) : untyped\nstatTemp$39 = ms : String(\"ms\")\nstatTemp$22 = statTemp$23.concat(statTemp$39) : untyped\nstatTemp$21 = statTemp$22.to_s() : untyped\nstatTemp$40 = NotSupported() : untyped\nstatTemp$18 = <constant:MatchTimeout>$20.new(statTemp$21, statTemp$40) : MatchTimeout\nstatTemp$12 = statTemp$17.raise(statTemp$18) : untyped\n<unconditional>"];
    bb134_2 -> bb134_4;
    bb134_3 [label = "(res)\nstatTemp$12 = NotSupported() : untyped\n<unconditional>"];
    bb134_3 -> bb134_4;
    bb134_4 [label = "(res)\nstatTemp$42 = self : MatchTimeBudget\nstatTemp$41 = statTemp$42.check!() : untyped\nreturnMethodTemp$43 = return res : <bottom>\n<unconditional>"];
    bb134_4 -> bb134_1;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#initialize" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#initialize";
    color = blue;
    bb137_0 [shape = invhouse];
    bb137_1 [shape = parallelogram];

    bb137_0 [label = "()\n@raw$3 = alias @raw : untyped\n@parsed$4 = alias @parsed : untyped\nselfMethodTemp$1 = self : Diff\nraw_diff = load_arg(selfMethodTemp$1#initialize, 0) : untyped\nstatTemp$5 = self : Diff\n@parsed$4 = statTemp$5.parse(raw_diff) : untyped\nreturnMethodTemp$7 = return @parsed$4 : <bottom>\n<unconditional>"];
    bb137_0 -> bb137_1;
    bb137_1 [label = "()\n<unconditional>"];
    bb137_1 -> bb137_1;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#affected_files" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#affected_files";
    color = blue;
    bb139_0 [shape = invhouse];
    bb139_1 [shape = parallelogram];

    bb139_0 [label = "()\nstatTemp$4 = self : Diff\nstatTemp$3 = statTemp$4.added_files() : untyped\nstatTemp$6 = self : Diff\nstatTemp$5 = statTemp$6.deleted_files() : untyped\nstatTemp$2 = statTemp$3.+(statTemp$5) : untyped\nstatTemp$8 = self : Diff\nstatTemp$7 = statTemp$8.changed_files() : untyped\nreturnMethodTemp$28 = statTemp$2.+(statTemp$7) : untyped\nreturnMethodTemp$9 = return returnMethodTemp$28 : <bottom>\n<unconditional>"];
    bb139_0 -> bb139_1;
    bb139_1 [label = "()\n<unconditional>"];
    bb139_1 -> bb139_1;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files";
    color = blue;
    bb140_0 [shape = invhouse];
    bb140_1 [shape = parallelogram];

    bb140_0 [label = "(statTemp$3, @parsed$4)\n@parsed$4 = alias @parsed : untyped\nstatTemp$3 = @parsed$4 : untyped\n<unconditional>"];
    bb140_0 -> bb140_2;
    bb140_1 [label = "()\n<unconditional>"];
    bb140_1 -> bb140_1;
    bb140_2 [label = "(statTemp$3, @parsed$4)\nouterLoops: 1\n<block-call>"];
    bb140_2 -> bb140_4;
    bb140_2 -> bb140_3;

    bb140_3 [label = "(statTemp$2, @parsed$4)\nstatTemp$2 = @parsed$4.select() : untyped\n<unconditional>"];
    bb140_3 -> bb140_5;
    bb140_4 [label = "(statTemp$3, @parsed$4)\nouterLoops: 1\n<block-nested: part> = load_arg(statTemp$3#select, 0) : untyped\nstatTemp$8 = NotSupported() : untyped\nstatTemp$6 = <block-nested: part>.[](statTemp$8) : untyped\nstatTemp$9 = /dev/null : String(\"/dev/null\")\nblockReturnTemp$5 = statTemp$6.==(statTemp$9) : untyped\n<unconditional>"];
    bb140_4 -> bb140_2;
    bb140_5 [label = "(statTemp$2)\nouterLoops: 1\n<block-call>"];
    bb140_5 -> bb140_7;
    bb140_5 -> bb140_6;

    bb140_6 [label = "(statTemp$2)\nreturnMethodTemp$29 = statTemp$2.map() : untyped\nreturnMethodTemp$13 = return returnMethodTemp$29 : <bottom>\n<unconditional>"];
    bb140_6 -> bb140_1;
    bb140_7 [label = "(statTemp$2)\nouterLoops: 1\n<block-nested: part> = load_arg(statTemp$2#map, 0) : untyped\nstatTemp$12 = NotSupported() : untyped\nblockReturnTemp$10 = <block-nested: part>.[](statTemp$12) : untyped\n<unconditional>"];
    bb140_7 -> bb140_5;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files";
    color = blue;
    bb145_0 [shape = invhouse];
    bb145_1 [shape = parallelogram];

    bb145_0 [label = "(statTemp$3, @parsed$4)\n@parsed$4 = alias @parsed : untyped\nstatTemp$3 = @parsed$4 : untyped\n<unconditional>"];
    bb145_0 -> bb145_2;
    bb145_1 [label = "()\n<unconditional>"];
    bb145_1 -> bb145_1;
    bb145_2 [label = "(statTemp$3, @parsed$4)\nouterLoops: 1\n<block-call>"];
    bb145_2 -> bb145_4;
    bb145_2 -> bb145_3;

    bb145_3 [label = "(statTemp$2, @parsed$4)\nstatTemp$2 = @parsed$4.select() : untyped\n<unconditional>"];
    bb145_3 -> bb145_5;
    bb145_4 [label = "(statTemp$3, @parsed$4)\nouterLoops: 1\n<block-nested: part> = load_arg(statTemp$3#select, 0) : untyped\nstatTemp$8 = NotSupported() : untyped\nstatTemp$6 = <block-nested: part>.[](statTemp$8) : untyped\nstatTemp$9 = /dev/null : String(\"/dev/null\")\nblockReturnTemp$5 = statTemp$6.==(statTemp$9) : untyped\n<unconditional>"];
    bb145_4 -> bb145_2;
    bb145_5 [label = "(statTemp$2)\nouterLoops: 1\n<block-call>"];
    bb145_5 -> bb145_7;
    bb145_5 -> bb145_6;

    bb145_6 [label = "(statTemp$2)\nreturnMethodTemp$30 = statTemp$2.map() : untyped\nreturnMethodTemp$13 = return returnMethodTemp$30 : <bottom>\n<unconditional>"];
    bb145_6 -> bb145_1;
    bb145_7 [label = "(statTemp$2)\nouterLoops: 1\n<block-nested: part> = load_arg(statTemp$2#map, 0) : untyped\nstatTemp$12 = NotSupported() : untyped\nblockReturnTemp$10 = <block-nested: part>.[](statTemp$12) : untyped\n<unconditional>"];
    bb145_7 -> bb145_5;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files";
    color = blue;
    bb150_0 [shape = invhouse];
    bb150_1 [shape = parallelogram];

    bb150_0 [label = "(statTemp$3, @parsed$4)\n@parsed$4 = alias @parsed : untyped\nstatTemp$3 = @parsed$4 : untyped\n<unconditional>"];
    bb150_0 -> bb150_2;
    bb150_1 [label = "()\n<unconditional>"];
    bb150_1 -> bb150_1;
    bb150_2 [label = "(statTemp$3, @parsed$4)\nouterLoops: 1\n<block-call>"];
    bb150_2 -> bb150_4;
    bb150_2 -> bb150_3;

    bb150_3 [label = "(statTemp$2, @parsed$4)\nstatTemp$2 = @parsed$4.select() : untyped\n<unconditional>"];
    bb150_3 -> bb150_5;
    bb150_4 [label = "(statTemp$3, @parsed$4)\nouterLoops: 1\n<block-nested: part> = load_arg(statTemp$3#select, 0) : untyped\nstatTemp$8 = NotSupported() : untyped\nstatTemp$6 = <block-nested: part>.[](statTemp$8) : untyped\nstatTemp$11 = NotSupported() : untyped\nstatTemp$9 = <block-nested: part>.[](statTemp$11) : untyped\nblockReturnTemp$5 = statTemp$6.==(statTemp$9) : untyped\n<unconditional>"];
    bb150_4 -> bb150_2;
    bb150_5 [label = "(statTemp$2)\nouterLoops: 1\n<block-call>"];
    bb150_5 -> bb150_7;
    bb150_5 -> bb150_6;

    bb150_6 [label = "(statTemp$2)\nreturnMethodTemp$31 = statTemp$2.map() : untyped\nreturnMethodTemp$15 = return returnMethodTemp$31 : <bottom>\n<unconditional>"];
    bb150_6 -> bb150_1;
    bb150_7 [label = "(statTemp$2)\nouterLoops: 1\n<block-nested: part> = load_arg(statTemp$2#map, 0) : untyped\nstatTemp$14 = NotSupported() : untyped\nblockReturnTemp$12 = <block-nested: part>.[](statTemp$14) : untyped\n<unconditional>"];
    bb150_7 -> bb150_5;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_lines" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_lines";
    color = blue;
    bb155_0 [shape = invhouse];
    bb155_1 [shape = parallelogram];

    bb155_0 [label = "(statTemp$3, @parsed$4)\n@parsed$4 = alias @parsed : untyped\nstatTemp$3 = @parsed$4 : untyped\n<unconditional>"];
    bb155_0 -> bb155_2;
    bb155_1 [label = "()\n<unconditional>"];
    bb155_1 -> bb155_1;
    bb155_2 [label = "(statTemp$3, @parsed$4)\nouterLoops: 1\n<block-call>"];
    bb155_2 -> bb155_4;
    bb155_2 -> bb155_3;

    bb155_3 [label = "(@parsed$4)\nstatTemp$2 = @parsed$4.map() : untyped\nreturnMethodTemp$32 = statTemp$2.flatten() : untyped\nreturnMethodTemp$8 = return returnMethodTemp$32 : <bottom>\n<unconditional>"];
    bb155_3 -> bb155_1;
    bb155_4 [label = "(statTemp$3, @parsed$4)\nouterLoops: 1\n<block-nested: part> = load_arg(statTemp$3#map, 0) : untyped\nstatTemp$7 = NotSupported() : untyped\nblockReturnTemp$5 = <block-nested: part>.[](statTemp$7) : untyped\n<unconditional>"];
    bb155_4 -> bb155_2;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#removed_lines" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#removed_lines";
    color = blue;
    bb158_0 [shape = invhouse];
    bb158_1 [shape = parallelogram];

    bb158_0 [label = "(statTemp$3, @parsed$4)\n@parsed$4 = alias @parsed : untyped\nstatTemp$3 = @parsed$4 : untyped\n<unconditional>"];
    bb158_0 -> bb158_2;
    bb158_1 [label = "()\n<unconditional>"];
    bb158_1 -> bb158_1;
    bb158_2 [label = "(statTemp$3, @parsed$4)\nouterLoops: 1\n<block-call>"];
    bb158_2 -> bb158_4;
    bb158_2 -> bb158_3;

    bb158_3 [label = "(@parsed$4)\nstatTemp$2 = @parsed$4.map() : untyped\nreturnMethodTemp$33 = statTemp$2.flatten() : untyped\nreturnMethodTemp$8 = return returnMethodTemp$33 : <bottom>\n<unconditional>"];
    bb158_3 -> bb158_1;
    bb158_4 [label = "(statTemp$3, @parsed$4)\nouterLoops: 1\n<block-nested: part> = load_arg(statTemp$3#map, 0) : untyped\nstatTemp$7 = NotSupported() : untyped\nblockReturnTemp$5 = <block-nested: part>.[](statTemp$7) : untyped\n<unconditional>"];
    bb158_4 -> bb158_2;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_lines" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_lines";
    color = blue;
    bb161_0 [shape = invhouse];
    bb161_1 [shape = parallelogram];

    bb161_0 [label = "()\nstatTemp$3 = self : Diff\nstatTemp$2 = statTemp$3.added_lines() : untyped\nstatTemp$5 = self : Diff\nstatTemp$4 = statTemp$5.removed_lines() : untyped\nreturnMethodTemp$34 = statTemp$2.+(statTemp$4) : untyped\nreturnMethodTemp$6 = return returnMethodTemp$34 : <bottom>\n<unconditional>"];
    bb161_0 -> bb161_1;
    bb161_1 [label = "()\n<unconditional>"];
    bb161_1 -> bb161_1;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_openapi?" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_openapi?";
    color = blue;
    bb162_0 [shape = invhouse];
    bb162_1 [shape = parallelogram];

    bb162_0 [label = "()\n<constant:untyped>$5 = alias <constant:untyped> : untyped\nstatTemp$3 = self : Diff\nstatTemp$2 = statTemp$3.changed_files() : untyped\nreturnMethodTemp$35 = statTemp$2.include?(<constant:untyped>$5) : untyped\nreturnMethodTemp$6 = return returnMethodTemp$35 : <bottom>\n<unconditional>"];
    bb162_0 -> bb162_1;
    bb162_1 [label = "()\n<unconditional>"];
    bb162_1 -> bb162_1;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse";
    color = blue;
    bb164_0 [shape = invhouse];
    bb164_1 [shape = parallelogram];

    bb164_0 [label = "(parts)\nselfMethodTemp$1 = self : Diff\ndiff = load_arg(selfMethodTemp$1#parse, 0) : untyped\nstatTemp$5 = NotSupported() : untyped\nstatTemp$3 = diff.split(statTemp$5) : untyped\nstatTemp$6 = NotSupported() : untyped\nparts = statTemp$3.[](statTemp$6) : untyped\nifTemp$8 = parts : untyped\nifTemp$8"];
    bb164_0 -> bb164_2;
    bb164_0 -> bb164_3;

    bb164_1 [label = "()\n<unconditional>"];
    bb164_1 -> bb164_1;
    bb164_2 [label = "(parts)\n<unconditional>"];
    bb164_2 -> bb164_4;
    bb164_3 [label = "(parts)\nparts = NotSupported() : untyped\n<unconditional>"];
    bb164_3 -> bb164_4;
    bb164_4 [label = "(parts, statTemp$10)\nstatTemp$10 = parts : untyped\n<unconditional>"];
    bb164_4 -> bb164_5;
    bb164_5 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 1\n<block-call>"];
    bb164_5 -> bb164_7;
    bb164_5 -> bb164_6;

    bb164_6 [label = "(parts)\nstatTemp$9 = parts.map() : untyped\nreturnMethodTemp$36 = statTemp$9.compact() : untyped\nreturnMethodTemp$69 = return returnMethodTemp$36 : <bottom>\n<unconditional>"];
    bb164_6 -> bb164_1;
    bb164_7 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 1\n<block-nested: part> = load_arg(statTemp$10#map, 0) : untyped\nstatTemp$14 = 
 : String(\"\n\")\n<block-nested: lines> = <block-nested: part>.split(statTemp$14) : untyped\n<block-nested: b_name> = NotSupported() : untyped\n<block-nested: added_lines> = NotSupported() : untyped\n<block-nested: removed_lines> = NotSupported() : untyped\nstatTemp$19 = <block-nested: lines> : untyped\n<unconditional>"];
    bb164_7 -> bb164_8;
    bb164_8 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 2\n<block-call>"];
    bb164_8 -> bb164_10;
    bb164_8 -> bb164_9;

    bb164_9 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 1\nstatTemp$18 = <block-nested: lines>.each() : untyped\nifTemp$66 = <block-nested: b_name>.nil?() : untyped\nifTemp$66"];
    bb164_9 -> bb164_37;
    bb164_9 -> bb164_38;

    bb164_10 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 2\n<block-nested: line> = load_arg(statTemp$19#each, 0) : untyped\nstatTemp$23 = index  : String(\"index \")\nstatTemp$24 = @@ : String(\"@@\")\nstatTemp$25 = new file mode : String(\"new file mode\")\nifTemp$21 = <block-nested: line>.start_with?(statTemp$23, statTemp$24, statTemp$25) : untyped\nifTemp$21"];
    bb164_10 -> bb164_11;
    bb164_10 -> bb164_12;

    bb164_11 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 2\nreturnTemp$26 = NotSupported() : untyped\n<unconditional>"];
    bb164_11 -> bb164_8;
    bb164_12 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 2\nstatTemp$29 = --- : String(\"---\")\nifTemp$27 = <block-nested: line>.start_with?(statTemp$29) : untyped\nifTemp$27"];
    bb164_12 -> bb164_13;
    bb164_12 -> bb164_14;

    bb164_13 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 2\nstatTemp$32 = NotSupported() : untyped\n<block-nested: a_name> = <block-nested: line>.[](statTemp$32) : untyped\nifTemp$34 = <block-nested: b_name> : untyped\nifTemp$34"];
    bb164_13 -> bb164_15;
    bb164_13 -> bb164_16;

    bb164_14 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 2\nstatTemp$41 = +++ : String(\"+++\")\nifTemp$39 = <block-nested: line>.start_with?(statTemp$41) : untyped\nifTemp$39"];
    bb164_14 -> bb164_21;
    bb164_14 -> bb164_22;

    bb164_15 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 2\nstatTemp$36 = a/ : String(\"a/\")\nifTemp$33 = <block-nested: b_name>.start_with?(statTemp$36) : untyped\n<unconditional>"];
    bb164_15 -> bb164_17;
    bb164_16 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 2\nifTemp$33 = <block-nested: b_name> : untyped\n<unconditional>"];
    bb164_16 -> bb164_17;
    bb164_17 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 2\nifTemp$33"];
    bb164_17 -> bb164_18;
    bb164_17 -> bb164_19;

    bb164_18 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 2\nstatTemp$38 = NotSupported() : untyped\n<block-nested: a_name> = <block-nested: b_name>.[](statTemp$38) : untyped\n<unconditional>"];
    bb164_18 -> bb164_20;
    bb164_19 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 2\nblockReturnTemp$20 = NotSupported() : untyped\n<unconditional>"];
    bb164_19 -> bb164_20;
    bb164_20 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 2\n<unconditional>"];
    bb164_20 -> bb164_36;
    bb164_21 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 2\nstatTemp$44 = NotSupported() : untyped\n<block-nested: b_name> = <block-nested: line>.[](statTemp$44) : untyped\nifTemp$46 = <block-nested: b_name> : untyped\nifTemp$46"];
    bb164_21 -> bb164_23;
    bb164_21 -> bb164_24;

    bb164_22 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 2\nstatTemp$53 = + : String(\"+\")\nifTemp$51 = <block-nested: line>.start_with?(statTemp$53) : untyped\nifTemp$51"];
    bb164_22 -> bb164_29;
    bb164_22 -> bb164_30;

    bb164_23 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 2\nstatTemp$48 = b/ : String(\"b/\")\nifTemp$45 = <block-nested: b_name>.start_with?(statTemp$48) : untyped\n<unconditional>"];
    bb164_23 -> bb164_25;
    bb164_24 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 2\nifTemp$45 = <block-nested: b_name> : untyped\n<unconditional>"];
    bb164_24 -> bb164_25;
    bb164_25 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 2\nifTemp$45"];
    bb164_25 -> bb164_26;
    bb164_25 -> bb164_27;

    bb164_26 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 2\nstatTemp$49 = <block-nested: b_name> : untyped\nstatTemp$50 = NotSupported() : untyped\n<block-nested: b_name> = statTemp$49.[](statTemp$50) : untyped\n<unconditional>"];
    bb164_26 -> bb164_28;
    bb164_27 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 2\nblockReturnTemp$20 = NotSupported() : untyped\n<unconditional>"];
    bb164_27 -> bb164_28;
    bb164_28 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 2\n<unconditional>"];
    bb164_28 -> bb164_35;
    bb164_29 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 2\nstatTemp$57 = NotSupported() : untyped\nstatTemp$55 = <block-nested: line>.[](statTemp$57) : untyped\nblockReturnTemp$20 = <block-nested: added_lines>.<<(statTemp$55) : untyped\n<unconditional>"];
    bb164_29 -> bb164_34;
    bb164_30 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 2\nstatTemp$60 = - : String(\"-\")\nifTemp$58 = <block-nested: line>.start_with?(statTemp$60) : untyped\nifTemp$58"];
    bb164_30 -> bb164_31;
    bb164_30 -> bb164_32;

    bb164_31 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 2\nstatTemp$64 = NotSupported() : untyped\nstatTemp$62 = <block-nested: line>.[](statTemp$64) : untyped\nblockReturnTemp$20 = <block-nested: removed_lines>.<<(statTemp$62) : untyped\n<unconditional>"];
    bb164_31 -> bb164_33;
    bb164_32 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 2\nblockReturnTemp$20 = NotSupported() : untyped\n<unconditional>"];
    bb164_32 -> bb164_33;
    bb164_33 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 2\n<unconditional>"];
    bb164_33 -> bb164_34;
    bb164_34 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 2\n<unconditional>"];
    bb164_34 -> bb164_35;
    bb164_35 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 2\n<unconditional>"];
    bb164_35 -> bb164_36;
    bb164_36 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 2\n<unconditional>"];
    bb164_36 -> bb164_8;
    bb164_37 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 1\nreturnTemp$68 = NotSupported() : untyped\n<unconditional>"];
    bb164_37 -> bb164_5;
    bb164_38 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$10, statTemp$19, ifTemp$33, ifTemp$45)\nouterLoops: 1\nstatTemp$65 = NotSupported() : untyped\nblockReturnTemp$11 = NotSupported() : untyped\n<unconditional>"];
    bb164_38 -> bb164_5;
}

}

