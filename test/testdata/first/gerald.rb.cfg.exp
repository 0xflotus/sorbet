digraph "gerald.rb"{
subgraph "cluster_::Opus::CIBot::Gerald::MatchTimeout#initialize" {
    label = "::Opus::CIBot::Gerald::MatchTimeout#initialize";
    color = blue;
    bb28_0 [shape = invhouse];
    bb28_1 [shape = parallelogram];

    bb28_0 [label = "()\n@rule_token$3 = alias @rule_token : <dynamic>\n<self>$1 = self : MatchTimeout\nrule_token = load_arg(<self>$1#initialize, 1) : <dynamic>\nstatTmp$2 = NotSupported() : <dynamic>\n<ret>$4 = return rule_token : <bottom>\n<unconditinal>"];
    bb28_0 -> bb28_1;
    bb28_1 [label = "()\n<unconditinal>"];
    bb28_1 -> bb28_1;
}

subgraph "cluster_::Opus::CIBot::Gerald::Matcher#initialize" {
    label = "::Opus::CIBot::Gerald::Matcher#initialize";
    color = blue;
    bb34_0 [shape = invhouse];
    bb34_1 [shape = parallelogram];

    bb34_0 [label = "(invalid_rules)\n<dynamic>$7 = alias <dynamic> : <dynamic>\n@rules$12 = alias @rules : <dynamic>\nstatTmp$8 = NotSupported() : <dynamic>\nstatTmp$5 = <dynamic>$7.query_by(statTmp$8) : <dynamic>\nstatTmp$9 = NotSupported() : <dynamic>\nstatTmp$4 = statTmp$5.load_all(statTmp$9) : <dynamic>\nstatTmp$10 = NotSupported() : <dynamic>\nassignTmp$0 = statTmp$4.partition(statTmp$10) : <dynamic>\nstatTmp$14 = 0 : Integer(0)\n@rules$12 = assignTmp$0.[](statTmp$14) : <dynamic>\nstatTmp$17 = 1 : Integer(1)\ninvalid_rules = assignTmp$0.[](statTmp$17) : <dynamic>\nstatTmp$19 = invalid_rules.empty?() : <dynamic>\nifTmp$18 = statTmp$19.!() : <dynamic>\nifTmp$18"];
    bb34_0 -> bb34_2;
    bb34_0 -> bb34_3;

    bb34_1 [label = "()\n<unconditinal>"];
    bb34_1 -> bb34_1;
    bb34_2 [label = "(invalid_rules, <ret>$30)\nstatTmp$24 = NotSupported() : <dynamic>\nstatTmp$22 = invalid_rules.map(statTmp$24) : <dynamic>\nstatTmp$25 = , : String(\",\")\ninvalid_rule_ids = statTmp$22.join(statTmp$25) : <dynamic>\nstatTmp$27 = self : Matcher\nstatTmp$26 = statTmp$27.log() : <dynamic>\nstatTmp$29 = Gerald skipping invalid rules:  : String(\"Gerald skipping invalid rules: \")\nstatTmp$28 = statTmp$29.+(invalid_rule_ids) : <dynamic>\n<ret>$30 = statTmp$26.warn(statTmp$28) : <dynamic>\n<unconditinal>"];
    bb34_2 -> bb34_4;
    bb34_3 [label = "(<ret>$30)\n<ret>$30 = NotSupported() : <dynamic>\n<unconditinal>"];
    bb34_3 -> bb34_4;
    bb34_4 [label = "(<ret>$30)\n<ret>$31 = return <ret>$30 : <bottom>\n<unconditinal>"];
    bb34_4 -> bb34_1;
}

subgraph "cluster_::Opus::CIBot::Gerald::Matcher#match" {
    label = "::Opus::CIBot::Gerald::Matcher#match";
    color = blue;
    bb35_0 [shape = invhouse];
    bb35_1 [shape = parallelogram];

    bb35_0 [label = "(match_context, MatchTimeBudget$26, @rules$28)\nMAX_AFFECTED_FILES$9 = alias MAX_AFFECTED_FILES : <dynamic>\nMatchTimeBudget$26 = alias MatchTimeBudget : <singleton class:MatchTimeBudget>\n@rules$28 = alias @rules : <dynamic>\n<self>$1 = self : Matcher\nmatch_context = load_arg(<self>$1#match, 0) : <dynamic>\nstatTmp$6 = match_context.diff() : <dynamic>\nstatTmp$5 = statTmp$6.affected_files() : <dynamic>\nstatTmp$4 = statTmp$5.count() : <dynamic>\nifTmp$3 = statTmp$4.>(MAX_AFFECTED_FILES$9) : <dynamic>\nifTmp$3"];
    bb35_0 -> bb35_2;
    bb35_0 -> bb35_3;

    bb35_1 [label = "()\n<unconditinal>"];
    bb35_1 -> bb35_1;
    bb35_2 [label = "(match_context)\nstatTmp$12 = self : Matcher\nstatTmp$11 = statTmp$12.log() : <dynamic>\nstatTmp$16 = Gerald skipping large PR with  : String(\"Gerald skipping large PR with \")\nstatTmp$20 = match_context.diff() : <dynamic>\nstatTmp$19 = statTmp$20.affected_files() : <dynamic>\nstatTmp$18 = statTmp$19.count() : <dynamic>\nstatTmp$17 = statTmp$18.to_s() : <dynamic>\nstatTmp$15 = statTmp$16.concat(statTmp$17) : <dynamic>\nstatTmp$22 =  affected files : String(\" affected files\")\nstatTmp$14 = statTmp$15.concat(statTmp$22) : <dynamic>\nstatTmp$13 = statTmp$14.to_s() : <dynamic>\nstatTmp$10 = statTmp$11.warn(statTmp$13) : <dynamic>\nreturnTmp$23 = NotSupported() : <dynamic>\nstatTmp$2 = return returnTmp$23 : <bottom>\n<unconditinal>"];
    bb35_2 -> bb35_1;
    bb35_3 [label = "(match_context, budget, statTmp$27, MatchTimeBudget$26, @rules$28)\nstatTmp$2 = NotSupported() : <dynamic>\nbudget = MatchTimeBudget$26.new() : MatchTimeBudget\nstatTmp$27 = @rules$28 : <dynamic>\n<unconditinal>"];
    bb35_3 -> bb35_4;
    bb35_4 [label = "(match_context, budget, r$5, statTmp$27, @rules$28)\nouterLoops: 1\n<block-call>"];
    bb35_4 -> bb35_6;
    bb35_4 -> bb35_5;

    bb35_5 [label = "(@rules$28)\n<ret>$31 = @rules$28.select() : <dynamic>\n<ret>$35 = return <ret>$31 : <bottom>\n<unconditinal>"];
    bb35_5 -> bb35_1;
    bb35_6 [label = "(match_context, budget, r$5, statTmp$27, @rules$28)\nouterLoops: 1\nr$5 = load_arg(statTmp$27#select, 0) : <dynamic>\n<unconditinal>"];
    bb35_6 -> bb35_7;
    bb35_7 [label = "(match_context, budget, r$5, statTmp$27, @rules$28)\nouterLoops: 2\n<block-call>"];
    bb35_7 -> bb35_9;
    bb35_7 -> bb35_8;

    bb35_8 [label = "(match_context, budget, r$5, statTmp$27, @rules$28)\nouterLoops: 1\n<blockret>$29 = budget.time_rule(r$5) : <dynamic>\n<unconditinal>"];
    bb35_8 -> bb35_4;
    bb35_9 [label = "(match_context, budget, r$5, statTmp$27, @rules$28)\nouterLoops: 2\n<blockret>$32 = r$5.matches?(match_context) : <dynamic>\n<unconditinal>"];
    bb35_9 -> bb35_7;
}

subgraph "cluster_::Opus::CIBot::Gerald::MatchContext#initialize" {
    label = "::Opus::CIBot::Gerald::MatchContext#initialize";
    color = blue;
    bb42_0 [shape = invhouse];
    bb42_1 [shape = parallelogram];

    bb42_0 [label = "()\n@repo$3 = alias @repo : <dynamic>\n@assignee$5 = alias @assignee : <dynamic>\n@gh_user$7 = alias @gh_user : <dynamic>\n@merge_branch$9 = alias @merge_branch : <dynamic>\n@body$11 = alias @body : <dynamic>\n@title$13 = alias @title : <dynamic>\n@diff$15 = alias @diff : <dynamic>\n@openapi_diff$16 = alias @openapi_diff : <dynamic>\n<self>$1 = self : MatchContext\nrepo = load_arg(<self>$1#initialize, 0) : <dynamic>\nassignee = load_arg(<self>$1#initialize, 1) : <dynamic>\ngh_user = load_arg(<self>$1#initialize, 2) : <dynamic>\nmerge_branch = load_arg(<self>$1#initialize, 3) : <dynamic>\nbody = load_arg(<self>$1#initialize, 4) : <dynamic>\ntitle = load_arg(<self>$1#initialize, 5) : <dynamic>\ndiff = load_arg(<self>$1#initialize, 6) : <dynamic>\nopenapi_diff = load_arg(<self>$1#initialize, 7) : <dynamic>\n<ret>$17 = return openapi_diff : <bottom>\n<unconditinal>"];
    bb42_0 -> bb42_1;
    bb42_1 [label = "()\n<unconditinal>"];
    bb42_1 -> bb42_1;
}

subgraph "cluster_::Opus::CIBot::Gerald::MatchContext#user_stripe_suffix?" {
    label = "::Opus::CIBot::Gerald::MatchContext#user_stripe_suffix?";
    color = blue;
    bb51_0 [shape = invhouse];
    bb51_1 [shape = parallelogram];

    bb51_0 [label = "()\n@repo$4 = alias @repo : <dynamic>\nstatTmp$5 = stripe-internal/ : String(\"stripe-internal/\")\nstatTmp$2 = @repo$4.start_with?(statTmp$5) : <dynamic>\n<ret>$34 = statTmp$2.!() : <dynamic>\n<ret>$6 = return <ret>$34 : <bottom>\n<unconditinal>"];
    bb51_0 -> bb51_1;
    bb51_1 [label = "()\n<unconditinal>"];
    bb51_1 -> bb51_1;
}

subgraph "cluster_::Opus::CIBot::Gerald::MatchTimeBudget#initialize" {
    label = "::Opus::CIBot::Gerald::MatchTimeBudget#initialize";
    color = blue;
    bb55_0 [shape = invhouse];
    bb55_1 [shape = parallelogram];

    bb55_0 [label = "()\n@start$2 = alias @start : <dynamic>\n<dynamic>$4 = alias <dynamic> : <dynamic>\n@start$2 = <dynamic>$4.now() : <dynamic>\n<ret>$5 = return @start$2 : <bottom>\n<unconditinal>"];
    bb55_0 -> bb55_1;
    bb55_1 [label = "()\n<unconditinal>"];
    bb55_1 -> bb55_1;
}

subgraph "cluster_::Opus::CIBot::Gerald::MatchTimeBudget#check!" {
    label = "::Opus::CIBot::Gerald::MatchTimeBudget#check!";
    color = blue;
    bb56_0 [shape = invhouse];
    bb56_1 [shape = parallelogram];

    bb56_0 [label = "(TOTAL_TIME_MS$13, MatchTimeout$17)\n<dynamic>$6 = alias <dynamic> : <dynamic>\n@start$8 = alias @start : <dynamic>\nTOTAL_TIME_MS$13 = alias TOTAL_TIME_MS : <dynamic>\nMatchTimeout$17 = alias MatchTimeout : <singleton class:MatchTimeout>\nstatTmp$4 = <dynamic>$6.now() : <dynamic>\nstatTmp$3 = statTmp$4.-(@start$8) : <dynamic>\nstatTmp$9 = 1000 : Integer(1000)\ndur_ms = statTmp$3.*(statTmp$9) : <dynamic>\nifTmp$10 = dur_ms.>(TOTAL_TIME_MS$13) : <dynamic>\nifTmp$10"];
    bb56_0 -> bb56_2;
    bb56_0 -> bb56_3;

    bb56_1 [label = "()\n<unconditinal>"];
    bb56_1 -> bb56_1;
    bb56_2 [label = "(<ret>$36, TOTAL_TIME_MS$13, MatchTimeout$17)\nstatTmp$14 = self : MatchTimeBudget\nstatTmp$21 = Gerald match time budged exceeded  : String(\"Gerald match time budged exceeded \")\nstatTmp$22 = TOTAL_TIME_MS$13.to_s() : <dynamic>\nstatTmp$20 = statTmp$21.concat(statTmp$22) : <dynamic>\nstatTmp$24 = ms : String(\"ms\")\nstatTmp$19 = statTmp$20.concat(statTmp$24) : <dynamic>\nstatTmp$18 = statTmp$19.to_s() : <dynamic>\nstatTmp$15 = MatchTimeout$17.new(statTmp$18) : MatchTimeout\n<ret>$36 = statTmp$14.raise(statTmp$15) : <dynamic>\n<unconditinal>"];
    bb56_2 -> bb56_4;
    bb56_3 [label = "(<ret>$36)\n<ret>$36 = NotSupported() : <dynamic>\n<unconditinal>"];
    bb56_3 -> bb56_4;
    bb56_4 [label = "(<ret>$36)\n<ret>$25 = return <ret>$36 : <bottom>\n<unconditinal>"];
    bb56_4 -> bb56_1;
}

subgraph "cluster_::Opus::CIBot::Gerald::MatchTimeBudget#time_rule" {
    label = "::Opus::CIBot::Gerald::MatchTimeBudget#time_rule";
    color = blue;
    bb57_0 [shape = invhouse];
    bb57_1 [shape = parallelogram];

    bb57_0 [label = "(dur_ms, rule, res, PER_RULE_MS$16, MatchTimeout$20)\n<dynamic>$4 = alias <dynamic> : <dynamic>\nPER_RULE_MS$16 = alias PER_RULE_MS : <dynamic>\nMatchTimeout$20 = alias MatchTimeout : <singleton class:MatchTimeout>\n<self>$1 = self : MatchTimeBudget\nrule = load_arg(<self>$1#time_rule, 0) : <dynamic>\nrule_start = <dynamic>$4.now() : <dynamic>\nres = NotSupported() : <dynamic>\nstatTmp$8 = <dynamic>$4.now() : <dynamic>\nstatTmp$7 = statTmp$8.-(rule_start) : <dynamic>\nstatTmp$11 = 1000 : Integer(1000)\ndur_ms = statTmp$7.*(statTmp$11) : <dynamic>\nifTmp$13 = dur_ms.>(PER_RULE_MS$16) : <dynamic>\nifTmp$13"];
    bb57_0 -> bb57_2;
    bb57_0 -> bb57_3;

    bb57_1 [label = "()\n<unconditinal>"];
    bb57_1 -> bb57_1;
    bb57_2 [label = "(dur_ms, rule, res, PER_RULE_MS$16, MatchTimeout$20)\nstatTmp$17 = self : MatchTimeBudget\nstatTmp$28 = Gerald rule ' : String(\"Gerald rule '\")\nstatTmp$30 = rule.token() : <dynamic>\nstatTmp$29 = statTmp$30.to_s() : <dynamic>\nstatTmp$27 = statTmp$28.concat(statTmp$29) : <dynamic>\nstatTmp$32 = ' exceeded per-rule time budget actual= : String(\"' exceeded per-rule time budget actual=\")\nstatTmp$26 = statTmp$27.concat(statTmp$32) : <dynamic>\nstatTmp$34 = dur_ms.to_i() : <dynamic>\nstatTmp$33 = statTmp$34.to_s() : <dynamic>\nstatTmp$25 = statTmp$26.concat(statTmp$33) : <dynamic>\nstatTmp$36 = ms budget= : String(\"ms budget=\")\nstatTmp$24 = statTmp$25.concat(statTmp$36) : <dynamic>\nstatTmp$37 = PER_RULE_MS$16.to_s() : <dynamic>\nstatTmp$23 = statTmp$24.concat(statTmp$37) : <dynamic>\nstatTmp$39 = ms : String(\"ms\")\nstatTmp$22 = statTmp$23.concat(statTmp$39) : <dynamic>\nstatTmp$21 = statTmp$22.to_s() : <dynamic>\nstatTmp$40 = NotSupported() : <dynamic>\nstatTmp$18 = MatchTimeout$20.new(statTmp$21, statTmp$40) : MatchTimeout\nstatTmp$12 = statTmp$17.raise(statTmp$18) : <dynamic>\n<unconditinal>"];
    bb57_2 -> bb57_4;
    bb57_3 [label = "(res)\nstatTmp$12 = NotSupported() : <dynamic>\n<unconditinal>"];
    bb57_3 -> bb57_4;
    bb57_4 [label = "(res)\nstatTmp$42 = self : MatchTimeBudget\nstatTmp$41 = statTmp$42.check!() : <dynamic>\n<ret>$43 = return res : <bottom>\n<unconditinal>"];
    bb57_4 -> bb57_1;
}

subgraph "cluster_::Opus::CIBot::Gerald::Diff#initialize" {
    label = "::Opus::CIBot::Gerald::Diff#initialize";
    color = blue;
    bb60_0 [shape = invhouse];
    bb60_1 [shape = parallelogram];

    bb60_0 [label = "()\n@raw$3 = alias @raw : <dynamic>\n@parsed$4 = alias @parsed : <dynamic>\n<self>$1 = self : Diff\nraw_diff = load_arg(<self>$1#initialize, 0) : <dynamic>\nstatTmp$5 = self : Diff\n@parsed$4 = statTmp$5.parse(raw_diff) : <dynamic>\n<ret>$7 = return @parsed$4 : <bottom>\n<unconditinal>"];
    bb60_0 -> bb60_1;
    bb60_1 [label = "()\n<unconditinal>"];
    bb60_1 -> bb60_1;
}

subgraph "cluster_::Opus::CIBot::Gerald::Diff#affected_files" {
    label = "::Opus::CIBot::Gerald::Diff#affected_files";
    color = blue;
    bb62_0 [shape = invhouse];
    bb62_1 [shape = parallelogram];

    bb62_0 [label = "()\nstatTmp$4 = self : Diff\nstatTmp$3 = statTmp$4.added_files() : <dynamic>\nstatTmp$6 = self : Diff\nstatTmp$5 = statTmp$6.deleted_files() : <dynamic>\nstatTmp$2 = statTmp$3.+(statTmp$5) : <dynamic>\nstatTmp$8 = self : Diff\nstatTmp$7 = statTmp$8.changed_files() : <dynamic>\n<ret>$39 = statTmp$2.+(statTmp$7) : <dynamic>\n<ret>$9 = return <ret>$39 : <bottom>\n<unconditinal>"];
    bb62_0 -> bb62_1;
    bb62_1 [label = "()\n<unconditinal>"];
    bb62_1 -> bb62_1;
}

subgraph "cluster_::Opus::CIBot::Gerald::Diff#added_files" {
    label = "::Opus::CIBot::Gerald::Diff#added_files";
    color = blue;
    bb63_0 [shape = invhouse];
    bb63_1 [shape = parallelogram];

    bb63_0 [label = "(statTmp$3, @parsed$4)\n@parsed$4 = alias @parsed : <dynamic>\nstatTmp$3 = @parsed$4 : <dynamic>\n<unconditinal>"];
    bb63_0 -> bb63_2;
    bb63_1 [label = "()\n<unconditinal>"];
    bb63_1 -> bb63_1;
    bb63_2 [label = "(statTmp$3, @parsed$4)\nouterLoops: 1\n<block-call>"];
    bb63_2 -> bb63_4;
    bb63_2 -> bb63_3;

    bb63_3 [label = "(statTmp$2, @parsed$4)\nstatTmp$2 = @parsed$4.select() : <dynamic>\n<unconditinal>"];
    bb63_3 -> bb63_5;
    bb63_4 [label = "(statTmp$3, @parsed$4)\nouterLoops: 1\npart$9 = load_arg(statTmp$3#select, 0) : <dynamic>\nstatTmp$8 = NotSupported() : <dynamic>\nstatTmp$6 = part$9.[](statTmp$8) : <dynamic>\nstatTmp$9 = /dev/null : String(\"/dev/null\")\n<blockret>$5 = statTmp$6.==(statTmp$9) : <dynamic>\n<unconditinal>"];
    bb63_4 -> bb63_2;
    bb63_5 [label = "(statTmp$2)\nouterLoops: 1\n<block-call>"];
    bb63_5 -> bb63_7;
    bb63_5 -> bb63_6;

    bb63_6 [label = "(statTmp$2)\n<ret>$40 = statTmp$2.map() : <dynamic>\n<ret>$13 = return <ret>$40 : <bottom>\n<unconditinal>"];
    bb63_6 -> bb63_1;
    bb63_7 [label = "(statTmp$2)\nouterLoops: 1\npart$11 = load_arg(statTmp$2#map, 0) : <dynamic>\nstatTmp$12 = NotSupported() : <dynamic>\n<blockret>$10 = part$11.[](statTmp$12) : <dynamic>\n<unconditinal>"];
    bb63_7 -> bb63_5;
}

subgraph "cluster_::Opus::CIBot::Gerald::Diff#deleted_files" {
    label = "::Opus::CIBot::Gerald::Diff#deleted_files";
    color = blue;
    bb68_0 [shape = invhouse];
    bb68_1 [shape = parallelogram];

    bb68_0 [label = "(statTmp$3, @parsed$4)\n@parsed$4 = alias @parsed : <dynamic>\nstatTmp$3 = @parsed$4 : <dynamic>\n<unconditinal>"];
    bb68_0 -> bb68_2;
    bb68_1 [label = "()\n<unconditinal>"];
    bb68_1 -> bb68_1;
    bb68_2 [label = "(statTmp$3, @parsed$4)\nouterLoops: 1\n<block-call>"];
    bb68_2 -> bb68_4;
    bb68_2 -> bb68_3;

    bb68_3 [label = "(statTmp$2, @parsed$4)\nstatTmp$2 = @parsed$4.select() : <dynamic>\n<unconditinal>"];
    bb68_3 -> bb68_5;
    bb68_4 [label = "(statTmp$3, @parsed$4)\nouterLoops: 1\npart$13 = load_arg(statTmp$3#select, 0) : <dynamic>\nstatTmp$8 = NotSupported() : <dynamic>\nstatTmp$6 = part$13.[](statTmp$8) : <dynamic>\nstatTmp$9 = /dev/null : String(\"/dev/null\")\n<blockret>$5 = statTmp$6.==(statTmp$9) : <dynamic>\n<unconditinal>"];
    bb68_4 -> bb68_2;
    bb68_5 [label = "(statTmp$2)\nouterLoops: 1\n<block-call>"];
    bb68_5 -> bb68_7;
    bb68_5 -> bb68_6;

    bb68_6 [label = "(statTmp$2)\n<ret>$41 = statTmp$2.map() : <dynamic>\n<ret>$13 = return <ret>$41 : <bottom>\n<unconditinal>"];
    bb68_6 -> bb68_1;
    bb68_7 [label = "(statTmp$2)\nouterLoops: 1\npart$15 = load_arg(statTmp$2#map, 0) : <dynamic>\nstatTmp$12 = NotSupported() : <dynamic>\n<blockret>$10 = part$15.[](statTmp$12) : <dynamic>\n<unconditinal>"];
    bb68_7 -> bb68_5;
}

subgraph "cluster_::Opus::CIBot::Gerald::Diff#changed_files" {
    label = "::Opus::CIBot::Gerald::Diff#changed_files";
    color = blue;
    bb73_0 [shape = invhouse];
    bb73_1 [shape = parallelogram];

    bb73_0 [label = "(statTmp$3, @parsed$4)\n@parsed$4 = alias @parsed : <dynamic>\nstatTmp$3 = @parsed$4 : <dynamic>\n<unconditinal>"];
    bb73_0 -> bb73_2;
    bb73_1 [label = "()\n<unconditinal>"];
    bb73_1 -> bb73_1;
    bb73_2 [label = "(statTmp$3, @parsed$4)\nouterLoops: 1\n<block-call>"];
    bb73_2 -> bb73_4;
    bb73_2 -> bb73_3;

    bb73_3 [label = "(statTmp$2, @parsed$4)\nstatTmp$2 = @parsed$4.select() : <dynamic>\n<unconditinal>"];
    bb73_3 -> bb73_5;
    bb73_4 [label = "(statTmp$3, @parsed$4)\nouterLoops: 1\npart$17 = load_arg(statTmp$3#select, 0) : <dynamic>\nstatTmp$8 = NotSupported() : <dynamic>\nstatTmp$6 = part$17.[](statTmp$8) : <dynamic>\nstatTmp$11 = NotSupported() : <dynamic>\nstatTmp$9 = part$17.[](statTmp$11) : <dynamic>\n<blockret>$5 = statTmp$6.==(statTmp$9) : <dynamic>\n<unconditinal>"];
    bb73_4 -> bb73_2;
    bb73_5 [label = "(statTmp$2)\nouterLoops: 1\n<block-call>"];
    bb73_5 -> bb73_7;
    bb73_5 -> bb73_6;

    bb73_6 [label = "(statTmp$2)\n<ret>$42 = statTmp$2.map() : <dynamic>\n<ret>$15 = return <ret>$42 : <bottom>\n<unconditinal>"];
    bb73_6 -> bb73_1;
    bb73_7 [label = "(statTmp$2)\nouterLoops: 1\npart$19 = load_arg(statTmp$2#map, 0) : <dynamic>\nstatTmp$14 = NotSupported() : <dynamic>\n<blockret>$12 = part$19.[](statTmp$14) : <dynamic>\n<unconditinal>"];
    bb73_7 -> bb73_5;
}

subgraph "cluster_::Opus::CIBot::Gerald::Diff#added_lines" {
    label = "::Opus::CIBot::Gerald::Diff#added_lines";
    color = blue;
    bb78_0 [shape = invhouse];
    bb78_1 [shape = parallelogram];

    bb78_0 [label = "(statTmp$3, @parsed$4)\n@parsed$4 = alias @parsed : <dynamic>\nstatTmp$3 = @parsed$4 : <dynamic>\n<unconditinal>"];
    bb78_0 -> bb78_2;
    bb78_1 [label = "()\n<unconditinal>"];
    bb78_1 -> bb78_1;
    bb78_2 [label = "(statTmp$3, @parsed$4)\nouterLoops: 1\n<block-call>"];
    bb78_2 -> bb78_4;
    bb78_2 -> bb78_3;

    bb78_3 [label = "(@parsed$4)\nstatTmp$2 = @parsed$4.map() : <dynamic>\n<ret>$43 = statTmp$2.flatten() : <dynamic>\n<ret>$8 = return <ret>$43 : <bottom>\n<unconditinal>"];
    bb78_3 -> bb78_1;
    bb78_4 [label = "(statTmp$3, @parsed$4)\nouterLoops: 1\npart$21 = load_arg(statTmp$3#map, 0) : <dynamic>\nstatTmp$7 = NotSupported() : <dynamic>\n<blockret>$5 = part$21.[](statTmp$7) : <dynamic>\n<unconditinal>"];
    bb78_4 -> bb78_2;
}

subgraph "cluster_::Opus::CIBot::Gerald::Diff#removed_lines" {
    label = "::Opus::CIBot::Gerald::Diff#removed_lines";
    color = blue;
    bb81_0 [shape = invhouse];
    bb81_1 [shape = parallelogram];

    bb81_0 [label = "(statTmp$3, @parsed$4)\n@parsed$4 = alias @parsed : <dynamic>\nstatTmp$3 = @parsed$4 : <dynamic>\n<unconditinal>"];
    bb81_0 -> bb81_2;
    bb81_1 [label = "()\n<unconditinal>"];
    bb81_1 -> bb81_1;
    bb81_2 [label = "(statTmp$3, @parsed$4)\nouterLoops: 1\n<block-call>"];
    bb81_2 -> bb81_4;
    bb81_2 -> bb81_3;

    bb81_3 [label = "(@parsed$4)\nstatTmp$2 = @parsed$4.map() : <dynamic>\n<ret>$44 = statTmp$2.flatten() : <dynamic>\n<ret>$8 = return <ret>$44 : <bottom>\n<unconditinal>"];
    bb81_3 -> bb81_1;
    bb81_4 [label = "(statTmp$3, @parsed$4)\nouterLoops: 1\npart$23 = load_arg(statTmp$3#map, 0) : <dynamic>\nstatTmp$7 = NotSupported() : <dynamic>\n<blockret>$5 = part$23.[](statTmp$7) : <dynamic>\n<unconditinal>"];
    bb81_4 -> bb81_2;
}

subgraph "cluster_::Opus::CIBot::Gerald::Diff#changed_lines" {
    label = "::Opus::CIBot::Gerald::Diff#changed_lines";
    color = blue;
    bb84_0 [shape = invhouse];
    bb84_1 [shape = parallelogram];

    bb84_0 [label = "()\nstatTmp$3 = self : Diff\nstatTmp$2 = statTmp$3.added_lines() : <dynamic>\nstatTmp$5 = self : Diff\nstatTmp$4 = statTmp$5.removed_lines() : <dynamic>\n<ret>$45 = statTmp$2.+(statTmp$4) : <dynamic>\n<ret>$6 = return <ret>$45 : <bottom>\n<unconditinal>"];
    bb84_0 -> bb84_1;
    bb84_1 [label = "()\n<unconditinal>"];
    bb84_1 -> bb84_1;
}

subgraph "cluster_::Opus::CIBot::Gerald::Diff#changed_openapi?" {
    label = "::Opus::CIBot::Gerald::Diff#changed_openapi?";
    color = blue;
    bb85_0 [shape = invhouse];
    bb85_1 [shape = parallelogram];

    bb85_0 [label = "()\n<dynamic>$5 = alias <dynamic> : <dynamic>\nstatTmp$3 = self : Diff\nstatTmp$2 = statTmp$3.changed_files() : <dynamic>\n<ret>$46 = statTmp$2.include?(<dynamic>$5) : <dynamic>\n<ret>$6 = return <ret>$46 : <bottom>\n<unconditinal>"];
    bb85_0 -> bb85_1;
    bb85_1 [label = "()\n<unconditinal>"];
    bb85_1 -> bb85_1;
}

subgraph "cluster_::Opus::CIBot::Gerald::Diff#parse" {
    label = "::Opus::CIBot::Gerald::Diff#parse";
    color = blue;
    bb87_0 [shape = invhouse];
    bb87_1 [shape = parallelogram];

    bb87_0 [label = "(parts)\n<self>$1 = self : Diff\ndiff = load_arg(<self>$1#parse, 0) : <dynamic>\nstatTmp$5 = NotSupported() : <dynamic>\nstatTmp$3 = diff.split(statTmp$5) : <dynamic>\nstatTmp$6 = NotSupported() : <dynamic>\nparts = statTmp$3.[](statTmp$6) : <dynamic>\nifTmp$8 = parts : <dynamic>\nifTmp$8"];
    bb87_0 -> bb87_2;
    bb87_0 -> bb87_3;

    bb87_1 [label = "()\n<unconditinal>"];
    bb87_1 -> bb87_1;
    bb87_2 [label = "(parts)\n<unconditinal>"];
    bb87_2 -> bb87_4;
    bb87_3 [label = "(parts)\nparts = NotSupported() : <dynamic>\n<unconditinal>"];
    bb87_3 -> bb87_4;
    bb87_4 [label = "(parts, statTmp$10)\nstatTmp$10 = parts : <dynamic>\n<unconditinal>"];
    bb87_4 -> bb87_5;
    bb87_5 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 1\n<block-call>"];
    bb87_5 -> bb87_7;
    bb87_5 -> bb87_6;

    bb87_6 [label = "(parts)\nstatTmp$9 = parts.map() : <dynamic>\n<ret>$47 = statTmp$9.compact() : <dynamic>\n<ret>$67 = return <ret>$47 : <bottom>\n<unconditinal>"];
    bb87_6 -> bb87_1;
    bb87_7 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 1\npart$26 = load_arg(statTmp$10#map, 0) : <dynamic>\nstatTmp$14 = 
 : String(\"\n\")\nlines = part$26.split(statTmp$14) : <dynamic>\nb_name = NotSupported() : <dynamic>\na_name = b_name : <dynamic>\nadded_lines = NotSupported() : <dynamic>\nremoved_lines = NotSupported() : <dynamic>\nstatTmp$19 = lines : <dynamic>\n<unconditinal>"];
    bb87_7 -> bb87_8;
    bb87_8 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 2\n<block-call>"];
    bb87_8 -> bb87_10;
    bb87_8 -> bb87_9;

    bb87_9 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 1\nstatTmp$18 = lines.each() : <dynamic>\nifTmp$65 = a_name.nil?() : <dynamic>\nifTmp$65"];
    bb87_9 -> bb87_38;
    bb87_9 -> bb87_39;

    bb87_10 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 2\nline$28 = load_arg(statTmp$19#each, 0) : <dynamic>\nstatTmp$23 = index  : String(\"index \")\nstatTmp$24 = @@ : String(\"@@\")\nstatTmp$25 = new file mode : String(\"new file mode\")\nifTmp$21 = line$28.start_with?(statTmp$23, statTmp$24, statTmp$25) : <dynamic>\nifTmp$21"];
    bb87_10 -> bb87_11;
    bb87_10 -> bb87_12;

    bb87_11 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 2\n<blockret>$20 = NotSupported() : <dynamic>\n<unconditinal>"];
    bb87_11 -> bb87_37;
    bb87_12 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 2\nstatTmp$28 = --- : String(\"---\")\nifTmp$26 = line$28.start_with?(statTmp$28) : <dynamic>\nifTmp$26"];
    bb87_12 -> bb87_13;
    bb87_12 -> bb87_14;

    bb87_13 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 2\nstatTmp$31 = NotSupported() : <dynamic>\na_name = line$28.[](statTmp$31) : <dynamic>\nifTmp$33 = a_name : <dynamic>\nifTmp$33"];
    bb87_13 -> bb87_17;
    bb87_13 -> bb87_18;

    bb87_14 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 2\nstatTmp$40 = +++ : String(\"+++\")\nifTmp$38 = line$28.start_with?(statTmp$40) : <dynamic>\nifTmp$38"];
    bb87_14 -> bb87_21;
    bb87_14 -> bb87_22;

    bb87_15 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 2\nstatTmp$36 = a_name : <dynamic>\nstatTmp$37 = NotSupported() : <dynamic>\na_name = statTmp$36.[](statTmp$37) : <dynamic>\n<unconditinal>"];
    bb87_15 -> bb87_20;
    bb87_16 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 2\n<blockret>$20 = NotSupported() : <dynamic>\n<unconditinal>"];
    bb87_16 -> bb87_20;
    bb87_17 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 2\nstatTmp$35 = a/ : String(\"a/\")\nifTmp$32 = a_name.start_with?(statTmp$35) : <dynamic>\n<unconditinal>"];
    bb87_17 -> bb87_19;
    bb87_18 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 2\nifTmp$32 = a_name : <dynamic>\n<unconditinal>"];
    bb87_18 -> bb87_19;
    bb87_19 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 2\nifTmp$32"];
    bb87_19 -> bb87_15;
    bb87_19 -> bb87_16;

    bb87_20 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 2\n<unconditinal>"];
    bb87_20 -> bb87_36;
    bb87_21 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 2\nstatTmp$43 = NotSupported() : <dynamic>\nb_name = line$28.[](statTmp$43) : <dynamic>\nifTmp$45 = b_name : <dynamic>\nifTmp$45"];
    bb87_21 -> bb87_25;
    bb87_21 -> bb87_26;

    bb87_22 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 2\nstatTmp$52 = + : String(\"+\")\nifTmp$50 = line$28.start_with?(statTmp$52) : <dynamic>\nifTmp$50"];
    bb87_22 -> bb87_29;
    bb87_22 -> bb87_30;

    bb87_23 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 2\nstatTmp$48 = b_name : <dynamic>\nstatTmp$49 = NotSupported() : <dynamic>\nb_name = statTmp$48.[](statTmp$49) : <dynamic>\n<unconditinal>"];
    bb87_23 -> bb87_28;
    bb87_24 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 2\n<blockret>$20 = NotSupported() : <dynamic>\n<unconditinal>"];
    bb87_24 -> bb87_28;
    bb87_25 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 2\nstatTmp$47 = b/ : String(\"b/\")\nifTmp$44 = b_name.start_with?(statTmp$47) : <dynamic>\n<unconditinal>"];
    bb87_25 -> bb87_27;
    bb87_26 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 2\nifTmp$44 = b_name : <dynamic>\n<unconditinal>"];
    bb87_26 -> bb87_27;
    bb87_27 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 2\nifTmp$44"];
    bb87_27 -> bb87_23;
    bb87_27 -> bb87_24;

    bb87_28 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 2\n<unconditinal>"];
    bb87_28 -> bb87_35;
    bb87_29 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 2\nstatTmp$56 = NotSupported() : <dynamic>\nstatTmp$54 = line$28.[](statTmp$56) : <dynamic>\n<blockret>$20 = added_lines.<<(statTmp$54) : <dynamic>\n<unconditinal>"];
    bb87_29 -> bb87_34;
    bb87_30 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 2\nstatTmp$59 = - : String(\"-\")\nifTmp$57 = line$28.start_with?(statTmp$59) : <dynamic>\nifTmp$57"];
    bb87_30 -> bb87_31;
    bb87_30 -> bb87_32;

    bb87_31 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 2\nstatTmp$63 = NotSupported() : <dynamic>\nstatTmp$61 = line$28.[](statTmp$63) : <dynamic>\n<blockret>$20 = removed_lines.<<(statTmp$61) : <dynamic>\n<unconditinal>"];
    bb87_31 -> bb87_33;
    bb87_32 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 2\n<blockret>$20 = NotSupported() : <dynamic>\n<unconditinal>"];
    bb87_32 -> bb87_33;
    bb87_33 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 2\n<unconditinal>"];
    bb87_33 -> bb87_34;
    bb87_34 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 2\n<unconditinal>"];
    bb87_34 -> bb87_35;
    bb87_35 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 2\n<unconditinal>"];
    bb87_35 -> bb87_36;
    bb87_36 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 2\n<unconditinal>"];
    bb87_36 -> bb87_37;
    bb87_37 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 2\n<unconditinal>"];
    bb87_37 -> bb87_8;
    bb87_38 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 1\nstatTmp$64 = NotSupported() : <dynamic>\n<unconditinal>"];
    bb87_38 -> bb87_40;
    bb87_39 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 1\nstatTmp$64 = NotSupported() : <dynamic>\n<unconditinal>"];
    bb87_39 -> bb87_40;
    bb87_40 [label = "(a_name, b_name, added_lines, removed_lines, parts, lines, line$28, statTmp$10, statTmp$19, ifTmp$32, ifTmp$44)\nouterLoops: 1\n<blockret>$11 = NotSupported() : <dynamic>\n<unconditinal>"];
    bb87_40 -> bb87_5;
}

}

