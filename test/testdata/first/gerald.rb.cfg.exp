digraph "gerald.rb"{
subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeout>#initialize" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeout>#initialize";
    color = blue;
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeout>#initialize_0" [shape = invhouse];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeout>#initialize_1" [shape = parallelogram];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeout>#initialize_0" [label = "block[id=0]()
@rule_token$7 = alias @rule_token : untyped
selfMethodTemp$3 = self : MatchTimeout
message = load_arg(selfMethodTemp$3#initialize, 0) : untyped
rule_token = load_arg(selfMethodTemp$3#initialize, 1) : untyped
statTemp$5 = self : MatchTimeout
statTemp$4 = statTemp$5.super(message) : untyped
@rule_token$7 = rule_token : untyped
finalReturn = return rule_token : <bottom>
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeout>#initialize_0" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeout>#initialize_1" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeout>#initialize_1" [label = "block[id=1]()
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeout>#initialize_1" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeout>#initialize_1" [style="bold"];
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize";
    color = blue;
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_0" [shape = invhouse];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_1" [shape = parallelogram];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_0" [label = "block[id=0](@rules$18)
<constant:GeraldRule>$11 = alias <constant:GeraldRule> : untyped
<constant:<Magic>>$14 = alias <constant:<Magic>> : <Magic>
@rules$18 = alias @rules : untyped
statTemp$12 = <symbol:deleted_at_is_nil> : Symbol(:\"deleted_at_is_nil\")
statTemp$9 = <constant:GeraldRule>$11.query_by(statTemp$12) : untyped
statTemp$13 = <constant:<Magic>>$14.<build-hash>() : ShapeType {
}
statTemp$8 = statTemp$9.load_all(statTemp$13) : untyped
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_0" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_2" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_1" [label = "block[id=1]()
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_1" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_1" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_2" [label = "block[id=2](statTemp$8, @rules$18)
outerLoops: 1
<block-call>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_2" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_4" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_2" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_3" [style="tapered"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_3" [label = "block[id=3](statTemp$8, @rules$18)
assignTemp$3 = statTemp$8.partition() : untyped
statTemp$20 = 0 : Integer(0)
@rules$18 = assignTemp$3.[](statTemp$20) : untyped
statTemp$23 = 1 : Integer(1)
invalid_rules = assignTemp$3.[](statTemp$23) : untyped
statTemp$25 = invalid_rules.empty?() : untyped
ifTemp$24 = statTemp$25.!() : untyped
ifTemp$24"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_3" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_5" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_3" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_10" [style="tapered"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_4" [label = "block[id=4](statTemp$8, @rules$18)
outerLoops: 1
<block-nested: <block-pass>$2> = load_arg(statTemp$8#partition, 0) : untyped
blockReturnTemp$15 = <block-nested: <block-pass>$2>.valid?() : untyped
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_4" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_2" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_5" [label = "block[id=5](invalid_rules)
statTemp$29 = invalid_rules : untyped
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_5" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_7" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_7" [label = "block[id=7](statTemp$29)
outerLoops: 1
<block-call>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_7" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_9" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_7" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_8" [style="tapered"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_8" [label = "block[id=8](statTemp$29)
statTemp$28 = statTemp$29.map() : untyped
statTemp$32 = , : String(\",\")
invalid_rule_ids = statTemp$28.join(statTemp$32) : untyped
statTemp$34 = self : Matcher
statTemp$33 = statTemp$34.log() : untyped
statTemp$36 = Gerald skipping invalid rules:  : String(\"Gerald skipping invalid rules: \")
statTemp$35 = statTemp$36.+(invalid_rule_ids) : String
returnMethodTemp$4 = statTemp$33.warn(statTemp$35) : untyped
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_8" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_10" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_9" [label = "block[id=9](statTemp$29)
outerLoops: 1
<block-nested: <block-pass>$4> = load_arg(statTemp$29#map, 0) : untyped
blockReturnTemp$30 = <block-nested: <block-pass>$4>.token() : untyped
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_9" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_7" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_10" [label = "block[id=10](returnMethodTemp$4)
finalReturn = return returnMethodTemp$4 : <bottom>
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_10" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize_1" [style="bold"];
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match";
    color = blue;
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_0" [shape = invhouse];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_1" [shape = parallelogram];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_0" [label = "block[id=0](<constant:<Magic>>$27, <constant:MatchTimeBudget>$30, @rules$32)
<constant:MAX_AFFECTED_FILES>$12 = alias <constant:MAX_AFFECTED_FILES> : Integer
<constant:<Magic>>$27 = alias <constant:<Magic>> : <Magic>
<constant:MatchTimeBudget>$30 = alias <constant:MatchTimeBudget> : <class:MatchTimeBudget>
@rules$32 = alias @rules : untyped
selfMethodTemp$4 = self : Matcher
match_context = load_arg(selfMethodTemp$4#match, 0) : untyped
statTemp$9 = match_context.diff() : untyped
statTemp$8 = statTemp$9.affected_files() : untyped
statTemp$7 = statTemp$8.count() : untyped
ifTemp$6 = statTemp$7.>(<constant:MAX_AFFECTED_FILES>$12) : untyped
ifTemp$6"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_0" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_2" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_0" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_3" [style="tapered"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_1" [label = "block[id=1]()
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_1" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_1" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_2" [label = "block[id=2](match_context, <constant:<Magic>>$27)
statTemp$15 = self : Matcher
statTemp$14 = statTemp$15.log() : untyped
statTemp$19 = Gerald skipping large PR with  : String(\"Gerald skipping large PR with \")
statTemp$23 = match_context.diff() : untyped
statTemp$22 = statTemp$23.affected_files() : untyped
statTemp$21 = statTemp$22.count() : untyped
statTemp$20 = statTemp$21.to_s() : untyped
statTemp$18 = statTemp$19.concat(statTemp$20) : String
statTemp$25 =  affected files : String(\" affected files\")
statTemp$17 = statTemp$18.concat(statTemp$25) : String
statTemp$16 = statTemp$17.to_s() : String
statTemp$13 = statTemp$14.warn(statTemp$16) : untyped
returnTemp$26 = <constant:<Magic>>$27.<build-array>() : TupleType {
}
statTemp$5 = return returnTemp$26 : <bottom>
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_2" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_1" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_3" [label = "block[id=3](match_context, <constant:MatchTimeBudget>$30, @rules$32)
budget = <constant:MatchTimeBudget>$30.new() : MatchTimeBudget
statTemp$31 = @rules$32 : untyped
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_3" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_4" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_4" [label = "block[id=4](match_context, budget, <block-nested: r>, statTemp$31)
outerLoops: 1
<block-call>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_4" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_6" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_4" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_5" [style="tapered"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_5" [label = "block[id=5](statTemp$31)
returnMethodTemp$3 = statTemp$31.select() : untyped
finalReturn = return returnMethodTemp$3 : <bottom>
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_5" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_1" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_6" [label = "block[id=6](match_context, budget, <block-nested: r>, statTemp$31)
outerLoops: 1
<block-nested: r> = load_arg(statTemp$31#select, 0) : untyped
statTemp$34 = budget : MatchTimeBudget
statTemp$35 = <block-nested: r> : untyped
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_6" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_7" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_7" [label = "block[id=7](match_context, budget, <block-nested: r>, statTemp$31, statTemp$34, statTemp$35)
outerLoops: 2
<block-call>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_7" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_9" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_7" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_8" [style="tapered"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_8" [label = "block[id=8](match_context, budget, <block-nested: r>, statTemp$31, statTemp$34, statTemp$35)
outerLoops: 1
blockReturnTemp$33 = statTemp$34.time_rule(statTemp$35) : untyped
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_8" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_4" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_9" [label = "block[id=9](match_context, budget, <block-nested: r>, statTemp$31, statTemp$34, statTemp$35)
outerLoops: 2
blockReturnTemp$36 = <block-nested: r>.matches?(match_context) : untyped
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_9" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match_7" [style="bold"];
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchContext>#initialize" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchContext>#initialize";
    color = blue;
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchContext>#initialize_0" [shape = invhouse];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchContext>#initialize_1" [shape = parallelogram];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchContext>#initialize_0" [label = "block[id=0]()
@repo$5 = alias @repo : untyped
@assignee$7 = alias @assignee : untyped
@gh_user$9 = alias @gh_user : untyped
@merge_branch$11 = alias @merge_branch : untyped
@body$13 = alias @body : untyped
@title$15 = alias @title : untyped
@diff$17 = alias @diff : untyped
@openapi_diff$18 = alias @openapi_diff : untyped
selfMethodTemp$3 = self : MatchContext
repo = load_arg(selfMethodTemp$3#initialize, 0) : untyped
assignee = load_arg(selfMethodTemp$3#initialize, 1) : untyped
gh_user = load_arg(selfMethodTemp$3#initialize, 2) : untyped
merge_branch = load_arg(selfMethodTemp$3#initialize, 3) : untyped
body = load_arg(selfMethodTemp$3#initialize, 4) : untyped
title = load_arg(selfMethodTemp$3#initialize, 5) : untyped
diff = load_arg(selfMethodTemp$3#initialize, 6) : untyped
openapi_diff = load_arg(selfMethodTemp$3#initialize, 7) : untyped
@repo$5 = repo : untyped
@assignee$7 = assignee : untyped
@gh_user$9 = gh_user : untyped
@merge_branch$11 = merge_branch : untyped
@body$13 = body : untyped
@title$15 = title : untyped
@diff$17 = diff : untyped
@openapi_diff$18 = openapi_diff : untyped
finalReturn = return openapi_diff : <bottom>
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchContext>#initialize_0" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchContext>#initialize_1" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchContext>#initialize_1" [label = "block[id=1]()
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchContext>#initialize_1" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchContext>#initialize_1" [style="bold"];
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchContext>#user_stripe_suffix?" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchContext>#user_stripe_suffix?";
    color = blue;
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchContext>#user_stripe_suffix?_0" [shape = invhouse];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchContext>#user_stripe_suffix?_1" [shape = parallelogram];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchContext>#user_stripe_suffix?_0" [label = "block[id=0]()
@repo$6 = alias @repo : untyped
statTemp$7 = stripe-internal/ : String(\"stripe-internal/\")
statTemp$4 = @repo$6.start_with?(statTemp$7) : untyped
returnMethodTemp$2 = statTemp$4.!() : untyped
finalReturn = return returnMethodTemp$2 : <bottom>
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchContext>#user_stripe_suffix?_0" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchContext>#user_stripe_suffix?_1" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchContext>#user_stripe_suffix?_1" [label = "block[id=1]()
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchContext>#user_stripe_suffix?_1" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchContext>#user_stripe_suffix?_1" [style="bold"];
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#initialize" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#initialize";
    color = blue;
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#initialize_0" [shape = invhouse];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#initialize_1" [shape = parallelogram];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#initialize_0" [label = "block[id=0]()
@start$4 = alias @start : untyped
<constant:Time>$6 = alias <constant:Time> : <class:Time>
@start$4 = <constant:Time>$6.now() : Time
finalReturn = return @start$4 : <bottom>
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#initialize_0" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#initialize_1" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#initialize_1" [label = "block[id=1]()
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#initialize_1" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#initialize_1" [style="bold"];
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#check!" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#check!";
    color = blue;
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#check!_0" [shape = invhouse];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#check!_1" [shape = parallelogram];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#check!_0" [label = "block[id=0](<constant:TOTAL_TIME_MS>$15, <constant:MatchTimeout>$19)
<constant:Time>$8 = alias <constant:Time> : <class:Time>
@start$10 = alias @start : untyped
<constant:TOTAL_TIME_MS>$15 = alias <constant:TOTAL_TIME_MS> : Integer
<constant:MatchTimeout>$19 = alias <constant:MatchTimeout> : <class:MatchTimeout>
statTemp$6 = <constant:Time>$8.now() : Time
statTemp$5 = statTemp$6.-(@start$10) : Float
statTemp$11 = 1000 : Integer(1000)
dur_ms = statTemp$5.*(statTemp$11) : Float
ifTemp$12 = dur_ms.>(<constant:TOTAL_TIME_MS>$15) : TrueClass | FalseClass
ifTemp$12"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#check!_0" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#check!_2" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#check!_0" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#check!_4" [style="tapered"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#check!_1" [label = "block[id=1]()
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#check!_1" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#check!_1" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#check!_2" [label = "block[id=2](<constant:TOTAL_TIME_MS>$15, <constant:MatchTimeout>$19)
statTemp$16 = self : MatchTimeBudget
statTemp$23 = Gerald match time budged exceeded  : String(\"Gerald match time budged exceeded \")
statTemp$24 = <constant:TOTAL_TIME_MS>$15.to_s() : String
statTemp$22 = statTemp$23.concat(statTemp$24) : String
statTemp$26 = ms : String(\"ms\")
statTemp$21 = statTemp$22.concat(statTemp$26) : String
statTemp$20 = statTemp$21.to_s() : String
statTemp$17 = <constant:MatchTimeout>$19.new(statTemp$20) : MatchTimeout
returnMethodTemp$2 = statTemp$16.raise(statTemp$17) : NilClass
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#check!_2" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#check!_4" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#check!_4" [label = "block[id=4](returnMethodTemp$2)
finalReturn = return returnMethodTemp$2 : <bottom>
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#check!_4" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#check!_1" [style="bold"];
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#time_rule" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#time_rule";
    color = blue;
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#time_rule_0" [shape = invhouse];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#time_rule_1" [shape = parallelogram];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#time_rule_0" [label = "block[id=0](<constant:PER_RULE_MS>$20, <constant:MatchTimeout>$24, <constant:<Magic>>$48)
<constant:Time>$6 = alias <constant:Time> : <class:Time>
<constant:PER_RULE_MS>$20 = alias <constant:PER_RULE_MS> : Integer
<constant:MatchTimeout>$24 = alias <constant:MatchTimeout> : <class:MatchTimeout>
<constant:<Magic>>$48 = alias <constant:<Magic>> : <Magic>
selfMethodTemp$3 = self : MatchTimeBudget
rule = load_arg(selfMethodTemp$3#time_rule, 0) : untyped
<blk> = load_arg(selfMethodTemp$3#time_rule, 1) : untyped
rule_start = <constant:Time>$6.now() : Time
res = <blk>.call(statTemp$9) : untyped
statTemp$12 = <constant:Time>$6.now() : Time
statTemp$11 = statTemp$12.-(rule_start) : Float
statTemp$15 = 1000 : Integer(1000)
dur_ms = statTemp$11.*(statTemp$15) : Float
ifTemp$17 = dur_ms.>(<constant:PER_RULE_MS>$20) : TrueClass | FalseClass
ifTemp$17"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#time_rule_0" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#time_rule_2" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#time_rule_0" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#time_rule_4" [style="tapered"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#time_rule_1" [label = "block[id=1]()
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#time_rule_1" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#time_rule_1" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#time_rule_2" [label = "block[id=2](dur_ms, rule, res, <constant:PER_RULE_MS>$20, <constant:MatchTimeout>$24, <constant:<Magic>>$48)
statTemp$21 = self : MatchTimeBudget
statTemp$32 = Gerald rule ' : String(\"Gerald rule '\")
statTemp$34 = rule.token() : untyped
statTemp$33 = statTemp$34.to_s() : untyped
statTemp$31 = statTemp$32.concat(statTemp$33) : String
statTemp$36 = ' exceeded per-rule time budget actual= : String(\"' exceeded per-rule time budget actual=\")
statTemp$30 = statTemp$31.concat(statTemp$36) : String
statTemp$38 = dur_ms.to_i() : Integer
statTemp$37 = statTemp$38.to_s() : String
statTemp$29 = statTemp$30.concat(statTemp$37) : String
statTemp$40 = ms budget= : String(\"ms budget=\")
statTemp$28 = statTemp$29.concat(statTemp$40) : String
statTemp$41 = <constant:PER_RULE_MS>$20.to_s() : String
statTemp$27 = statTemp$28.concat(statTemp$41) : String
statTemp$43 = ms : String(\"ms\")
statTemp$26 = statTemp$27.concat(statTemp$43) : String
statTemp$25 = statTemp$26.to_s() : String
hashTemp$45 = <symbol:rule_token> : Symbol(:\"rule_token\")
hashTemp$46 = rule.token() : untyped
statTemp$44 = <constant:<Magic>>$48.<build-hash>(hashTemp$45, hashTemp$46) : ShapeType {
  Symbol(:\"rule_token\") => untyped
}
statTemp$22 = <constant:MatchTimeout>$24.new(statTemp$25, statTemp$44) : MatchTimeout
statTemp$16 = statTemp$21.raise(statTemp$22) : NilClass
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#time_rule_2" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#time_rule_4" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#time_rule_4" [label = "block[id=4](res)
statTemp$50 = self : MatchTimeBudget
statTemp$49 = statTemp$50.check!() : untyped
finalReturn = return res : <bottom>
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#time_rule_4" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#time_rule_1" [style="bold"];
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#initialize" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#initialize";
    color = blue;
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#initialize_0" [shape = invhouse];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#initialize_1" [shape = parallelogram];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#initialize_0" [label = "block[id=0]()
@raw$5 = alias @raw : untyped
@parsed$6 = alias @parsed : untyped
selfMethodTemp$3 = self : Diff
raw_diff = load_arg(selfMethodTemp$3#initialize, 0) : untyped
@raw$5 = raw_diff : untyped
statTemp$7 = self : Diff
@parsed$6 = statTemp$7.parse(raw_diff) : untyped
finalReturn = return @parsed$6 : <bottom>
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#initialize_0" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#initialize_1" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#initialize_1" [label = "block[id=1]()
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#initialize_1" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#initialize_1" [style="bold"];
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#affected_files" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#affected_files";
    color = blue;
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#affected_files_0" [shape = invhouse];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#affected_files_1" [shape = parallelogram];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#affected_files_0" [label = "block[id=0]()
statTemp$6 = self : Diff
statTemp$5 = statTemp$6.added_files() : untyped
statTemp$8 = self : Diff
statTemp$7 = statTemp$8.deleted_files() : untyped
statTemp$4 = statTemp$5.+(statTemp$7) : untyped
statTemp$10 = self : Diff
statTemp$9 = statTemp$10.changed_files() : untyped
returnMethodTemp$2 = statTemp$4.+(statTemp$9) : untyped
finalReturn = return returnMethodTemp$2 : <bottom>
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#affected_files_0" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#affected_files_1" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#affected_files_1" [label = "block[id=1]()
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#affected_files_1" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#affected_files_1" [style="bold"];
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files";
    color = blue;
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files_0" [shape = invhouse];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files_1" [shape = parallelogram];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files_0" [label = "block[id=0]()
@parsed$8 = alias @parsed : untyped
statTemp$7 = @parsed$8 : untyped
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files_0" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files_2" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files_1" [label = "block[id=1]()
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files_1" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files_1" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files_2" [label = "block[id=2](statTemp$7)
outerLoops: 1
<block-call>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files_2" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files_4" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files_2" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files_3" [style="tapered"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files_3" [label = "block[id=3](statTemp$7)
statTemp$6 = statTemp$7.select() : untyped
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files_3" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files_5" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files_4" [label = "block[id=4](statTemp$7)
outerLoops: 1
<block-nested: part> = load_arg(statTemp$7#select, 0) : untyped
statTemp$12 = <symbol:a_name> : Symbol(:\"a_name\")
statTemp$10 = <block-nested: part>.[](statTemp$12) : untyped
statTemp$13 = /dev/null : String(\"/dev/null\")
blockReturnTemp$9 = statTemp$10.==(statTemp$13) : untyped
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files_4" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files_2" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files_5" [label = "block[id=5](statTemp$6)
outerLoops: 1
<block-call>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files_5" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files_7" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files_5" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files_6" [style="tapered"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files_6" [label = "block[id=6](statTemp$6)
returnMethodTemp$4 = statTemp$6.map() : untyped
finalReturn = return returnMethodTemp$4 : <bottom>
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files_6" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files_1" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files_7" [label = "block[id=7](statTemp$6)
outerLoops: 1
<block-nested: part> = load_arg(statTemp$6#map, 0) : untyped
statTemp$16 = <symbol:b_name> : Symbol(:\"b_name\")
blockReturnTemp$14 = <block-nested: part>.[](statTemp$16) : untyped
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files_7" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files_5" [style="bold"];
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files";
    color = blue;
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files_0" [shape = invhouse];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files_1" [shape = parallelogram];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files_0" [label = "block[id=0]()
@parsed$8 = alias @parsed : untyped
statTemp$7 = @parsed$8 : untyped
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files_0" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files_2" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files_1" [label = "block[id=1]()
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files_1" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files_1" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files_2" [label = "block[id=2](statTemp$7)
outerLoops: 1
<block-call>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files_2" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files_4" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files_2" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files_3" [style="tapered"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files_3" [label = "block[id=3](statTemp$7)
statTemp$6 = statTemp$7.select() : untyped
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files_3" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files_5" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files_4" [label = "block[id=4](statTemp$7)
outerLoops: 1
<block-nested: part> = load_arg(statTemp$7#select, 0) : untyped
statTemp$12 = <symbol:b_name> : Symbol(:\"b_name\")
statTemp$10 = <block-nested: part>.[](statTemp$12) : untyped
statTemp$13 = /dev/null : String(\"/dev/null\")
blockReturnTemp$9 = statTemp$10.==(statTemp$13) : untyped
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files_4" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files_2" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files_5" [label = "block[id=5](statTemp$6)
outerLoops: 1
<block-call>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files_5" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files_7" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files_5" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files_6" [style="tapered"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files_6" [label = "block[id=6](statTemp$6)
returnMethodTemp$4 = statTemp$6.map() : untyped
finalReturn = return returnMethodTemp$4 : <bottom>
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files_6" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files_1" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files_7" [label = "block[id=7](statTemp$6)
outerLoops: 1
<block-nested: part> = load_arg(statTemp$6#map, 0) : untyped
statTemp$16 = <symbol:a_name> : Symbol(:\"a_name\")
blockReturnTemp$14 = <block-nested: part>.[](statTemp$16) : untyped
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files_7" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files_5" [style="bold"];
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files";
    color = blue;
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files_0" [shape = invhouse];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files_1" [shape = parallelogram];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files_0" [label = "block[id=0]()
@parsed$8 = alias @parsed : untyped
statTemp$7 = @parsed$8 : untyped
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files_0" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files_2" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files_1" [label = "block[id=1]()
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files_1" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files_1" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files_2" [label = "block[id=2](statTemp$7)
outerLoops: 1
<block-call>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files_2" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files_4" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files_2" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files_3" [style="tapered"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files_3" [label = "block[id=3](statTemp$7)
statTemp$6 = statTemp$7.select() : untyped
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files_3" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files_5" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files_4" [label = "block[id=4](statTemp$7)
outerLoops: 1
<block-nested: part> = load_arg(statTemp$7#select, 0) : untyped
statTemp$12 = <symbol:a_name> : Symbol(:\"a_name\")
statTemp$10 = <block-nested: part>.[](statTemp$12) : untyped
statTemp$15 = <symbol:b_name> : Symbol(:\"b_name\")
statTemp$13 = <block-nested: part>.[](statTemp$15) : untyped
blockReturnTemp$9 = statTemp$10.==(statTemp$13) : untyped
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files_4" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files_2" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files_5" [label = "block[id=5](statTemp$6)
outerLoops: 1
<block-call>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files_5" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files_7" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files_5" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files_6" [style="tapered"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files_6" [label = "block[id=6](statTemp$6)
returnMethodTemp$4 = statTemp$6.map() : untyped
finalReturn = return returnMethodTemp$4 : <bottom>
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files_6" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files_1" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files_7" [label = "block[id=7](statTemp$6)
outerLoops: 1
<block-nested: part> = load_arg(statTemp$6#map, 0) : untyped
statTemp$18 = <symbol:b_name> : Symbol(:\"b_name\")
blockReturnTemp$16 = <block-nested: part>.[](statTemp$18) : untyped
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files_7" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files_5" [style="bold"];
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_lines" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_lines";
    color = blue;
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_lines_0" [shape = invhouse];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_lines_1" [shape = parallelogram];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_lines_0" [label = "block[id=0]()
@parsed$7 = alias @parsed : untyped
statTemp$6 = @parsed$7 : untyped
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_lines_0" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_lines_2" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_lines_1" [label = "block[id=1]()
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_lines_1" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_lines_1" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_lines_2" [label = "block[id=2](statTemp$6)
outerLoops: 1
<block-call>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_lines_2" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_lines_4" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_lines_2" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_lines_3" [style="tapered"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_lines_3" [label = "block[id=3](statTemp$6)
statTemp$5 = statTemp$6.map() : untyped
returnMethodTemp$3 = statTemp$5.flatten() : untyped
finalReturn = return returnMethodTemp$3 : <bottom>
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_lines_3" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_lines_1" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_lines_4" [label = "block[id=4](statTemp$6)
outerLoops: 1
<block-nested: part> = load_arg(statTemp$6#map, 0) : untyped
statTemp$10 = <symbol:added_lines> : Symbol(:\"added_lines\")
blockReturnTemp$8 = <block-nested: part>.[](statTemp$10) : untyped
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_lines_4" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_lines_2" [style="bold"];
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#removed_lines" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#removed_lines";
    color = blue;
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#removed_lines_0" [shape = invhouse];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#removed_lines_1" [shape = parallelogram];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#removed_lines_0" [label = "block[id=0]()
@parsed$7 = alias @parsed : untyped
statTemp$6 = @parsed$7 : untyped
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#removed_lines_0" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#removed_lines_2" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#removed_lines_1" [label = "block[id=1]()
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#removed_lines_1" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#removed_lines_1" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#removed_lines_2" [label = "block[id=2](statTemp$6)
outerLoops: 1
<block-call>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#removed_lines_2" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#removed_lines_4" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#removed_lines_2" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#removed_lines_3" [style="tapered"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#removed_lines_3" [label = "block[id=3](statTemp$6)
statTemp$5 = statTemp$6.map() : untyped
returnMethodTemp$3 = statTemp$5.flatten() : untyped
finalReturn = return returnMethodTemp$3 : <bottom>
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#removed_lines_3" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#removed_lines_1" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#removed_lines_4" [label = "block[id=4](statTemp$6)
outerLoops: 1
<block-nested: part> = load_arg(statTemp$6#map, 0) : untyped
statTemp$10 = <symbol:removed_lines> : Symbol(:\"removed_lines\")
blockReturnTemp$8 = <block-nested: part>.[](statTemp$10) : untyped
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#removed_lines_4" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#removed_lines_2" [style="bold"];
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_lines" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_lines";
    color = blue;
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_lines_0" [shape = invhouse];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_lines_1" [shape = parallelogram];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_lines_0" [label = "block[id=0]()
statTemp$5 = self : Diff
statTemp$4 = statTemp$5.added_lines() : untyped
statTemp$7 = self : Diff
statTemp$6 = statTemp$7.removed_lines() : untyped
returnMethodTemp$2 = statTemp$4.+(statTemp$6) : untyped
finalReturn = return returnMethodTemp$2 : <bottom>
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_lines_0" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_lines_1" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_lines_1" [label = "block[id=1]()
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_lines_1" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_lines_1" [style="bold"];
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_openapi?" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_openapi?";
    color = blue;
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_openapi?_0" [shape = invhouse];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_openapi?_1" [shape = parallelogram];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_openapi?_0" [label = "block[id=0]()
<constant:SPEC_PATH>$7 = alias <constant:SPEC_PATH> : untyped
statTemp$5 = self : Diff
statTemp$4 = statTemp$5.changed_files() : untyped
returnMethodTemp$2 = statTemp$4.include?(<constant:SPEC_PATH>$7) : untyped
finalReturn = return returnMethodTemp$2 : <bottom>
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_openapi?_0" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_openapi?_1" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_openapi?_1" [label = "block[id=1]()
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_openapi?_1" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_openapi?_1" [style="bold"];
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse";
    color = blue;
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_0" [shape = invhouse];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_1" [shape = parallelogram];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_0" [label = "block[id=0](<constant:Range>$17, <constant:<Magic>>$22, <constant:nil>$30)
<constant:Regexp>$10 = alias <constant:Regexp> : <class:Regexp>
<constant:Range>$17 = alias <constant:Range> : <class:Range>
<constant:<Magic>>$22 = alias <constant:<Magic>> : <Magic>
<constant:nil>$30 = alias <constant:nil> : NilClass
selfMethodTemp$4 = self : Diff
diff = load_arg(selfMethodTemp$4#parse, 0) : untyped
statTemp$11 = ^diff [^\\n]*\\n : String(\"^diff [^\\n]*\\n\")
statTemp$13 = 0 : Integer(0)
statTemp$14 = 4 : Integer(4)
statTemp$12 = statTemp$13.|(statTemp$14) : Integer
statTemp$8 = <constant:Regexp>$10.new(statTemp$11, statTemp$12) : Regexp
statTemp$6 = diff.split(statTemp$8) : untyped
statTemp$18 = 1 : Integer(1)
statTemp$19 = -1 : Integer(-1)
statTemp$15 = <constant:Range>$17.new(statTemp$18, statTemp$19) : Range
parts = statTemp$6.[](statTemp$15) : untyped
parts"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_0" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_4" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_0" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_3" [style="tapered"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_1" [label = "block[id=1]()
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_1" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_1" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_3" [label = "block[id=3](<constant:Range>$17, <constant:<Magic>>$22, <constant:nil>$30)
parts = <constant:<Magic>>$22.<build-array>() : TupleType {
}
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_3" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_4" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_4" [label = "block[id=4](parts, <constant:Range>$17, <constant:<Magic>>$22, <constant:nil>$30)
statTemp$24 = parts : untyped
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_4" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_5" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_5" [label = "block[id=5](<block-nested: line>, statTemp$24, <constant:Range>$17, <constant:<Magic>>$22, <constant:nil>$30)
outerLoops: 1
<block-call>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_5" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_7" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_5" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_6" [style="tapered"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_6" [label = "block[id=6](statTemp$24)
statTemp$23 = statTemp$24.map() : untyped
returnMethodTemp$3 = statTemp$23.compact() : untyped
finalReturn = return returnMethodTemp$3 : <bottom>
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_6" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_1" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_7" [label = "block[id=7](<block-nested: line>, statTemp$24, <constant:Range>$17, <constant:<Magic>>$22, <constant:nil>$30)
outerLoops: 1
<block-nested: part> = load_arg(statTemp$24#map, 0) : untyped
statTemp$28 = 
 : String(\"
\")
<block-nested: lines> = <block-nested: part>.split(statTemp$28) : untyped
<block-nested: b_name> = <constant:nil>$30 : NilClass
<block-nested: a_name> = <constant:nil>$30 : NilClass
<block-nested: added_lines> = <constant:<Magic>>$22.<build-array>() : TupleType {
}
<block-nested: removed_lines> = <constant:<Magic>>$22.<build-array>() : TupleType {
}
statTemp$34 = <block-nested: lines> : untyped
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_7" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_8" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_8" [label = "block[id=8](<block-nested: a_name>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$34, statTemp$24, <constant:Range>$17, <constant:<Magic>>$22, <constant:nil>$30)
outerLoops: 2
<block-call>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_8" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_10" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_8" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_9" [style="tapered"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_9" [label = "block[id=9](<block-nested: a_name>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$34, statTemp$24, <constant:Range>$17, <constant:<Magic>>$22, <constant:nil>$30)
outerLoops: 1
statTemp$33 = statTemp$34.each() : untyped
ifTemp$99 = <block-nested: a_name>.nil?() : TrueClass | FalseClass
ifTemp$99"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_9" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_5" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_9" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_38" [style="tapered"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_10" [label = "block[id=10](<block-nested: a_name>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$34, statTemp$24, <constant:Range>$17, <constant:<Magic>>$22, <constant:nil>$30)
outerLoops: 2
<block-nested: line> = load_arg(statTemp$34#each, 0) : untyped
statTemp$38 = index  : String(\"index \")
statTemp$39 = @@ : String(\"@@\")
statTemp$40 = new file mode : String(\"new file mode\")
ifTemp$36 = <block-nested: line>.start_with?(statTemp$38, statTemp$39, statTemp$40) : untyped
ifTemp$36"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_10" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_8" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_10" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_12" [style="tapered"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_12" [label = "block[id=12](<block-nested: a_name>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$34, statTemp$24, <constant:Range>$17, <constant:<Magic>>$22, <constant:nil>$30)
outerLoops: 2
statTemp$44 = --- : String(\"---\")
ifTemp$42 = <block-nested: line>.start_with?(statTemp$44) : untyped
ifTemp$42"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_12" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_13" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_12" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_14" [style="tapered"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_13" [label = "block[id=13](<block-nested: a_name>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$34, statTemp$24, <constant:Range>$17, <constant:<Magic>>$22, <constant:nil>$30)
outerLoops: 2
statTemp$49 = 4 : Integer(4)
statTemp$50 = -1 : Integer(-1)
statTemp$47 = <constant:Range>$17.new(statTemp$49, statTemp$50) : Range
<block-nested: a_name> = <block-nested: line>.[](statTemp$47) : untyped
<block-nested: a_name>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_13" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_15" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_13" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_16" [style="tapered"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_14" [label = "block[id=14](<block-nested: a_name>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$34, statTemp$24, <constant:Range>$17, <constant:<Magic>>$22, <constant:nil>$30)
outerLoops: 2
statTemp$62 = +++ : String(\"+++\")
ifTemp$60 = <block-nested: line>.start_with?(statTemp$62) : untyped
ifTemp$60"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_14" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_21" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_14" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_22" [style="tapered"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_15" [label = "block[id=15](<block-nested: a_name>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$34, statTemp$24, <constant:Range>$17, <constant:<Magic>>$22, <constant:nil>$30)
outerLoops: 2
statTemp$54 = a/ : String(\"a/\")
ifTemp$51 = <block-nested: a_name>.start_with?(statTemp$54) : untyped
ifTemp$51"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_15" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_18" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_15" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_8" [style="tapered"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_16" [label = "block[id=16](<block-nested: a_name>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$34, statTemp$24, <constant:Range>$17, <constant:<Magic>>$22, <constant:nil>$30)
outerLoops: 2
ifTemp$51 = <block-nested: a_name> : NilClass | FalseClass
ifTemp$51"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_16" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_18" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_16" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_8" [style="tapered"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_18" [label = "block[id=18](<block-nested: a_name>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$34, statTemp$24, <constant:Range>$17, <constant:<Magic>>$22, <constant:nil>$30)
outerLoops: 2
statTemp$55 = <block-nested: a_name> : untyped
statTemp$58 = 2 : Integer(2)
statTemp$59 = -1 : Integer(-1)
statTemp$56 = <constant:Range>$17.new(statTemp$58, statTemp$59) : Range
<block-nested: a_name> = statTemp$55.[](statTemp$56) : untyped
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_18" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_8" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_21" [label = "block[id=21](<block-nested: a_name>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$34, statTemp$24, <constant:Range>$17, <constant:<Magic>>$22, <constant:nil>$30)
outerLoops: 2
statTemp$67 = 4 : Integer(4)
statTemp$68 = -1 : Integer(-1)
statTemp$65 = <constant:Range>$17.new(statTemp$67, statTemp$68) : Range
<block-nested: b_name> = <block-nested: line>.[](statTemp$65) : untyped
<block-nested: b_name>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_21" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_23" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_21" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_24" [style="tapered"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_22" [label = "block[id=22](<block-nested: a_name>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$34, statTemp$24, <constant:Range>$17, <constant:<Magic>>$22, <constant:nil>$30)
outerLoops: 2
statTemp$80 = + : String(\"+\")
ifTemp$78 = <block-nested: line>.start_with?(statTemp$80) : untyped
ifTemp$78"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_22" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_29" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_22" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_30" [style="tapered"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_23" [label = "block[id=23](<block-nested: a_name>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$34, statTemp$24, <constant:Range>$17, <constant:<Magic>>$22, <constant:nil>$30)
outerLoops: 2
statTemp$72 = b/ : String(\"b/\")
ifTemp$69 = <block-nested: b_name>.start_with?(statTemp$72) : untyped
ifTemp$69"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_23" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_26" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_23" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_8" [style="tapered"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_24" [label = "block[id=24](<block-nested: a_name>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$34, statTemp$24, <constant:Range>$17, <constant:<Magic>>$22, <constant:nil>$30)
outerLoops: 2
ifTemp$69 = <block-nested: b_name> : NilClass | FalseClass
ifTemp$69"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_24" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_26" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_24" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_8" [style="tapered"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_26" [label = "block[id=26](<block-nested: a_name>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$34, statTemp$24, <constant:Range>$17, <constant:<Magic>>$22, <constant:nil>$30)
outerLoops: 2
statTemp$73 = <block-nested: b_name> : untyped
statTemp$76 = 2 : Integer(2)
statTemp$77 = -1 : Integer(-1)
statTemp$74 = <constant:Range>$17.new(statTemp$76, statTemp$77) : Range
<block-nested: b_name> = statTemp$73.[](statTemp$74) : untyped
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_26" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_8" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_29" [label = "block[id=29](<block-nested: a_name>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$34, statTemp$24, <constant:Range>$17, <constant:<Magic>>$22, <constant:nil>$30)
outerLoops: 2
statTemp$86 = 1 : Integer(1)
statTemp$87 = -1 : Integer(-1)
statTemp$84 = <constant:Range>$17.new(statTemp$86, statTemp$87) : Range
statTemp$82 = <block-nested: line>.[](statTemp$84) : untyped
blockReturnTemp$35 = <block-nested: added_lines>.<<(statTemp$82) : AppliedType {
  klass = ::<constant:Array>
  targs = [
    <constant:Elem> = untyped
  ]
}
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_29" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_8" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_30" [label = "block[id=30](<block-nested: a_name>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$34, statTemp$24, <constant:Range>$17, <constant:<Magic>>$22, <constant:nil>$30)
outerLoops: 2
statTemp$90 = - : String(\"-\")
ifTemp$88 = <block-nested: line>.start_with?(statTemp$90) : untyped
ifTemp$88"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_30" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_31" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_30" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_8" [style="tapered"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_31" [label = "block[id=31](<block-nested: a_name>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$34, statTemp$24, <constant:Range>$17, <constant:<Magic>>$22, <constant:nil>$30)
outerLoops: 2
statTemp$96 = 1 : Integer(1)
statTemp$97 = -1 : Integer(-1)
statTemp$94 = <constant:Range>$17.new(statTemp$96, statTemp$97) : Range
statTemp$92 = <block-nested: line>.[](statTemp$94) : untyped
blockReturnTemp$35 = <block-nested: removed_lines>.<<(statTemp$92) : AppliedType {
  klass = ::<constant:Array>
  targs = [
    <constant:Elem> = untyped
  ]
}
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_31" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_8" [style="bold"];
    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_38" [label = "block[id=38](<block-nested: a_name>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTemp$24, <constant:Range>$17, <constant:<Magic>>$22, <constant:nil>$30)
outerLoops: 1
hashTemp$102 = <symbol:a_name>
hashTemp$104 = <symbol:b_name>
hashTemp$106 = <symbol:added_lines>
hashTemp$108 = <symbol:removed_lines>
blockReturnTemp$25 = <constant:<Magic>>$22.<build-hash>(hashTemp$102, <block-nested: a_name>, hashTemp$104, <block-nested: b_name>, hashTemp$106, <block-nested: added_lines>, hashTemp$108, <block-nested: removed_lines>)
<unconditional>"];

    "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_38" -> "bb::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse_5" [style="bold"];
}

}

