digraph "gerald.rb"{
subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeout>#initialize" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeout>#initialize";
    color = blue;
    bb105_0 [shape = invhouse];
    bb105_1 [shape = parallelogram];

    bb105_0 [label = "()\n@rule_token$5 = alias @rule_token : untyped\n<self>$1 = self : MatchTimeout\nmessage = load_arg(<self>$1#initialize, 0) : untyped\nrule_token = load_arg(<self>$1#initialize, 1) : untyped\nstatTmp$3 = self : MatchTimeout\nstatTmp$2 = statTmp$3.super(message) : untyped\n<ret>$6 = return rule_token : <bottom>\n<unconditional>"];
    bb105_0 -> bb105_1;
    bb105_1 [label = "()\n<unconditional>"];
    bb105_1 -> bb105_1;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#initialize";
    color = blue;
    bb111_0 [shape = invhouse];
    bb111_1 [shape = parallelogram];

    bb111_0 [label = "(invalid_rules)\n<constant:untyped>$7 = alias <constant:untyped> : untyped\n@rules$12 = alias @rules : untyped\nstatTmp$8 = NotSupported() : untyped\nstatTmp$5 = <constant:untyped>$7.query_by(statTmp$8) : untyped\nstatTmp$9 = NotSupported() : untyped\nstatTmp$4 = statTmp$5.load_all(statTmp$9) : untyped\nstatTmp$10 = NotSupported() : untyped\nassignTmp$0 = statTmp$4.partition(statTmp$10) : untyped\nstatTmp$14 = 0 : Integer(0)\n@rules$12 = assignTmp$0.[](statTmp$14) : untyped\nstatTmp$17 = 1 : Integer(1)\ninvalid_rules = assignTmp$0.[](statTmp$17) : untyped\nstatTmp$19 = invalid_rules.empty?() : untyped\nifTmp$18 = statTmp$19.!() : untyped\nifTmp$18"];
    bb111_0 -> bb111_2;
    bb111_0 -> bb111_3;

    bb111_1 [label = "()\n<unconditional>"];
    bb111_1 -> bb111_1;
    bb111_2 [label = "(invalid_rules, <ret>$19)\nstatTmp$24 = NotSupported() : untyped\nstatTmp$22 = invalid_rules.map(statTmp$24) : untyped\nstatTmp$25 = , : String(\",\")\ninvalid_rule_ids = statTmp$22.join(statTmp$25) : untyped\nstatTmp$27 = self : Matcher\nstatTmp$26 = statTmp$27.log() : untyped\nstatTmp$29 = Gerald skipping invalid rules:  : String(\"Gerald skipping invalid rules: \")\nstatTmp$28 = statTmp$29.+(invalid_rule_ids) : untyped\n<ret>$19 = statTmp$26.warn(statTmp$28) : untyped\n<unconditional>"];
    bb111_2 -> bb111_4;
    bb111_3 [label = "(<ret>$19)\n<ret>$19 = NotSupported() : untyped\n<unconditional>"];
    bb111_3 -> bb111_4;
    bb111_4 [label = "(<ret>$19)\n<ret>$31 = return <ret>$19 : <bottom>\n<unconditional>"];
    bb111_4 -> bb111_1;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Matcher>#match";
    color = blue;
    bb112_0 [shape = invhouse];
    bb112_1 [shape = parallelogram];

    bb112_0 [label = "(match_context, <constant:MatchTimeBudget>$26, @rules$28)\n<constant:MAX_AFFECTED_FILES>$9 = alias <constant:MAX_AFFECTED_FILES> : untyped\n<constant:MatchTimeBudget>$26 = alias <constant:MatchTimeBudget> : <class:MatchTimeBudget>\n@rules$28 = alias @rules : untyped\n<self>$1 = self : Matcher\nmatch_context = load_arg(<self>$1#match, 0) : untyped\nstatTmp$6 = match_context.diff() : untyped\nstatTmp$5 = statTmp$6.affected_files() : untyped\nstatTmp$4 = statTmp$5.count() : untyped\nifTmp$3 = statTmp$4.>(<constant:MAX_AFFECTED_FILES>$9) : untyped\nifTmp$3"];
    bb112_0 -> bb112_2;
    bb112_0 -> bb112_3;

    bb112_1 [label = "()\n<unconditional>"];
    bb112_1 -> bb112_1;
    bb112_2 [label = "(match_context)\nstatTmp$12 = self : Matcher\nstatTmp$11 = statTmp$12.log() : untyped\nstatTmp$16 = Gerald skipping large PR with  : String(\"Gerald skipping large PR with \")\nstatTmp$20 = match_context.diff() : untyped\nstatTmp$19 = statTmp$20.affected_files() : untyped\nstatTmp$18 = statTmp$19.count() : untyped\nstatTmp$17 = statTmp$18.to_s() : untyped\nstatTmp$15 = statTmp$16.concat(statTmp$17) : untyped\nstatTmp$22 =  affected files : String(\" affected files\")\nstatTmp$14 = statTmp$15.concat(statTmp$22) : untyped\nstatTmp$13 = statTmp$14.to_s() : untyped\nstatTmp$10 = statTmp$11.warn(statTmp$13) : untyped\nreturnTmp$23 = NotSupported() : untyped\nstatTmp$2 = return returnTmp$23 : <bottom>\n<unconditional>"];
    bb112_2 -> bb112_1;
    bb112_3 [label = "(match_context, budget, statTmp$27, <constant:MatchTimeBudget>$26, @rules$28)\nstatTmp$2 = NotSupported() : untyped\nbudget = <constant:MatchTimeBudget>$26.new() : MatchTimeBudget\nstatTmp$27 = @rules$28 : untyped\n<unconditional>"];
    bb112_3 -> bb112_4;
    bb112_4 [label = "(match_context, budget, <block-nested: r>, statTmp$27, @rules$28)\nouterLoops: 1\n<block-call>"];
    bb112_4 -> bb112_6;
    bb112_4 -> bb112_5;

    bb112_5 [label = "(@rules$28)\n<ret>$20 = @rules$28.select() : untyped\n<ret>$35 = return <ret>$20 : <bottom>\n<unconditional>"];
    bb112_5 -> bb112_1;
    bb112_6 [label = "(match_context, budget, <block-nested: r>, statTmp$27, @rules$28)\nouterLoops: 1\n<block-nested: r> = load_arg(statTmp$27#select, 0) : untyped\n<unconditional>"];
    bb112_6 -> bb112_7;
    bb112_7 [label = "(match_context, budget, <block-nested: r>, statTmp$27, @rules$28)\nouterLoops: 2\n<block-call>"];
    bb112_7 -> bb112_9;
    bb112_7 -> bb112_8;

    bb112_8 [label = "(match_context, budget, <block-nested: r>, statTmp$27, @rules$28)\nouterLoops: 1\n<blockret>$29 = budget.time_rule(<block-nested: r>) : untyped\n<unconditional>"];
    bb112_8 -> bb112_4;
    bb112_9 [label = "(match_context, budget, <block-nested: r>, statTmp$27, @rules$28)\nouterLoops: 2\n<blockret>$32 = <block-nested: r>.matches?(match_context) : untyped\n<unconditional>"];
    bb112_9 -> bb112_7;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchContext>#initialize" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchContext>#initialize";
    color = blue;
    bb119_0 [shape = invhouse];
    bb119_1 [shape = parallelogram];

    bb119_0 [label = "()\n@repo$3 = alias @repo : untyped\n@assignee$5 = alias @assignee : untyped\n@gh_user$7 = alias @gh_user : untyped\n@merge_branch$9 = alias @merge_branch : untyped\n@body$11 = alias @body : untyped\n@title$13 = alias @title : untyped\n@diff$15 = alias @diff : untyped\n@openapi_diff$16 = alias @openapi_diff : untyped\n<self>$1 = self : MatchContext\nrepo = load_arg(<self>$1#initialize, 0) : untyped\nassignee = load_arg(<self>$1#initialize, 1) : untyped\ngh_user = load_arg(<self>$1#initialize, 2) : untyped\nmerge_branch = load_arg(<self>$1#initialize, 3) : untyped\nbody = load_arg(<self>$1#initialize, 4) : untyped\ntitle = load_arg(<self>$1#initialize, 5) : untyped\ndiff = load_arg(<self>$1#initialize, 6) : untyped\nopenapi_diff = load_arg(<self>$1#initialize, 7) : untyped\n<ret>$17 = return openapi_diff : <bottom>\n<unconditional>"];
    bb119_0 -> bb119_1;
    bb119_1 [label = "()\n<unconditional>"];
    bb119_1 -> bb119_1;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchContext>#user_stripe_suffix?" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchContext>#user_stripe_suffix?";
    color = blue;
    bb128_0 [shape = invhouse];
    bb128_1 [shape = parallelogram];

    bb128_0 [label = "()\n@repo$4 = alias @repo : untyped\nstatTmp$5 = stripe-internal/ : String(\"stripe-internal/\")\nstatTmp$2 = @repo$4.start_with?(statTmp$5) : untyped\n<ret>$23 = statTmp$2.!() : untyped\n<ret>$6 = return <ret>$23 : <bottom>\n<unconditional>"];
    bb128_0 -> bb128_1;
    bb128_1 [label = "()\n<unconditional>"];
    bb128_1 -> bb128_1;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#initialize" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#initialize";
    color = blue;
    bb132_0 [shape = invhouse];
    bb132_1 [shape = parallelogram];

    bb132_0 [label = "()\n@start$2 = alias @start : untyped\n<constant:untyped>$4 = alias <constant:untyped> : untyped\n@start$2 = <constant:untyped>$4.now() : untyped\n<ret>$5 = return @start$2 : <bottom>\n<unconditional>"];
    bb132_0 -> bb132_1;
    bb132_1 [label = "()\n<unconditional>"];
    bb132_1 -> bb132_1;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#check!" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#check!";
    color = blue;
    bb133_0 [shape = invhouse];
    bb133_1 [shape = parallelogram];

    bb133_0 [label = "(<constant:TOTAL_TIME_MS>$13, <constant:MatchTimeout>$17)\n<constant:untyped>$6 = alias <constant:untyped> : untyped\n@start$8 = alias @start : untyped\n<constant:TOTAL_TIME_MS>$13 = alias <constant:TOTAL_TIME_MS> : untyped\n<constant:MatchTimeout>$17 = alias <constant:MatchTimeout> : <class:MatchTimeout>\nstatTmp$4 = <constant:untyped>$6.now() : untyped\nstatTmp$3 = statTmp$4.-(@start$8) : untyped\nstatTmp$9 = 1000 : Integer(1000)\ndur_ms = statTmp$3.*(statTmp$9) : untyped\nifTmp$10 = dur_ms.>(<constant:TOTAL_TIME_MS>$13) : untyped\nifTmp$10"];
    bb133_0 -> bb133_2;
    bb133_0 -> bb133_3;

    bb133_1 [label = "()\n<unconditional>"];
    bb133_1 -> bb133_1;
    bb133_2 [label = "(<ret>$25, <constant:TOTAL_TIME_MS>$13, <constant:MatchTimeout>$17)\nstatTmp$14 = self : MatchTimeBudget\nstatTmp$21 = Gerald match time budged exceeded  : String(\"Gerald match time budged exceeded \")\nstatTmp$22 = <constant:TOTAL_TIME_MS>$13.to_s() : untyped\nstatTmp$20 = statTmp$21.concat(statTmp$22) : untyped\nstatTmp$24 = ms : String(\"ms\")\nstatTmp$19 = statTmp$20.concat(statTmp$24) : untyped\nstatTmp$18 = statTmp$19.to_s() : untyped\nstatTmp$15 = <constant:MatchTimeout>$17.new(statTmp$18) : MatchTimeout\n<ret>$25 = statTmp$14.raise(statTmp$15) : untyped\n<unconditional>"];
    bb133_2 -> bb133_4;
    bb133_3 [label = "(<ret>$25)\n<ret>$25 = NotSupported() : untyped\n<unconditional>"];
    bb133_3 -> bb133_4;
    bb133_4 [label = "(<ret>$25)\n<ret>$25 = return <ret>$25 : <bottom>\n<unconditional>"];
    bb133_4 -> bb133_1;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#time_rule" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:MatchTimeBudget>#time_rule";
    color = blue;
    bb134_0 [shape = invhouse];
    bb134_1 [shape = parallelogram];

    bb134_0 [label = "(dur_ms, rule, res, <constant:PER_RULE_MS>$16, <constant:MatchTimeout>$20)\n<constant:untyped>$4 = alias <constant:untyped> : untyped\n<constant:PER_RULE_MS>$16 = alias <constant:PER_RULE_MS> : untyped\n<constant:MatchTimeout>$20 = alias <constant:MatchTimeout> : <class:MatchTimeout>\n<self>$1 = self : MatchTimeBudget\nrule = load_arg(<self>$1#time_rule, 0) : untyped\nrule_start = <constant:untyped>$4.now() : untyped\nres = NotSupported() : untyped\nstatTmp$8 = <constant:untyped>$4.now() : untyped\nstatTmp$7 = statTmp$8.-(rule_start) : untyped\nstatTmp$11 = 1000 : Integer(1000)\ndur_ms = statTmp$7.*(statTmp$11) : untyped\nifTmp$13 = dur_ms.>(<constant:PER_RULE_MS>$16) : untyped\nifTmp$13"];
    bb134_0 -> bb134_2;
    bb134_0 -> bb134_3;

    bb134_1 [label = "()\n<unconditional>"];
    bb134_1 -> bb134_1;
    bb134_2 [label = "(dur_ms, rule, res, <constant:PER_RULE_MS>$16, <constant:MatchTimeout>$20)\nstatTmp$17 = self : MatchTimeBudget\nstatTmp$28 = Gerald rule ' : String(\"Gerald rule '\")\nstatTmp$30 = rule.token() : untyped\nstatTmp$29 = statTmp$30.to_s() : untyped\nstatTmp$27 = statTmp$28.concat(statTmp$29) : untyped\nstatTmp$32 = ' exceeded per-rule time budget actual= : String(\"' exceeded per-rule time budget actual=\")\nstatTmp$26 = statTmp$27.concat(statTmp$32) : untyped\nstatTmp$34 = dur_ms.to_i() : untyped\nstatTmp$33 = statTmp$34.to_s() : untyped\nstatTmp$25 = statTmp$26.concat(statTmp$33) : untyped\nstatTmp$36 = ms budget= : String(\"ms budget=\")\nstatTmp$24 = statTmp$25.concat(statTmp$36) : untyped\nstatTmp$37 = <constant:PER_RULE_MS>$16.to_s() : untyped\nstatTmp$23 = statTmp$24.concat(statTmp$37) : untyped\nstatTmp$39 = ms : String(\"ms\")\nstatTmp$22 = statTmp$23.concat(statTmp$39) : untyped\nstatTmp$21 = statTmp$22.to_s() : untyped\nstatTmp$40 = NotSupported() : untyped\nstatTmp$18 = <constant:MatchTimeout>$20.new(statTmp$21, statTmp$40) : MatchTimeout\nstatTmp$12 = statTmp$17.raise(statTmp$18) : untyped\n<unconditional>"];
    bb134_2 -> bb134_4;
    bb134_3 [label = "(res)\nstatTmp$12 = NotSupported() : untyped\n<unconditional>"];
    bb134_3 -> bb134_4;
    bb134_4 [label = "(res)\nstatTmp$42 = self : MatchTimeBudget\nstatTmp$41 = statTmp$42.check!() : untyped\n<ret>$43 = return res : <bottom>\n<unconditional>"];
    bb134_4 -> bb134_1;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#initialize" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#initialize";
    color = blue;
    bb137_0 [shape = invhouse];
    bb137_1 [shape = parallelogram];

    bb137_0 [label = "()\n@raw$3 = alias @raw : untyped\n@parsed$4 = alias @parsed : untyped\n<self>$1 = self : Diff\nraw_diff = load_arg(<self>$1#initialize, 0) : untyped\nstatTmp$5 = self : Diff\n@parsed$4 = statTmp$5.parse(raw_diff) : untyped\n<ret>$7 = return @parsed$4 : <bottom>\n<unconditional>"];
    bb137_0 -> bb137_1;
    bb137_1 [label = "()\n<unconditional>"];
    bb137_1 -> bb137_1;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#affected_files" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#affected_files";
    color = blue;
    bb139_0 [shape = invhouse];
    bb139_1 [shape = parallelogram];

    bb139_0 [label = "()\nstatTmp$4 = self : Diff\nstatTmp$3 = statTmp$4.added_files() : untyped\nstatTmp$6 = self : Diff\nstatTmp$5 = statTmp$6.deleted_files() : untyped\nstatTmp$2 = statTmp$3.+(statTmp$5) : untyped\nstatTmp$8 = self : Diff\nstatTmp$7 = statTmp$8.changed_files() : untyped\n<ret>$28 = statTmp$2.+(statTmp$7) : untyped\n<ret>$9 = return <ret>$28 : <bottom>\n<unconditional>"];
    bb139_0 -> bb139_1;
    bb139_1 [label = "()\n<unconditional>"];
    bb139_1 -> bb139_1;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_files";
    color = blue;
    bb140_0 [shape = invhouse];
    bb140_1 [shape = parallelogram];

    bb140_0 [label = "(statTmp$3, @parsed$4)\n@parsed$4 = alias @parsed : untyped\nstatTmp$3 = @parsed$4 : untyped\n<unconditional>"];
    bb140_0 -> bb140_2;
    bb140_1 [label = "()\n<unconditional>"];
    bb140_1 -> bb140_1;
    bb140_2 [label = "(statTmp$3, @parsed$4)\nouterLoops: 1\n<block-call>"];
    bb140_2 -> bb140_4;
    bb140_2 -> bb140_3;

    bb140_3 [label = "(statTmp$2, @parsed$4)\nstatTmp$2 = @parsed$4.select() : untyped\n<unconditional>"];
    bb140_3 -> bb140_5;
    bb140_4 [label = "(statTmp$3, @parsed$4)\nouterLoops: 1\n<block-nested: part> = load_arg(statTmp$3#select, 0) : untyped\nstatTmp$8 = NotSupported() : untyped\nstatTmp$6 = <block-nested: part>.[](statTmp$8) : untyped\nstatTmp$9 = /dev/null : String(\"/dev/null\")\n<blockret>$5 = statTmp$6.==(statTmp$9) : untyped\n<unconditional>"];
    bb140_4 -> bb140_2;
    bb140_5 [label = "(statTmp$2)\nouterLoops: 1\n<block-call>"];
    bb140_5 -> bb140_7;
    bb140_5 -> bb140_6;

    bb140_6 [label = "(statTmp$2)\n<ret>$29 = statTmp$2.map() : untyped\n<ret>$13 = return <ret>$29 : <bottom>\n<unconditional>"];
    bb140_6 -> bb140_1;
    bb140_7 [label = "(statTmp$2)\nouterLoops: 1\n<block-nested: part> = load_arg(statTmp$2#map, 0) : untyped\nstatTmp$12 = NotSupported() : untyped\n<blockret>$10 = <block-nested: part>.[](statTmp$12) : untyped\n<unconditional>"];
    bb140_7 -> bb140_5;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#deleted_files";
    color = blue;
    bb145_0 [shape = invhouse];
    bb145_1 [shape = parallelogram];

    bb145_0 [label = "(statTmp$3, @parsed$4)\n@parsed$4 = alias @parsed : untyped\nstatTmp$3 = @parsed$4 : untyped\n<unconditional>"];
    bb145_0 -> bb145_2;
    bb145_1 [label = "()\n<unconditional>"];
    bb145_1 -> bb145_1;
    bb145_2 [label = "(statTmp$3, @parsed$4)\nouterLoops: 1\n<block-call>"];
    bb145_2 -> bb145_4;
    bb145_2 -> bb145_3;

    bb145_3 [label = "(statTmp$2, @parsed$4)\nstatTmp$2 = @parsed$4.select() : untyped\n<unconditional>"];
    bb145_3 -> bb145_5;
    bb145_4 [label = "(statTmp$3, @parsed$4)\nouterLoops: 1\n<block-nested: part> = load_arg(statTmp$3#select, 0) : untyped\nstatTmp$8 = NotSupported() : untyped\nstatTmp$6 = <block-nested: part>.[](statTmp$8) : untyped\nstatTmp$9 = /dev/null : String(\"/dev/null\")\n<blockret>$5 = statTmp$6.==(statTmp$9) : untyped\n<unconditional>"];
    bb145_4 -> bb145_2;
    bb145_5 [label = "(statTmp$2)\nouterLoops: 1\n<block-call>"];
    bb145_5 -> bb145_7;
    bb145_5 -> bb145_6;

    bb145_6 [label = "(statTmp$2)\n<ret>$30 = statTmp$2.map() : untyped\n<ret>$13 = return <ret>$30 : <bottom>\n<unconditional>"];
    bb145_6 -> bb145_1;
    bb145_7 [label = "(statTmp$2)\nouterLoops: 1\n<block-nested: part> = load_arg(statTmp$2#map, 0) : untyped\nstatTmp$12 = NotSupported() : untyped\n<blockret>$10 = <block-nested: part>.[](statTmp$12) : untyped\n<unconditional>"];
    bb145_7 -> bb145_5;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_files";
    color = blue;
    bb150_0 [shape = invhouse];
    bb150_1 [shape = parallelogram];

    bb150_0 [label = "(statTmp$3, @parsed$4)\n@parsed$4 = alias @parsed : untyped\nstatTmp$3 = @parsed$4 : untyped\n<unconditional>"];
    bb150_0 -> bb150_2;
    bb150_1 [label = "()\n<unconditional>"];
    bb150_1 -> bb150_1;
    bb150_2 [label = "(statTmp$3, @parsed$4)\nouterLoops: 1\n<block-call>"];
    bb150_2 -> bb150_4;
    bb150_2 -> bb150_3;

    bb150_3 [label = "(statTmp$2, @parsed$4)\nstatTmp$2 = @parsed$4.select() : untyped\n<unconditional>"];
    bb150_3 -> bb150_5;
    bb150_4 [label = "(statTmp$3, @parsed$4)\nouterLoops: 1\n<block-nested: part> = load_arg(statTmp$3#select, 0) : untyped\nstatTmp$8 = NotSupported() : untyped\nstatTmp$6 = <block-nested: part>.[](statTmp$8) : untyped\nstatTmp$11 = NotSupported() : untyped\nstatTmp$9 = <block-nested: part>.[](statTmp$11) : untyped\n<blockret>$5 = statTmp$6.==(statTmp$9) : untyped\n<unconditional>"];
    bb150_4 -> bb150_2;
    bb150_5 [label = "(statTmp$2)\nouterLoops: 1\n<block-call>"];
    bb150_5 -> bb150_7;
    bb150_5 -> bb150_6;

    bb150_6 [label = "(statTmp$2)\n<ret>$31 = statTmp$2.map() : untyped\n<ret>$15 = return <ret>$31 : <bottom>\n<unconditional>"];
    bb150_6 -> bb150_1;
    bb150_7 [label = "(statTmp$2)\nouterLoops: 1\n<block-nested: part> = load_arg(statTmp$2#map, 0) : untyped\nstatTmp$14 = NotSupported() : untyped\n<blockret>$12 = <block-nested: part>.[](statTmp$14) : untyped\n<unconditional>"];
    bb150_7 -> bb150_5;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_lines" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#added_lines";
    color = blue;
    bb155_0 [shape = invhouse];
    bb155_1 [shape = parallelogram];

    bb155_0 [label = "(statTmp$3, @parsed$4)\n@parsed$4 = alias @parsed : untyped\nstatTmp$3 = @parsed$4 : untyped\n<unconditional>"];
    bb155_0 -> bb155_2;
    bb155_1 [label = "()\n<unconditional>"];
    bb155_1 -> bb155_1;
    bb155_2 [label = "(statTmp$3, @parsed$4)\nouterLoops: 1\n<block-call>"];
    bb155_2 -> bb155_4;
    bb155_2 -> bb155_3;

    bb155_3 [label = "(@parsed$4)\nstatTmp$2 = @parsed$4.map() : untyped\n<ret>$32 = statTmp$2.flatten() : untyped\n<ret>$8 = return <ret>$32 : <bottom>\n<unconditional>"];
    bb155_3 -> bb155_1;
    bb155_4 [label = "(statTmp$3, @parsed$4)\nouterLoops: 1\n<block-nested: part> = load_arg(statTmp$3#map, 0) : untyped\nstatTmp$7 = NotSupported() : untyped\n<blockret>$5 = <block-nested: part>.[](statTmp$7) : untyped\n<unconditional>"];
    bb155_4 -> bb155_2;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#removed_lines" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#removed_lines";
    color = blue;
    bb158_0 [shape = invhouse];
    bb158_1 [shape = parallelogram];

    bb158_0 [label = "(statTmp$3, @parsed$4)\n@parsed$4 = alias @parsed : untyped\nstatTmp$3 = @parsed$4 : untyped\n<unconditional>"];
    bb158_0 -> bb158_2;
    bb158_1 [label = "()\n<unconditional>"];
    bb158_1 -> bb158_1;
    bb158_2 [label = "(statTmp$3, @parsed$4)\nouterLoops: 1\n<block-call>"];
    bb158_2 -> bb158_4;
    bb158_2 -> bb158_3;

    bb158_3 [label = "(@parsed$4)\nstatTmp$2 = @parsed$4.map() : untyped\n<ret>$33 = statTmp$2.flatten() : untyped\n<ret>$8 = return <ret>$33 : <bottom>\n<unconditional>"];
    bb158_3 -> bb158_1;
    bb158_4 [label = "(statTmp$3, @parsed$4)\nouterLoops: 1\n<block-nested: part> = load_arg(statTmp$3#map, 0) : untyped\nstatTmp$7 = NotSupported() : untyped\n<blockret>$5 = <block-nested: part>.[](statTmp$7) : untyped\n<unconditional>"];
    bb158_4 -> bb158_2;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_lines" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_lines";
    color = blue;
    bb161_0 [shape = invhouse];
    bb161_1 [shape = parallelogram];

    bb161_0 [label = "()\nstatTmp$3 = self : Diff\nstatTmp$2 = statTmp$3.added_lines() : untyped\nstatTmp$5 = self : Diff\nstatTmp$4 = statTmp$5.removed_lines() : untyped\n<ret>$34 = statTmp$2.+(statTmp$4) : untyped\n<ret>$6 = return <ret>$34 : <bottom>\n<unconditional>"];
    bb161_0 -> bb161_1;
    bb161_1 [label = "()\n<unconditional>"];
    bb161_1 -> bb161_1;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_openapi?" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#changed_openapi?";
    color = blue;
    bb162_0 [shape = invhouse];
    bb162_1 [shape = parallelogram];

    bb162_0 [label = "()\n<constant:untyped>$5 = alias <constant:untyped> : untyped\nstatTmp$3 = self : Diff\nstatTmp$2 = statTmp$3.changed_files() : untyped\n<ret>$35 = statTmp$2.include?(<constant:untyped>$5) : untyped\n<ret>$6 = return <ret>$35 : <bottom>\n<unconditional>"];
    bb162_0 -> bb162_1;
    bb162_1 [label = "()\n<unconditional>"];
    bb162_1 -> bb162_1;
}

subgraph "cluster_::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse" {
    label = "::<constant:Opus>::<constant:CIBot>::<constant:Gerald>::<constant:Diff>#parse";
    color = blue;
    bb164_0 [shape = invhouse];
    bb164_1 [shape = parallelogram];

    bb164_0 [label = "(parts)\n<self>$1 = self : Diff\ndiff = load_arg(<self>$1#parse, 0) : untyped\nstatTmp$5 = NotSupported() : untyped\nstatTmp$3 = diff.split(statTmp$5) : untyped\nstatTmp$6 = NotSupported() : untyped\nparts = statTmp$3.[](statTmp$6) : untyped\nifTmp$8 = parts : untyped\nifTmp$8"];
    bb164_0 -> bb164_2;
    bb164_0 -> bb164_3;

    bb164_1 [label = "()\n<unconditional>"];
    bb164_1 -> bb164_1;
    bb164_2 [label = "(parts)\n<unconditional>"];
    bb164_2 -> bb164_4;
    bb164_3 [label = "(parts)\nparts = NotSupported() : untyped\n<unconditional>"];
    bb164_3 -> bb164_4;
    bb164_4 [label = "(parts, statTmp$10)\nstatTmp$10 = parts : untyped\n<unconditional>"];
    bb164_4 -> bb164_5;
    bb164_5 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 1\n<block-call>"];
    bb164_5 -> bb164_7;
    bb164_5 -> bb164_6;

    bb164_6 [label = "(parts)\nstatTmp$9 = parts.map() : untyped\n<ret>$36 = statTmp$9.compact() : untyped\n<ret>$69 = return <ret>$36 : <bottom>\n<unconditional>"];
    bb164_6 -> bb164_1;
    bb164_7 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 1\n<block-nested: part> = load_arg(statTmp$10#map, 0) : untyped\nstatTmp$14 = 
 : String(\"\n\")\n<block-nested: lines> = <block-nested: part>.split(statTmp$14) : untyped\n<block-nested: b_name> = NotSupported() : untyped\n<block-nested: added_lines> = NotSupported() : untyped\n<block-nested: removed_lines> = NotSupported() : untyped\nstatTmp$19 = <block-nested: lines> : untyped\n<unconditional>"];
    bb164_7 -> bb164_8;
    bb164_8 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 2\n<block-call>"];
    bb164_8 -> bb164_10;
    bb164_8 -> bb164_9;

    bb164_9 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 1\nstatTmp$18 = <block-nested: lines>.each() : untyped\nifTmp$66 = <block-nested: b_name>.nil?() : untyped\nifTmp$66"];
    bb164_9 -> bb164_37;
    bb164_9 -> bb164_38;

    bb164_10 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 2\n<block-nested: line> = load_arg(statTmp$19#each, 0) : untyped\nstatTmp$23 = index  : String(\"index \")\nstatTmp$24 = @@ : String(\"@@\")\nstatTmp$25 = new file mode : String(\"new file mode\")\nifTmp$21 = <block-nested: line>.start_with?(statTmp$23, statTmp$24, statTmp$25) : untyped\nifTmp$21"];
    bb164_10 -> bb164_11;
    bb164_10 -> bb164_12;

    bb164_11 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 2\nreturnTmp$26 = NotSupported() : untyped\n<unconditional>"];
    bb164_11 -> bb164_8;
    bb164_12 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 2\nstatTmp$29 = --- : String(\"---\")\nifTmp$27 = <block-nested: line>.start_with?(statTmp$29) : untyped\nifTmp$27"];
    bb164_12 -> bb164_13;
    bb164_12 -> bb164_14;

    bb164_13 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 2\nstatTmp$32 = NotSupported() : untyped\n<block-nested: a_name> = <block-nested: line>.[](statTmp$32) : untyped\nifTmp$34 = <block-nested: b_name> : untyped\nifTmp$34"];
    bb164_13 -> bb164_15;
    bb164_13 -> bb164_16;

    bb164_14 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 2\nstatTmp$41 = +++ : String(\"+++\")\nifTmp$39 = <block-nested: line>.start_with?(statTmp$41) : untyped\nifTmp$39"];
    bb164_14 -> bb164_21;
    bb164_14 -> bb164_22;

    bb164_15 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 2\nstatTmp$36 = a/ : String(\"a/\")\nifTmp$33 = <block-nested: b_name>.start_with?(statTmp$36) : untyped\n<unconditional>"];
    bb164_15 -> bb164_17;
    bb164_16 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 2\nifTmp$33 = <block-nested: b_name> : untyped\n<unconditional>"];
    bb164_16 -> bb164_17;
    bb164_17 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 2\nifTmp$33"];
    bb164_17 -> bb164_18;
    bb164_17 -> bb164_19;

    bb164_18 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 2\nstatTmp$38 = NotSupported() : untyped\n<block-nested: a_name> = <block-nested: b_name>.[](statTmp$38) : untyped\n<unconditional>"];
    bb164_18 -> bb164_20;
    bb164_19 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 2\n<blockret>$20 = NotSupported() : untyped\n<unconditional>"];
    bb164_19 -> bb164_20;
    bb164_20 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 2\n<unconditional>"];
    bb164_20 -> bb164_36;
    bb164_21 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 2\nstatTmp$44 = NotSupported() : untyped\n<block-nested: b_name> = <block-nested: line>.[](statTmp$44) : untyped\nifTmp$46 = <block-nested: b_name> : untyped\nifTmp$46"];
    bb164_21 -> bb164_23;
    bb164_21 -> bb164_24;

    bb164_22 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 2\nstatTmp$53 = + : String(\"+\")\nifTmp$51 = <block-nested: line>.start_with?(statTmp$53) : untyped\nifTmp$51"];
    bb164_22 -> bb164_29;
    bb164_22 -> bb164_30;

    bb164_23 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 2\nstatTmp$48 = b/ : String(\"b/\")\nifTmp$45 = <block-nested: b_name>.start_with?(statTmp$48) : untyped\n<unconditional>"];
    bb164_23 -> bb164_25;
    bb164_24 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 2\nifTmp$45 = <block-nested: b_name> : untyped\n<unconditional>"];
    bb164_24 -> bb164_25;
    bb164_25 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 2\nifTmp$45"];
    bb164_25 -> bb164_26;
    bb164_25 -> bb164_27;

    bb164_26 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 2\nstatTmp$49 = <block-nested: b_name> : untyped\nstatTmp$50 = NotSupported() : untyped\n<block-nested: b_name> = statTmp$49.[](statTmp$50) : untyped\n<unconditional>"];
    bb164_26 -> bb164_28;
    bb164_27 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 2\n<blockret>$20 = NotSupported() : untyped\n<unconditional>"];
    bb164_27 -> bb164_28;
    bb164_28 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 2\n<unconditional>"];
    bb164_28 -> bb164_35;
    bb164_29 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 2\nstatTmp$57 = NotSupported() : untyped\nstatTmp$55 = <block-nested: line>.[](statTmp$57) : untyped\n<blockret>$20 = <block-nested: added_lines>.<<(statTmp$55) : untyped\n<unconditional>"];
    bb164_29 -> bb164_34;
    bb164_30 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 2\nstatTmp$60 = - : String(\"-\")\nifTmp$58 = <block-nested: line>.start_with?(statTmp$60) : untyped\nifTmp$58"];
    bb164_30 -> bb164_31;
    bb164_30 -> bb164_32;

    bb164_31 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 2\nstatTmp$64 = NotSupported() : untyped\nstatTmp$62 = <block-nested: line>.[](statTmp$64) : untyped\n<blockret>$20 = <block-nested: removed_lines>.<<(statTmp$62) : untyped\n<unconditional>"];
    bb164_31 -> bb164_33;
    bb164_32 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 2\n<blockret>$20 = NotSupported() : untyped\n<unconditional>"];
    bb164_32 -> bb164_33;
    bb164_33 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 2\n<unconditional>"];
    bb164_33 -> bb164_34;
    bb164_34 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 2\n<unconditional>"];
    bb164_34 -> bb164_35;
    bb164_35 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 2\n<unconditional>"];
    bb164_35 -> bb164_36;
    bb164_36 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 2\n<unconditional>"];
    bb164_36 -> bb164_8;
    bb164_37 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 1\nreturnTmp$68 = NotSupported() : untyped\n<unconditional>"];
    bb164_37 -> bb164_5;
    bb164_38 [label = "(parts, <block-nested: lines>, <block-nested: b_name>, <block-nested: added_lines>, <block-nested: removed_lines>, <block-nested: line>, statTmp$10, statTmp$19, ifTmp$33, ifTmp$45)\nouterLoops: 1\nstatTmp$65 = NotSupported() : untyped\n<blockret>$11 = NotSupported() : untyped\n<unconditional>"];
    bb164_38 -> bb164_5;
}

}

