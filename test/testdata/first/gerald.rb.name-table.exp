class <constant:Opus> ()
  class <constant:CIBot> ()
    class <constant:Gerald> ()
      class <constant:Diff> (<constant:Object>)
        field @parsed -> untyped
        field @raw -> untyped
        method added_files ()
          method <block>$7 (part)
            argument part<>
          method <block>$8 (part)
            argument part<>
        method added_lines ()
          method <block>$13 (part)
            argument part<>
        method affected_files ()
        method changed_files ()
          method <block>$11 (part)
            argument part<>
          method <block>$12 (part)
            argument part<>
        method changed_lines ()
        method changed_openapi? ()
        method deleted_files ()
          method <block>$10 (part)
            argument part<>
          method <block>$9 (part)
            argument part<>
        method initialize (raw_diff)
          argument raw_diff<>
        method parse (diff)
          argument diff<>
          method <block>$16 (part)
            argument part<>
            method <block>$17 (line)
              argument line<>
        method removed_lines ()
          method <block>$14 (part)
            argument part<>
      class <constant:MatchContext> (<constant:Object>)
        field @assignee -> untyped
        field @body -> untyped
        field @diff -> untyped
        field @gh_user -> untyped
        field @merge_branch -> untyped
        field @openapi_diff -> untyped
        field @repo -> untyped
        field @title -> untyped
        method initialize (repo, assignee, gh_user, merge_branch, body, title, diff, openapi_diff)
          argument assignee<>
          argument body<>
          argument diff<>
          argument gh_user<>
          argument merge_branch<>
          argument openapi_diff<>
          argument repo<>
          argument title<>
        method user_stripe_suffix? ()
      class <constant:MatchTimeBudget> (<constant:Object>)
        field @start -> untyped
        method check! ()
        method initialize ()
        method time_rule (rule)
          argument rule<>
        static-field <constant:PER_RULE_MS> -> untyped
        static-field <constant:TOTAL_TIME_MS> -> untyped
      class <constant:MatchTimeout> (<constant:untyped>)
        field @rule_token -> untyped
        method initialize (message, rule_token)
          argument message<>
          argument rule_token<optional, keyword>
      class <constant:Matcher> (<constant:untyped>)
        field @rules -> untyped
        method initialize ()
        method match (match_context)
          argument match_context<>
          method <block>$4 (r)
            argument r<>
            method <block>$5 ()
        static-field <constant:MAX_AFFECTED_FILES> -> untyped
      class <singleton class:<constant:Diff>> (<constant:Class>)
      class <singleton class:<constant:MatchContext>> (<constant:Class>)
      class <singleton class:<constant:MatchTimeBudget>> (<constant:Class>)
      class <singleton class:<constant:MatchTimeout>> (<constant:Class>)
      class <singleton class:<constant:Matcher>> (<constant:Class>)
class <singleton class:<constant:<root>>> (<constant:Class>)
class <singleton class:<constant:<root>>> (<constant:Class>)

