begin
  self(<singleton class:<root>>).require_relative("../../../extn")
  ::<dynamic>.init("__FILE__")
  module <emptyTree>::Opus::CIBot::Gerald<Gerald> < ()
    class <emptyTree>::MatchTimeout<MatchTimeout> < (::<dynamic>)
      self(<singleton class:MatchTimeout>).attr_reader(:rule_token)

      def initialize<initialize>(::Opus::CIBot::Gerald::MatchTimeout#initialize#message, rule_token: = "")
        begin
          super(message)
          @rule_token = ::Opus::CIBot::Gerald::MatchTimeout#initialize#rule_token
        end

    end

    class <emptyTree>::Matcher<Matcher> < (::Object)
      self(<singleton class:Matcher>).include(::<dynamic>)

      ::Opus::CIBot::Gerald::Matcher#MAX_AFFECTED_FILES = 100

      def initialize<initialize>()
        begin
          begin
            #assignTmp$0 = ::<dynamic>.query_by(:deleted_at_is_nil).load_all({}).partition(<Not Supported (BlockPass)>)
            @rules = #assignTmp$0.[](0)
            ::Opus::CIBot::Gerald::Matcher#initialize#invalid_rules = #assignTmp$0.[](1)
            #assignTmp$0
          end
          if ::Opus::CIBot::Gerald::Matcher#initialize#invalid_rules.empty?().!()
            begin
              ::Opus::CIBot::Gerald::Matcher#initialize#invalid_rule_ids = ::Opus::CIBot::Gerald::Matcher#initialize#invalid_rules.map(<Not Supported (BlockPass)>).join(",")
              self(Matcher).log().warn("Gerald skipping invalid rules: ".+(::Opus::CIBot::Gerald::Matcher#initialize#invalid_rule_ids))
            end
          else
            <emptyTree>
          end
        end

      def match<match>(::Opus::CIBot::Gerald::Matcher#match#match_context)
        begin
          if ::Opus::CIBot::Gerald::Matcher#match#match_context.diff().affected_files().count().>(::Opus::CIBot::Gerald::Matcher#MAX_AFFECTED_FILES)
            begin
              self(Matcher).log().warn("Gerald skipping large PR with ".concat(begin
                    ::Opus::CIBot::Gerald::Matcher#match#match_context.diff().affected_files().count()
                  end.to_s()).concat(" affected files").to_s())
              return []
            end
          else
            <emptyTree>
          end
          ::Opus::CIBot::Gerald::Matcher#match#budget = ::Opus::CIBot::Gerald::MatchTimeBudget.new()
          @rules.select() do |::Opus::CIBot::Gerald::Matcher#match#<block>$4#r|
            ::Opus::CIBot::Gerald::Matcher#match#budget.time_rule(::Opus::CIBot::Gerald::Matcher#match#<block>$4#r) do ||
              ::Opus::CIBot::Gerald::Matcher#match#<block>$4#r.matches?(::Opus::CIBot::Gerald::Matcher#match#match_context)
            end
          end
        end

    end

    class <emptyTree>::MatchContext<MatchContext> < (::Object)
      self(<singleton class:MatchContext>).attr_reader(:repo)

      self(<singleton class:MatchContext>).attr_reader(:assignee)

      self(<singleton class:MatchContext>).attr_reader(:gh_user)

      self(<singleton class:MatchContext>).attr_reader(:merge_branch)

      self(<singleton class:MatchContext>).attr_reader(:body)

      self(<singleton class:MatchContext>).attr_reader(:title)

      self(<singleton class:MatchContext>).attr_reader(:diff)

      self(<singleton class:MatchContext>).attr_reader(:openapi_diff)

      def initialize<initialize>(::Opus::CIBot::Gerald::MatchContext#initialize#repo, ::Opus::CIBot::Gerald::MatchContext#initialize#assignee, ::Opus::CIBot::Gerald::MatchContext#initialize#gh_user, ::Opus::CIBot::Gerald::MatchContext#initialize#merge_branch, ::Opus::CIBot::Gerald::MatchContext#initialize#body, ::Opus::CIBot::Gerald::MatchContext#initialize#title, ::Opus::CIBot::Gerald::MatchContext#initialize#diff, ::Opus::CIBot::Gerald::MatchContext#initialize#openapi_diff)
        begin
          @repo = ::Opus::CIBot::Gerald::MatchContext#initialize#repo
          @assignee = ::Opus::CIBot::Gerald::MatchContext#initialize#assignee
          @gh_user = ::Opus::CIBot::Gerald::MatchContext#initialize#gh_user
          @merge_branch = ::Opus::CIBot::Gerald::MatchContext#initialize#merge_branch
          @body = ::Opus::CIBot::Gerald::MatchContext#initialize#body
          @title = ::Opus::CIBot::Gerald::MatchContext#initialize#title
          @diff = ::Opus::CIBot::Gerald::MatchContext#initialize#diff
          @openapi_diff = ::Opus::CIBot::Gerald::MatchContext#initialize#openapi_diff
        end

      def user_stripe_suffix?<user_stripe_suffix?>()
        @repo.start_with?("stripe-internal/").!()

    end

    class <emptyTree>::MatchTimeBudget<MatchTimeBudget> < (::Object)
      ::Opus::CIBot::Gerald::MatchTimeBudget#TOTAL_TIME_MS = 10000

      ::Opus::CIBot::Gerald::MatchTimeBudget#PER_RULE_MS = 2000

      def initialize<initialize>()
        @start = ::<dynamic>.now()

      def check!<check!>()
        begin
          ::Opus::CIBot::Gerald::MatchTimeBudget#check!#dur_ms = begin
            ::<dynamic>.now().-(@start)
          end.*(1000)
          if ::Opus::CIBot::Gerald::MatchTimeBudget#check!#dur_ms.>(::Opus::CIBot::Gerald::MatchTimeBudget#TOTAL_TIME_MS)
            self(MatchTimeBudget).raise(::Opus::CIBot::Gerald::MatchTimeout.new("Gerald match time budged exceeded ".concat(begin
                    ::Opus::CIBot::Gerald::MatchTimeBudget#TOTAL_TIME_MS
                  end.to_s()).concat("ms").to_s()))
          else
            <emptyTree>
          end
        end

      def time_rule<time_rule>(::Opus::CIBot::Gerald::MatchTimeBudget#time_rule#rule)
        begin
          ::Opus::CIBot::Gerald::MatchTimeBudget#time_rule#rule_start = ::<dynamic>.now()
          ::Opus::CIBot::Gerald::MatchTimeBudget#time_rule#res = yield(<emptyTree>)
          ::Opus::CIBot::Gerald::MatchTimeBudget#time_rule#dur_ms = begin
            ::<dynamic>.now().-(::Opus::CIBot::Gerald::MatchTimeBudget#time_rule#rule_start)
          end.*(1000)
          if ::Opus::CIBot::Gerald::MatchTimeBudget#time_rule#dur_ms.>(::Opus::CIBot::Gerald::MatchTimeBudget#PER_RULE_MS)
            self(MatchTimeBudget).raise(::Opus::CIBot::Gerald::MatchTimeout.new("Gerald rule '".concat(begin
                    ::Opus::CIBot::Gerald::MatchTimeBudget#time_rule#rule.token()
                  end.to_s()).concat("' exceeded per-rule time budget actual=").concat(begin
                    ::Opus::CIBot::Gerald::MatchTimeBudget#time_rule#dur_ms.to_i()
                  end.to_s()).concat("ms budget=").concat(begin
                    ::Opus::CIBot::Gerald::MatchTimeBudget#PER_RULE_MS
                  end.to_s()).concat("ms").to_s(), {:rule_token => ::Opus::CIBot::Gerald::MatchTimeBudget#time_rule#rule.token()}))
          else
            <emptyTree>
          end
          self(MatchTimeBudget).check!()
          ::Opus::CIBot::Gerald::MatchTimeBudget#time_rule#res
        end

    end

    class <emptyTree>::Diff<Diff> < (::Object)
      def initialize<initialize>(::Opus::CIBot::Gerald::Diff#initialize#raw_diff)
        begin
          @raw = ::Opus::CIBot::Gerald::Diff#initialize#raw_diff
          @parsed = self(Diff).parse(::Opus::CIBot::Gerald::Diff#initialize#raw_diff)
        end

      def affected_files<affected_files>()
        self(Diff).added_files().+(self(Diff).deleted_files()).+(self(Diff).changed_files())

      def added_files<added_files>()
        @parsed.select() do |::Opus::CIBot::Gerald::Diff#added_files#<block>$7#part|
          ::Opus::CIBot::Gerald::Diff#added_files#<block>$7#part.[](:a_name).==("/dev/null")
        end.map() do |::Opus::CIBot::Gerald::Diff#added_files#<block>$8#part|
          ::Opus::CIBot::Gerald::Diff#added_files#<block>$8#part.[](:b_name)
        end

      def deleted_files<deleted_files>()
        @parsed.select() do |::Opus::CIBot::Gerald::Diff#deleted_files#<block>$9#part|
          ::Opus::CIBot::Gerald::Diff#deleted_files#<block>$9#part.[](:b_name).==("/dev/null")
        end.map() do |::Opus::CIBot::Gerald::Diff#deleted_files#<block>$10#part|
          ::Opus::CIBot::Gerald::Diff#deleted_files#<block>$10#part.[](:a_name)
        end

      def changed_files<changed_files>()
        @parsed.select() do |::Opus::CIBot::Gerald::Diff#changed_files#<block>$11#part|
          ::Opus::CIBot::Gerald::Diff#changed_files#<block>$11#part.[](:a_name).==(::Opus::CIBot::Gerald::Diff#changed_files#<block>$11#part.[](:b_name))
        end.map() do |::Opus::CIBot::Gerald::Diff#changed_files#<block>$12#part|
          ::Opus::CIBot::Gerald::Diff#changed_files#<block>$12#part.[](:b_name)
        end

      def added_lines<added_lines>()
        @parsed.map() do |::Opus::CIBot::Gerald::Diff#added_lines#<block>$13#part|
          ::Opus::CIBot::Gerald::Diff#added_lines#<block>$13#part.[](:added_lines)
        end.flatten()

      def removed_lines<removed_lines>()
        @parsed.map() do |::Opus::CIBot::Gerald::Diff#removed_lines#<block>$14#part|
          ::Opus::CIBot::Gerald::Diff#removed_lines#<block>$14#part.[](:removed_lines)
        end.flatten()

      def changed_lines<changed_lines>()
        self(Diff).added_lines().+(self(Diff).removed_lines())

      def changed_openapi?<changed_openapi?>()
        self(Diff).changed_files().include?(::<dynamic>)

      self(<singleton class:Diff>).private(def parse<parse>(::Opus::CIBot::Gerald::Diff#parse#diff)
          begin
            ::Opus::CIBot::Gerald::Diff#parse#parts = ::Opus::CIBot::Gerald::Diff#parse#diff.split(<Not Supported (Regexp)>).[](<Not Supported (IRange)>)
            if ::Opus::CIBot::Gerald::Diff#parse#parts
              ::Opus::CIBot::Gerald::Diff#parse#parts
            else
              ::Opus::CIBot::Gerald::Diff#parse#parts = []
            end
            ::Opus::CIBot::Gerald::Diff#parse#parts.map() do |::Opus::CIBot::Gerald::Diff#parse#<block>$16#part|
              begin
                ::Opus::CIBot::Gerald::Diff#parse#<block>$16#lines = ::Opus::CIBot::Gerald::Diff#parse#<block>$16#part.split("
")
                ::Opus::CIBot::Gerald::Diff#parse#<block>$16#a_name = ::Opus::CIBot::Gerald::Diff#parse#<block>$16#b_name = nil
                ::Opus::CIBot::Gerald::Diff#parse#<block>$16#added_lines = []
                ::Opus::CIBot::Gerald::Diff#parse#<block>$16#removed_lines = []
                ::Opus::CIBot::Gerald::Diff#parse#<block>$16#lines.each() do |::Opus::CIBot::Gerald::Diff#parse#<block>$16#<block>$17#line|
                  if ::Opus::CIBot::Gerald::Diff#parse#<block>$16#<block>$17#line.start_with?("index ", "@@", "new file mode")
                    next(<emptyTree>)
                  else
                    if ::Opus::CIBot::Gerald::Diff#parse#<block>$16#<block>$17#line.start_with?("---")
                      begin
                        ::Opus::CIBot::Gerald::Diff#parse#<block>$16#a_name = ::Opus::CIBot::Gerald::Diff#parse#<block>$16#<block>$17#line.[](<Not Supported (IRange)>)
                        if if ::Opus::CIBot::Gerald::Diff#parse#<block>$16#a_name
                            ::Opus::CIBot::Gerald::Diff#parse#<block>$16#a_name.start_with?("a/")
                          else
                            ::Opus::CIBot::Gerald::Diff#parse#<block>$16#a_name
                          end
                          ::Opus::CIBot::Gerald::Diff#parse#<block>$16#a_name = ::Opus::CIBot::Gerald::Diff#parse#<block>$16#a_name.[](<Not Supported (IRange)>)
                        else
                          <emptyTree>
                        end
                      end
                    else
                      if ::Opus::CIBot::Gerald::Diff#parse#<block>$16#<block>$17#line.start_with?("+++")
                        begin
                          ::Opus::CIBot::Gerald::Diff#parse#<block>$16#b_name = ::Opus::CIBot::Gerald::Diff#parse#<block>$16#<block>$17#line.[](<Not Supported (IRange)>)
                          if if ::Opus::CIBot::Gerald::Diff#parse#<block>$16#b_name
                              ::Opus::CIBot::Gerald::Diff#parse#<block>$16#b_name.start_with?("b/")
                            else
                              ::Opus::CIBot::Gerald::Diff#parse#<block>$16#b_name
                            end
                            ::Opus::CIBot::Gerald::Diff#parse#<block>$16#b_name = ::Opus::CIBot::Gerald::Diff#parse#<block>$16#b_name.[](<Not Supported (IRange)>)
                          else
                            <emptyTree>
                          end
                        end
                      else
                        if ::Opus::CIBot::Gerald::Diff#parse#<block>$16#<block>$17#line.start_with?("+")
                          ::Opus::CIBot::Gerald::Diff#parse#<block>$16#added_lines.<<(::Opus::CIBot::Gerald::Diff#parse#<block>$16#<block>$17#line.[](<Not Supported (IRange)>))
                        else
                          if ::Opus::CIBot::Gerald::Diff#parse#<block>$16#<block>$17#line.start_with?("-")
                            ::Opus::CIBot::Gerald::Diff#parse#<block>$16#removed_lines.<<(::Opus::CIBot::Gerald::Diff#parse#<block>$16#<block>$17#line.[](<Not Supported (IRange)>))
                          else
                            <emptyTree>
                          end
                        end
                      end
                    end
                  end
                end
                if ::Opus::CIBot::Gerald::Diff#parse#<block>$16#a_name.nil?()
                  next(<emptyTree>)
                else
                  <emptyTree>
                end
                {:a_name => ::Opus::CIBot::Gerald::Diff#parse#<block>$16#a_name, :b_name => ::Opus::CIBot::Gerald::Diff#parse#<block>$16#b_name, :added_lines => ::Opus::CIBot::Gerald::Diff#parse#<block>$16#added_lines, :removed_lines => ::Opus::CIBot::Gerald::Diff#parse#<block>$16#removed_lines}
              end
            end.compact()
          end)

    end

  end
end
