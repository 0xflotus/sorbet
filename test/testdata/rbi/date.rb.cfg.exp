digraph "date.rb" {
subgraph "cluster_::A#foo" {
    label = "::A#foo";
    color = blue;
    "bb::A#foo_0" [shape = invhouse];
    "bb::A#foo_1" [shape = parallelogram];

    "bb::A#foo_0" [
        label = "block[id=0]()\l<selfMethodTemp>$3: A = self\lt: Time = load_arg(<selfMethodTemp>$3: A#foo, 0)\l<statTemp>$5: DateTime = t: Time.to_datetime()\l<statTemp>$4: Date = <statTemp>$5: DateTime.to_date()\l<returnMethodTemp>$2: Time = <statTemp>$4: Date.to_time()\l<finalReturn>: <impossible> = return <returnMethodTemp>$2: Time\l<unconditional>\l"
    ];

    "bb::A#foo_0" -> "bb::A#foo_1" [style="bold"];
    "bb::A#foo_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::A#foo_1" -> "bb::A#foo_1" [style="bold"];
}

subgraph "cluster_::A#<static-init>" {
    label = "::A#<static-init>";
    color = blue;
    "bb::A#<static-init>_0" [shape = invhouse];
    "bb::A#<static-init>_1" [shape = parallelogram];

    "bb::A#<static-init>_0" [
        label = "block[id=0]()\l<statTemp>$5: <Class:A> = self\l<hashTemp>$7: Symbol(:\"t\") = :\"t\"\l<hashTemp>$8: <Class:Time> = alias <constant:Time>\l<magic>$9: <Magic> = alias <constant:<Magic>>\l<statTemp>$6: {t: <Class:Time>} = <magic>$9: <Magic>.<build-hash>(<hashTemp>$7: Symbol(:\"t\"), <hashTemp>$8: <Class:Time>)\l<statTemp>$4: Sorbet::Private::Builder = <statTemp>$5: <Class:A>.sig(<statTemp>$6: {t: <Class:Time>})\l<statTemp>$10: <Class:Time> = alias <constant:Time>\l<returnMethodTemp>$2: Sorbet::Private::Builder = <statTemp>$4: Sorbet::Private::Builder.returns(<statTemp>$10: <Class:Time>)\l<finalReturn>: <impossible> = return <returnMethodTemp>$2: Sorbet::Private::Builder\l<unconditional>\l"
    ];

    "bb::A#<static-init>_0" -> "bb::A#<static-init>_1" [style="bold"];
    "bb::A#<static-init>_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::A#<static-init>_1" -> "bb::A#<static-init>_1" [style="bold"];
}

}

