Read: {"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":48711,"rootPath":"/Users/jonfung/stripe/pay-server","rootUri":"file:///Users/jonfung/stripe/pay-server","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"]},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"]}},"definition":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"codeAction":{"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"typeDefinition":{"dynamicRegistration":true},"implementation":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true}}},"trace":"off","workspaceFolders":[{"uri":"file:///Users/jonfung/stripe/pay-server","name":"pay-server"}]}}
Write: {"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":1,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"definitionProvider":true,"hoverProvider":true,"referencesProvider":true,"signatureHelpProvider":{"triggerCharacters":["(",","]},"completionProvider":{"triggerCharacters":["."]}}}}
Read: {"jsonrpc":"2.0","method":"initialized","params":{}}
Read: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/jonfung/stripe/pay-server/jf_file.rb","languageId":"ruby","version":1,"text":"# typed: true\n\nclass B\n    # This is the documentation for a constant called FOOT.\n    # This is the second line for a constant called FOOT.\n    FOOT = 11\n\n    # Initialize documentation. This is the only line.\n    def initialize(a)\n      @a = 1\n    end\n\n    # This is an instance method called abcde.\n    def abcde\n      1\n    end\n\n    # This is a multiline instance method.\n    # All of the lines should be displayed in the docs.\n    # Including this one.\n    def multidoc_instance\n      1\n    end\n\n    # If there is a line between the documentation and the file,\n    # there will be no documentation displayed.\n\n    def nodocs\n      1\n    end\n\n    # @deprecated\n    # this is a deprecated method.\n    def deprecated_method\n      1\n    end\n\n    # this is a static method.\n    def self.hello\n      \"hello\"\n    end\nend\n"}}}
Read: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/jonfung/stripe/pay-server/jf_file.rb","version":32},"contentChanges":[{"text":"# typed: true\n\nclass B\n    # This is the documentation for a constant called FOOT.\n    # This is the second line for a constant called FOOT.\n    FOOT = 11\n\n    # Initialize documentation. This is the only line.\n    def initialize(a)\n      @a = 1\n    end\n\n    # This is an instance method called abcde.\n    def abcde\n      1\n    end\n\n    # This is a multiline instance method.\n    # All of the lines should be displayed in the docs.\n    # Including this one.\n    def multidoc_instance\n      1\n    end\n\n    # If there is a line between the documentation and the file,\n    # there will be no documentation displayed.\n\n    def nodocs\n      1\n    end\n\n    # @deprecated\n    # this is a deprecated method.\n    def deprecated_method\n      1\n    end\n\n    # this is a static method.\n    def self.hello\n      \"hello\"\n    end\nend\n\nc = B.new\n\nc.abc"}]}}
Read: {"jsonrpc":"2.0","id":32,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/jonfung/stripe/pay-server/jf_file.rb"},"position":{"line":45,"character":5},"context":{"triggerKind":3}}}
Write: {"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/jonfung/stripe/pay-server/jf_file.rb","diagnostics":[{"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":9}},"code":7004,"message":"Not enough arguments provided for method `B#initialize`. Expected: `1`, got: `0`","relatedInformation":[{"location":{"uri":"file:///Users/jonfung/stripe/pay-server/jf_file.rb","range":{"start":{"line":8,"character":4},"end":{"line":8,"character":21}}},"message":"`B#initialize` defined here"}]},{"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":4}},"code":7003,"message":"Method `abc` does not exist on `B`","relatedInformation":[]}]},"jsonrpc":"2.0"}
Write: {"jsonrpc":"2.0","id":32,"result":{"isIncomplete":"false","items":[{"label":"abcde","kind":3,"detail":"sig().returns(T.untyped)","insertTextFormat":2,"insertText":"abcde()${0}","documentation":" This is an instance method called abcde.\n"}]}}
Read: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/jonfung/stripe/pay-server/jf_file.rb","version":43},"contentChanges":[{"text":"# typed: true\n\nclass B\n    # This is the documentation for a constant called FOOT.\n    # This is the second line for a constant called FOOT.\n    FOOT = 11\n\n    # Initialize documentation. This is the only line.\n    def initialize(a)\n      @a = 1\n    end\n\n    # This is an instance method called abcde.\n    def abcde\n      1\n    end\n\n    # This is a multiline instance method.\n    # All of the lines should be displayed in the docs.\n    # Including this one.\n    def multidoc_instance\n      1\n    end\n\n    # If there is a line between the documentation and the file,\n    # there will be no documentation displayed.\n\n    def nodocs\n      1\n    end\n\n    # @deprecated\n    # this is a deprecated method.\n    def deprecated_method\n      1\n    end\n\n    # this is a static method.\n    def self.hello\n      \"hello\"\n    end\nend\n\nc = B.new\n\nc.multid"}]}}
Read: {"jsonrpc":"2.0","id":44,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/jonfung/stripe/pay-server/jf_file.rb"},"position":{"line":45,"character":8},"context":{"triggerKind":3}}}
Write: {"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/jonfung/stripe/pay-server/jf_file.rb","diagnostics":[{"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":9}},"code":7004,"message":"Not enough arguments provided for method `B#initialize`. Expected: `1`, got: `0`","relatedInformation":[{"location":{"uri":"file:///Users/jonfung/stripe/pay-server/jf_file.rb","range":{"start":{"line":8,"character":4},"end":{"line":8,"character":21}}},"message":"`B#initialize` defined here"}]},{"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":7}},"code":7003,"message":"Method `multid` does not exist on `B`","relatedInformation":[]}]},"jsonrpc":"2.0"}
Write: {"jsonrpc":"2.0","id":44,"result":{"isIncomplete":"false","items":[{"label":"multidoc_instance","kind":3,"detail":"sig().returns(T.untyped)","insertTextFormat":2,"insertText":"multidoc_instance()${0}","documentation":" This is a multiline instance method.\n All of the lines should be displayed in the docs.\n Including this one.\n"}]}}
Read: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/jonfung/stripe/pay-server/jf_file.rb","version":46},"contentChanges":[{"text":"# typed: true\n\nclass B\n    # This is the documentation for a constant called FOOT.\n    # This is the second line for a constant called FOOT.\n    FOOT = 11\n\n    # Initialize documentation. This is the only line.\n    def initialize(a)\n      @a = 1\n    end\n\n    # This is an instance method called abcde.\n    def abcde\n      1\n    end\n\n    # This is a multiline instance method.\n    # All of the lines should be displayed in the docs.\n    # Including this one.\n    def multidoc_instance\n      1\n    end\n\n    # If there is a line between the documentation and the file,\n    # there will be no documentation displayed.\n\n    def nodocs\n      1\n    end\n\n    # @deprecated\n    # this is a deprecated method.\n    def deprecated_method\n      1\n    end\n\n    # this is a static method.\n    def self.hello\n      \"hello\"\n    end\nend\n\nc = B.new\n\nc.nod"}]}}
Read: {"jsonrpc":"2.0","id":48,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/jonfung/stripe/pay-server/jf_file.rb"},"position":{"line":45,"character":5},"context":{"triggerKind":3}}}
Write: {"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/jonfung/stripe/pay-server/jf_file.rb","diagnostics":[{"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":9}},"code":7004,"message":"Not enough arguments provided for method `B#initialize`. Expected: `1`, got: `0`","relatedInformation":[{"location":{"uri":"file:///Users/jonfung/stripe/pay-server/jf_file.rb","range":{"start":{"line":8,"character":4},"end":{"line":8,"character":21}}},"message":"`B#initialize` defined here"}]},{"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":4}},"code":7003,"message":"Method `nod` does not exist on `B`","relatedInformation":[]}]},"jsonrpc":"2.0"}
Write: {"jsonrpc":"2.0","id":48,"result":{"isIncomplete":"false","items":[{"label":"nodocs","kind":3,"detail":"sig().returns(T.untyped)","insertTextFormat":2,"insertText":"nodocs()${0}"}]}}
Read: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/jonfung/stripe/pay-server/jf_file.rb","version":52},"contentChanges":[{"text":"# typed: true\n\nclass B\n    # This is the documentation for a constant called FOOT.\n    # This is the second line for a constant called FOOT.\n    FOOT = 11\n\n    # Initialize documentation. This is the only line.\n    def initialize(a)\n      @a = 1\n    end\n\n    # This is an instance method called abcde.\n    def abcde\n      1\n    end\n\n    # This is a multiline instance method.\n    # All of the lines should be displayed in the docs.\n    # Including this one.\n    def multidoc_instance\n      1\n    end\n\n    # If there is a line between the documentation and the file,\n    # there will be no documentation displayed.\n\n    def nodocs\n      1\n    end\n\n    # @deprecated\n    # this is a deprecated method.\n    def deprecated_method\n      1\n    end\n\n    # this is a static method.\n    def self.hello\n      \"hello\"\n    end\nend\n\nc = B.new\n\nc.deprec"}]}}
Read: {"jsonrpc":"2.0","id":55,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/jonfung/stripe/pay-server/jf_file.rb"},"position":{"line":45,"character":8},"context":{"triggerKind":3}}}
Write: {"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/jonfung/stripe/pay-server/jf_file.rb","diagnostics":[{"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":9}},"code":7004,"message":"Not enough arguments provided for method `B#initialize`. Expected: `1`, got: `0`","relatedInformation":[{"location":{"uri":"file:///Users/jonfung/stripe/pay-server/jf_file.rb","range":{"start":{"line":8,"character":4},"end":{"line":8,"character":21}}},"message":"`B#initialize` defined here"}]},{"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":7}},"code":7003,"message":"Method `deprec` does not exist on `B`","relatedInformation":[{"location":{"uri":"https://git.corp.stripe.com/stripe-internal/sorbet/tree/master/rbi/core/kernel.rbi#L473","range":{"start":{"line":472,"character":2},"end":{"line":472,"character":16}}},"message":"Did you mean: `proc`?"}]}]},"jsonrpc":"2.0"}
Write: {"jsonrpc":"2.0","id":55,"result":{"isIncomplete":"false","items":[{"label":"deprecated_method","kind":3,"detail":"sig().returns(T.untyped)","insertTextFormat":2,"insertText":"deprecated_method()${0}","deprecated":true,"documentation":" @deprecated\n this is a deprecated method.\n"}]}}
Read: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/jonfung/stripe/pay-server/jf_file.rb","version":56},"contentChanges":[{"text":"# typed: true\n\nclass B\n    # This is the documentation for a constant called FOOT.\n    # This is the second line for a constant called FOOT.\n    FOOT = 11\n\n    # Initialize documentation. This is the only line.\n    def initialize(a)\n      @a = 1\n    end\n\n    # This is an instance method called abcde.\n    def abcde\n      1\n    end\n\n    # This is a multiline instance method.\n    # All of the lines should be displayed in the docs.\n    # Including this one.\n    def multidoc_instance\n      1\n    end\n\n    # If there is a line between the documentation and the file,\n    # there will be no documentation displayed.\n\n    def nodocs\n      1\n    end\n\n    # @deprecated\n    # this is a deprecated method.\n    def deprecated_method\n      1\n    end\n\n    # this is a static method.\n    def self.hello\n      \"hello\"\n    end\nend\n\nB.he"}]}}
Read: {"jsonrpc":"2.0","id":61,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/jonfung/stripe/pay-server/jf_file.rb"},"position":{"line":43,"character":4},"context":{"triggerKind":3}}}
Write: {"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/jonfung/stripe/pay-server/jf_file.rb","diagnostics":[{"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":3}},"code":7003,"message":"Method `he` does not exist on `<Class:B>`","relatedInformation":[]}]},"jsonrpc":"2.0"}
Write: {"jsonrpc":"2.0","id":61,"result":{"isIncomplete":"false","items":[{"label":"hello","kind":3,"detail":"sig().returns(T.untyped)","insertTextFormat":2,"insertText":"hello()${0}","documentation":" this is a static method.\n"},{"label":"inherited","kind":3,"detail":"sig(arg0: Class).returns(T.untyped)","insertTextFormat":2,"insertText":"inherited(${1})${0}"}]}}
