// DO NOT MODIFY, see README

syntax = "proto3";

package com.stripe.payserver.events.cibot;


// Data reported to Redshift for the purpose of tracking master "uptime"
message SourceMetrics {
//    option (ext.owning_project) = "dev_productivity";
    /* option (ext.kafka_topic) = "cibot.master_status"; // TODO */
    /* option (ext.kafka_publish_config).sync = false; */
    /* option (ext.kafka_publish_config).wire_format = BSON; */
    /* option (ext.kafka_publish_config).envelope_collection = 'cibot_master_status'; */

    message SourceMetricEntry {
        string name = 1; // project.metric_name.unit (e.g. ruby_typer.running_time.msec)
        double value = 2;
    }

    string repo = 1; // stripe-internal/pay-server
    string sha = 2; // full SHA
    string status = 3; // good, failed
    string branch = 4;
    int64 timestamp = 5; // unix timestamp

    repeated SourceMetricEntry metrics = 10;
}
