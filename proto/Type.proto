syntax = "proto3";

package com.stripe.rubytyper;
import "proto/Symbol.proto";

message Type {
    message CompositeType {
        Type left = 1;
        Type right = 2;
    }
    message Applied {
        Symbol symbol = 1;
        repeated Type type_args = 2;
    }
    message Shape {
        Type underlying = 1;
        repeated Type keys = 2;
        repeated Type values = 3;
    }
    message Literal {
        enum Kind {
            INTEGER = 0;
            STRING = 1;
            SYMBOL = 2;
            TRUE = 3;
            FALSE = 4;
            FLOAT = 5;
        }
        Kind kind = 1;
        oneof type {
            int64 integer = 100;
            string string = 101;
            string symbol = 102;
            bool bool = 103;
            float float = 104;
        }
    }
    message Tuple {
        repeated Type elems = 2;
    }

    enum Kind {
        UNKNOWN = 0;
        APPLIED = 1;
        CLASS = 2;
        LITERAL = 3;
        SHAPE = 4;
        TUPLE = 5;
        // skip a few
        OR = 10;
        AND = 11;
    }
    Kind kind = 1;
    Type underlying = 2;
    oneof type {
        Symbol class = 100;
        CompositeType and = 101;
        CompositeType or = 102;
        Applied applied = 103;
        Shape shape = 104;
        Literal literal = 105;
        Tuple tuple = 106;
    }
}
