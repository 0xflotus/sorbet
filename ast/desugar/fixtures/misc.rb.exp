begin
  <Not Supported (Alias)>
  @iv<todo ivar sym> = 1
  @@cv<todo cvar sym> = 1
  $gv<todo gvar sym> = 1
  <Not Supported (Masgn)>
  <Not Supported (Kwbegin)>
  <Not Supported (Kwbegin)>
  <Not Supported (Kwbegin)>
  def foo<<todo sym>>(<Not Supported (Blockarg)>)
    <emtpyTree>
  <emtpyTree>.lambda() do ||
    <emtpyTree>
  end
  <Not Supported (Case)>
  "x".to_s()
  1.+(<Not Supported (Complex)>)
  <Not Supported (Float)>
  <Not Supported (Complex)>
  <Not Supported (DefS)>
  <Not Supported (SClass)>
  if <Not Supported (True)>
    1
  else 
    <Not Supported (False)>
  end
  <Not Supported (For)>
  <Not Supported (While)>
end
